{"version":3,"file":"tabs.es5.js","sources":["../../../src/lib/tabs/index.ts","../../../src/lib/tabs/tabs-module.ts","../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../../src/lib/tabs/tab-header.ts","../../../src/lib/tabs/tab-label-wrapper.ts","../../../src/lib/tabs/tab-group.ts","../../../src/lib/tabs/tab-body.ts","../../../src/lib/tabs/tab.ts","../../../src/lib/tabs/tab-label.ts","../../../src/lib/tabs/ink-bar.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {MdInkBar,MdTabBody,MdTabBodyOriginState,MdTabBodyPositionState,MdTabHeader,ScrollDirection,MdTabLabelWrapper,MdTab,MdTabLabel,MdTabNav,MdTabLink,MdTabsModule,MdTabChangeEvent,MdTabHeaderPosition,MdTabGroupBase,_MdTabGroupMixinBase,MdTabGroup,MatInkBar,MatTab,MatTabBody,MatTabBodyOriginState,MatTabBodyPositionState,MatTabChangeEvent,MatTabGroup,MatTabGroupBase,MatTabHeader,MatTabHeaderPosition,MatTabLabel,MatTabLabelWrapper,MatTabLink,MatTabNav,MatTabsModule} from './public_api';\n\nexport {MdTabBase as ɵe,_MdTabMixinBase as ɵf} from './tab';\nexport {MdTabHeaderBase as ɵa,_MdTabHeaderMixinBase as ɵb} from './tab-header';\nexport {MdTabLabelWrapperBase as ɵc,_MdTabLabelWrapperMixinBase as ɵd} from './tab-label-wrapper';\nexport {MdTabLinkBase as ɵi,MdTabNavBase as ɵg,_MdTabLinkMixinBase as ɵj,_MdTabNavMixinBase as ɵh} from './tab-nav-bar/tab-nav-bar';","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {ObserversModule} from '@angular/cdk/observers';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollDispatchModule, VIEWPORT_RULER_PROVIDER} from '@angular/cdk/scrolling';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MdCommonModule, MdRippleModule} from '@angular/material/core';\r\nimport {MdInkBar} from './ink-bar';\r\nimport {MdTab} from './tab';\r\nimport {MdTabBody} from './tab-body';\r\nimport {MdTabGroup} from './tab-group';\r\nimport {MdTabHeader} from './tab-header';\r\nimport {MdTabLabel} from './tab-label';\r\nimport {MdTabLabelWrapper} from './tab-label-wrapper';\r\nimport {MdTabLink, MdTabNav} from './tab-nav-bar/tab-nav-bar';\nexport class MdTabsModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [\r\n    CommonModule,\r\n    MdCommonModule,\r\n    PortalModule,\r\n    MdRippleModule,\r\n    ObserversModule,\r\n    ScrollDispatchModule,\r\n  ],\r\n  // Don't export all components because some are only to be used internally.\r\n  exports: [\r\n    MdCommonModule,\r\n    MdTabGroup,\r\n    MdTabLabel,\r\n    MdTab,\r\n    MdTabNav,\r\n    MdTabLink,\r\n  ],\r\n  declarations: [\r\n    MdTabGroup,\r\n    MdTabLabel,\r\n    MdTab,\r\n    MdInkBar,\r\n    MdTabLabelWrapper,\r\n    MdTabNav,\r\n    MdTabLink,\r\n    MdTabBody,\r\n    MdTabHeader\r\n  ],\r\n  providers: [VIEWPORT_RULER_PROVIDER],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdTabsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabsModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {auditTime, takeUntil} from '@angular/cdk/rxjs';\r\nimport {ViewportRuler} from '@angular/cdk/scrolling';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  QueryList,\r\n  Renderer2,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  CanColor,\r\n  CanDisable,\r\n  CanDisableRipple, MATERIAL_COMPATIBILITY_MODE,\r\n  MD_RIPPLE_GLOBAL_OPTIONS,\r\n  MdRipple,\r\n  mixinColor,\r\n  mixinDisabled,\r\n  mixinDisableRipple,\r\n  RippleGlobalOptions,\r\n  ThemePalette,\r\n} from '@angular/material/core';\r\nimport {fromEvent} from 'rxjs/observable/fromEvent';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {MdInkBar} from '../ink-bar';\n/**\n * \\@docs-private\n */\nexport class MdTabNavBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\r\n}\n\nfunction MdTabNavBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabNavBase.prototype._renderer;\n/** @type {?} */\nMdTabNavBase.prototype._elementRef;\n}\n\r\nexport const /** @type {?} */ _MdTabNavMixinBase = mixinDisableRipple(mixinColor(MdTabNavBase, 'primary'));\n/**\n * Navigation component matching the styles of the tab group header.\rProvides anchored navigation with animated ink bar.\n */\nexport class MdTabNav extends _MdTabNavMixinBase implements AfterContentInit, CanColor,\r\n    CanDisableRipple, OnDestroy {\n/**\n * Subject that emits when the component has been destroyed.\n */\nprivate _onDestroy = new Subject<void>();\r\n\r\n  _activeLinkChanged: boolean;\r\n  _activeLinkElement: ElementRef;\r\n\r\n   _inkBar: MdInkBar;\n/**\n * Query list of all tab links of the tab navigation.\n */\n_tabLinks: QueryList<MdTabLink>;\n/**\n * Background color of the tab nav.\n * @return {?}\n */\nget backgroundColor(): ThemePalette { return this._backgroundColor; }\n/**\n * @param {?} value\n * @return {?}\n */\nset backgroundColor(value: ThemePalette) {\r\n    let /** @type {?} */ nativeElement = this._elementRef.nativeElement;\r\n\r\n    this._renderer.removeClass(nativeElement, `mat-background-${this.backgroundColor}`);\r\n\r\n    if (value) {\r\n      this._renderer.addClass(nativeElement, `mat-background-${value}`);\r\n    }\r\n\r\n    this._backgroundColor = value;\r\n  }\nprivate _backgroundColor: ThemePalette;\n/**\n * Whether ripples should be disabled for all links or not.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\r\n    this._disableRipple = coerceBooleanProperty(value);\r\n    this._setLinkDisableRipple();\r\n  }\nprivate _disableRipple: boolean = false;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _dir\n * @param {?} _ngZone\n * @param {?} _changeDetectorRef\n */\nconstructor(renderer: Renderer2,\r\n              elementRef: ElementRef,\nprivate _dir: Directionality,\nprivate _ngZone: NgZone,\nprivate _changeDetectorRef: ChangeDetectorRef) {\r\n    super(renderer, elementRef);\r\n  }\n/**\n * Notifies the component that the active link has been changed.\n * @param {?} element\n * @return {?}\n */\nupdateActiveLink(element: ElementRef) {\r\n    this._activeLinkChanged = this._activeLinkElement != element;\r\n    this._activeLinkElement = element;\r\n\r\n    if (this._activeLinkChanged) {\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      let /** @type {?} */ dirChange = this._dir ? this._dir.change : observableOf(null);\r\n      let /** @type {?} */ resize = typeof window !== 'undefined' ?\r\n          auditTime.call(fromEvent(window, 'resize'), 10) :\r\n          observableOf(null);\r\n\r\n      return takeUntil.call(merge(dirChange, resize), this._onDestroy).subscribe(() => {\r\n        this._alignInkBar();\r\n      });\r\n    });\r\n\r\n    this._setLinkDisableRipple();\r\n  }\n/**\n * Checks if the active link has been changed and, if so, will update the ink bar.\n * @return {?}\n */\nngAfterContentChecked(): void {\r\n    if (this._activeLinkChanged) {\r\n      this._alignInkBar();\r\n      this._activeLinkChanged = false;\r\n    }\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\n/**\n * Aligns the ink bar to the active link.\n * @return {?}\n */\n_alignInkBar(): void {\r\n    if (this._activeLinkElement) {\r\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\r\n    }\r\n  }\n/**\n * Sets the `disableRipple` property on each link of the navigation bar.\n * @return {?}\n */\nprivate _setLinkDisableRipple() {\r\n    if (this._tabLinks) {\r\n      this._tabLinks.forEach(link => link.disableRipple = this.disableRipple);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: '[md-tab-nav-bar], [mat-tab-nav-bar]',\r\n  inputs: ['color', 'disableRipple'],\r\n  templateUrl: 'tab-nav-bar.html',\r\n  styleUrls: ['tab-nav-bar.css'],\r\n  host: {'class': 'mat-tab-nav-bar'},\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  viewProviders: [{provide: MATERIAL_COMPATIBILITY_MODE, useValue: true}],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: NgZone, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_inkBar': [{ type: ViewChild, args: [MdInkBar, ] },],\n'_tabLinks': [{ type: ContentChildren, args: [forwardRef(() => MdTabLink), {descendants: true}, ] },],\n'backgroundColor': [{ type: Input },],\n};\n}\n\nfunction MdTabNav_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabNav.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabNav.ctorParameters;\n/** @type {?} */\nMdTabNav.propDecorators;\n/**\n * Subject that emits when the component has been destroyed.\n * @type {?}\n */\nMdTabNav.prototype._onDestroy;\n/** @type {?} */\nMdTabNav.prototype._activeLinkChanged;\n/** @type {?} */\nMdTabNav.prototype._activeLinkElement;\n/** @type {?} */\nMdTabNav.prototype._inkBar;\n/**\n * Query list of all tab links of the tab navigation.\n * @type {?}\n */\nMdTabNav.prototype._tabLinks;\n/** @type {?} */\nMdTabNav.prototype._backgroundColor;\n/** @type {?} */\nMdTabNav.prototype._disableRipple;\n/** @type {?} */\nMdTabNav.prototype._dir;\n/** @type {?} */\nMdTabNav.prototype._ngZone;\n/** @type {?} */\nMdTabNav.prototype._changeDetectorRef;\n}\n\nexport class MdTabLinkBase {}\r\nexport const /** @type {?} */ _MdTabLinkMixinBase = mixinDisabled(MdTabLinkBase);\n/**\n * Link inside of a `md-tab-nav-bar`.\n */\nexport class MdTabLink extends _MdTabLinkMixinBase implements OnDestroy, CanDisable {\n/**\n * Whether the tab link is active or not.\n */\nprivate _isActive: boolean = false;\n/**\n * Whether the ripples for this tab should be disabled or not.\n */\nprivate _disableRipple: boolean = false;\n/**\n * Reference to the instance of the ripple for the tab link.\n */\nprivate _tabLinkRipple: MdRipple;\n/**\n * Whether the link is active.\n * @return {?}\n */\nget active(): boolean { return this._isActive; }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\r\n    this._isActive = value;\r\n    if (value) {\r\n      this._mdTabNavBar.updateActiveLink(this._elementRef);\r\n    }\r\n  }\n/**\n * Whether ripples should be disabled or not.\n * @return {?}\n */\nget disableRipple(): boolean { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\r\n    this._disableRipple = value;\r\n    this._tabLinkRipple.disabled = this.disableRipple;\r\n    this._tabLinkRipple._updateRippleRenderer();\r\n  }\n/**\n * \\@docs-private\n * @return {?}\n */\nget tabIndex(): number {\r\n    return this.disabled ? -1 : 0;\r\n  }\n/**\n * @param {?} _mdTabNavBar\n * @param {?} _elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} platform\n * @param {?} globalOptions\n */\nconstructor(private _mdTabNavBar: MdTabNav,\nprivate _elementRef: ElementRef,\r\n              ngZone: NgZone,\r\n              ruler: ViewportRuler,\r\n              platform: Platform,\r\n                globalOptions: RippleGlobalOptions) {\r\n    super();\r\n\r\n    // Manually create a ripple instance that uses the tab link element as trigger element.\r\n    // Notice that the lifecycle hooks for the ripple config won't be called anymore.\r\n    this._tabLinkRipple = new MdRipple(_elementRef, ngZone, ruler, platform, globalOptions);\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    // Manually call the ngOnDestroy lifecycle hook of the ripple instance because it won't be\r\n    // called automatically since its instance is not created by Angular.\r\n    this._tabLinkRipple.ngOnDestroy();\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[md-tab-link], [mat-tab-link], [mdTabLink], [matTabLink]',\r\n  inputs: ['disabled'],\r\n  host: {\r\n    'class': 'mat-tab-link',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.tabindex]': 'tabIndex',\r\n    '[class.mat-tab-disabled]': 'disabled'\r\n  }\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdTabNav, },\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input },],\n};\n}\n\nfunction MdTabLink_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLink.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLink.ctorParameters;\n/** @type {?} */\nMdTabLink.propDecorators;\n/**\n * Whether the tab link is active or not.\n * @type {?}\n */\nMdTabLink.prototype._isActive;\n/**\n * Whether the ripples for this tab should be disabled or not.\n * @type {?}\n */\nMdTabLink.prototype._disableRipple;\n/**\n * Reference to the instance of the ripple for the tab link.\n * @type {?}\n */\nMdTabLink.prototype._tabLinkRipple;\n/** @type {?} */\nMdTabLink.prototype._mdTabNavBar;\n/** @type {?} */\nMdTabLink.prototype._elementRef;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE} from '@angular/cdk/keycodes';\r\nimport {auditTime, startWith} from '@angular/cdk/rxjs';\r\nimport {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  Renderer2,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  CanDisableRipple, MATERIAL_COMPATIBILITY_MODE,\r\n  mixinDisableRipple\r\n} from '@angular/material/core';\r\nimport {fromEvent} from 'rxjs/observable/fromEvent';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MdInkBar} from './ink-bar';\r\nimport {MdTabLabelWrapper} from './tab-label-wrapper';\r\n\r\n\r\n/**\r\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\r\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\r\n * beginning of the list.\r\n */\r\nexport type ScrollDirection = 'after' | 'before';\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\rprovide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * \\@docs-private\n */\nexport class MdTabHeaderBase {}\r\nexport const /** @type {?} */ _MdTabHeaderMixinBase = mixinDisableRipple(MdTabHeaderBase);\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\ran ink bar that follows the currently selected tab. When the tabs list's width exceeds the\rwidth of the header container, then arrows will be displayed to allow the user to scroll\rleft and right across the header.\r\\@docs-private\n */\nexport class MdTabHeader extends _MdTabHeaderMixinBase\r\n    implements AfterContentChecked, AfterContentInit, OnDestroy, CanDisableRipple {\r\n\r\n   _labelWrappers: QueryList<MdTabLabelWrapper>;\r\n   _inkBar: MdInkBar;\r\n   _tabListContainer: ElementRef;\r\n   _tabList: ElementRef;\n/**\n * The tab index that is focused.\n */\nprivate _focusIndex: number = 0;\n/**\n * The distance in pixels that the tab labels should be translated to the left.\n */\nprivate _scrollDistance = 0;\n/**\n * Whether the header should scroll to the selected index after the view has been checked.\n */\nprivate _selectedIndexChanged = false;\n/**\n * Combines listeners that will re-align the ink bar whenever they're invoked.\n */\nprivate _realignInkBar = Subscription.EMPTY;\n/**\n * Whether the controls for pagination should be displayed\n */\n_showPaginationControls = false;\n/**\n * Whether the tab list can be scrolled more towards the end of the tab label list.\n */\n_disableScrollAfter = true;\n/**\n * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n */\n_disableScrollBefore = true;\n/**\n * The number of tab labels that are displayed on the header. When this changes, the header\rshould re-evaluate the scroll position.\n */\nprivate _tabLabelCount: number;\n/**\n * Whether the scroll distance has changed and should be applied after the view is checked.\n */\nprivate _scrollDistanceChanged: boolean;\nprivate _selectedIndex: number = 0;\n/**\n * The index of the active tab.\n * @return {?}\n */\nget selectedIndex(): number { return this._selectedIndex; }\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number) {\r\n    this._selectedIndexChanged = this._selectedIndex != value;\r\n    this._selectedIndex = value;\r\n    this._focusIndex = value;\r\n  }\n/**\n * Event emitted when the option is selected.\n */\nselectFocusedIndex = new EventEmitter();\n/**\n * Event emitted when a label is focused.\n */\nindexFocused = new EventEmitter();\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _changeDetectorRef\n * @param {?} _dir\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _dir: Directionality) {\r\n    super();\r\n  }\n/**\n * @return {?}\n */\nngAfterContentChecked(): void {\r\n    // If the number of tab labels have changed, check if scrolling should be enabled\r\n    if (this._tabLabelCount != this._labelWrappers.length) {\r\n      this._updatePagination();\r\n      this._tabLabelCount = this._labelWrappers.length;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\r\n    // should be disabled.\r\n    if (this._selectedIndexChanged) {\r\n      this._scrollToLabel(this._selectedIndex);\r\n      this._checkScrollingControls();\r\n      this._alignInkBarToSelectedTab();\r\n      this._selectedIndexChanged = false;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\r\n    // then translate the header to reflect this.\r\n    if (this._scrollDistanceChanged) {\r\n      this._updateTabScrollPosition();\r\n      this._scrollDistanceChanged = false;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      case RIGHT_ARROW:\r\n        this._focusNextTab();\r\n        break;\r\n      case LEFT_ARROW:\r\n        this._focusPreviousTab();\r\n        break;\r\n      case ENTER:\r\n      case SPACE:\r\n        this.selectFocusedIndex.emit(this.focusIndex);\r\n        event.preventDefault();\r\n        break;\r\n    }\r\n  }\n/**\n * Aligns the ink bar to the selected tab on load.\n * @return {?}\n */\nngAfterContentInit() {\r\n    const /** @type {?} */ dirChange = this._dir ? this._dir.change : observableOf(null);\r\n    const /** @type {?} */ resize = typeof window !== 'undefined' ?\r\n        auditTime.call(fromEvent(window, 'resize'), 150) :\r\n        observableOf(null);\r\n\r\n    this._realignInkBar = startWith.call(merge(dirChange, resize), null).subscribe(() => {\r\n      this._updatePagination();\r\n      this._alignInkBarToSelectedTab();\r\n    });\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    this._realignInkBar.unsubscribe();\r\n  }\n/**\n * Callback for when the MutationObserver detects that the content has changed.\n * @return {?}\n */\n_onContentChanges() {\r\n    this._updatePagination();\r\n    this._alignInkBarToSelectedTab();\r\n    this._changeDetectorRef.markForCheck();\r\n  }\n/**\n * Updating the view whether pagination should be enabled or not\n * @return {?}\n */\n_updatePagination() {\r\n    this._checkPaginationEnabled();\r\n    this._checkScrollingControls();\r\n    this._updateTabScrollPosition();\r\n  }\n/**\n * When the focus index is set, we must manually send focus to the correct label\n * @param {?} value\n * @return {?}\n */\nset focusIndex(value: number) {\r\n    if (!this._isValidIndex(value) || this._focusIndex == value) { return; }\r\n\r\n    this._focusIndex = value;\r\n    this.indexFocused.emit(value);\r\n    this._setTabFocus(value);\r\n  }\n/**\n * Tracks which element has focus; used for keyboard navigation\n * @return {?}\n */\nget focusIndex(): number { return this._focusIndex; }\n/**\n * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\rproviding a valid index and return true.\n * @param {?} index\n * @return {?}\n */\n_isValidIndex(index: number): boolean {\r\n    if (!this._labelWrappers) { return true; }\r\n\r\n    const /** @type {?} */ tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\r\n    return !!tab && !tab.disabled;\r\n  }\n/**\n * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\rscrolling is enabled.\n * @param {?} tabIndex\n * @return {?}\n */\n_setTabFocus(tabIndex: number) {\r\n    if (this._showPaginationControls) {\r\n      this._scrollToLabel(tabIndex);\r\n    }\r\n\r\n    if (this._labelWrappers && this._labelWrappers.length) {\r\n      this._labelWrappers.toArray()[tabIndex].focus();\r\n\r\n      // Do not let the browser manage scrolling to focus the element, this will be handled\r\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\r\n      // should be the full width minus the offset width.\r\n      const /** @type {?} */ containerEl = this._tabListContainer.nativeElement;\r\n      const /** @type {?} */ dir = this._getLayoutDirection();\r\n\r\n      if (dir == 'ltr') {\r\n        containerEl.scrollLeft = 0;\r\n      } else {\r\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\r\n      }\r\n    }\r\n  }\n/**\n * Moves the focus towards the beginning or the end of the list depending on the offset provided.\rValid offsets are 1 and -1.\n * @param {?} offset\n * @return {?}\n */\n_moveFocus(offset: number) {\r\n    if (this._labelWrappers) {\r\n      const /** @type {?} */ tabs: MdTabLabelWrapper[] = this._labelWrappers.toArray();\r\n\r\n      for (let /** @type {?} */ i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {\r\n        if (this._isValidIndex(i)) {\r\n          this.focusIndex = i;\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\n/**\n * Increment the focus index by 1 until a valid tab is found.\n * @return {?}\n */\n_focusNextTab(): void {\r\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? 1 : -1);\r\n  }\n/**\n * Decrement the focus index by 1 until a valid tab is found.\n * @return {?}\n */\n_focusPreviousTab(): void {\r\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? -1 : 1);\r\n  }\n/**\n * The layout direction of the containing app.\n * @return {?}\n */\n_getLayoutDirection(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\n/**\n * Performs the CSS transformation on the tab list that will cause the list to scroll.\n * @return {?}\n */\n_updateTabScrollPosition() {\r\n    const /** @type {?} */ scrollDistance = this.scrollDistance;\r\n    const /** @type {?} */ translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\r\n\r\n    this._renderer.setStyle(this._tabList.nativeElement, 'transform',\r\n        `translate3d(${translateX}px, 0, 0)`);\r\n  }\n/**\n * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n * @param {?} v\n * @return {?}\n */\nset scrollDistance(v: number) {\r\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\r\n\r\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\r\n    // transformation can move the header.\r\n    this._scrollDistanceChanged = true;\r\n    this._checkScrollingControls();\r\n  }\n/**\n * @return {?}\n */\nget scrollDistance(): number { return this._scrollDistance; }\n/**\n * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\rthe end of the list, respectively). The distance to scroll is computed to be a third of the\rlength of the tab list view window.\r\rThis is an expensive call that forces a layout reflow to compute box and scroll metrics and\rshould be called sparingly.\n * @param {?} scrollDir\n * @return {?}\n */\n_scrollHeader(scrollDir: ScrollDirection) {\r\n    const /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n\r\n    // Move the scroll distance one-third the length of the tab list's viewport.\r\n    this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\r\n  }\n/**\n * Moves the tab list such that the desired tab label (marked by index) is moved into view.\r\rThis is an expensive call that forces a layout reflow to compute box and scroll metrics and\rshould be called sparingly.\n * @param {?} labelIndex\n * @return {?}\n */\n_scrollToLabel(labelIndex: number) {\r\n    const /** @type {?} */ selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\r\n\r\n    if (!selectedLabel) { return; }\r\n\r\n    // The view length is the visible width of the tab labels.\r\n    const /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n\r\n    let /** @type {?} */ labelBeforePos: number, /** @type {?} */ labelAfterPos: number;\r\n    if (this._getLayoutDirection() == 'ltr') {\r\n      labelBeforePos = selectedLabel.getOffsetLeft();\r\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\r\n    } else {\r\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\r\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\r\n    }\r\n\r\n    const /** @type {?} */ beforeVisiblePos = this.scrollDistance;\r\n    const /** @type {?} */ afterVisiblePos = this.scrollDistance + viewLength;\r\n\r\n    if (labelBeforePos < beforeVisiblePos) {\r\n      // Scroll header to move label to the before direction\r\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\r\n    } else if (labelAfterPos > afterVisiblePos) {\r\n      // Scroll header to move label to the after direction\r\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\r\n    }\r\n  }\n/**\n * Evaluate whether the pagination controls should be displayed. If the scroll width of the\rtab list is wider than the size of the header container, then the pagination controls should\rbe shown.\r\rThis is an expensive call that forces a layout reflow to compute box and scroll metrics and\rshould be called sparingly.\n * @return {?}\n */\n_checkPaginationEnabled() {\r\n    const /** @type {?} */ isEnabled =\r\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\r\n\r\n    if (!isEnabled) {\r\n      this.scrollDistance = 0;\r\n    }\r\n\r\n    if (isEnabled !== this._showPaginationControls) {\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    this._showPaginationControls = isEnabled;\r\n  }\n/**\n * Evaluate whether the before and after controls should be enabled or disabled.\rIf the header is at the beginning of the list (scroll distance is equal to 0) then disable the\rbefore button. If the header is at the end of the list (scroll distance is equal to the\rmaximum distance we can scroll), then disable the after button.\r\rThis is an expensive call that forces a layout reflow to compute box and scroll metrics and\rshould be called sparingly.\n * @return {?}\n */\n_checkScrollingControls() {\r\n    // Check if the pagination arrows should be activated.\r\n    this._disableScrollBefore = this.scrollDistance == 0;\r\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\r\n    this._changeDetectorRef.markForCheck();\r\n  }\n/**\n * Determines what is the maximum length in pixels that can be set for the scroll distance. This\ris equal to the difference in width between the tab list container and tab header container.\r\rThis is an expensive call that forces a layout reflow to compute box and scroll metrics and\rshould be called sparingly.\n * @return {?}\n */\n_getMaxScrollDistance(): number {\r\n    const /** @type {?} */ lengthOfTabList = this._tabList.nativeElement.scrollWidth;\r\n    const /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\r\n    return (lengthOfTabList - viewLength) || 0;\r\n  }\n/**\n * Tells the ink-bar to align itself to the current label wrapper\n * @return {?}\n */\nprivate _alignInkBarToSelectedTab(): void {\r\n    const /** @type {?} */ selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\r\n        this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\r\n        null;\r\n\r\n    this._inkBar.alignToElement(selectedLabelWrapper);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: 'md-tab-header, mat-tab-header',\r\n  templateUrl: 'tab-header.html',\r\n  styleUrls: ['tab-header.css'],\r\n  inputs: ['disableRipple'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    'class': 'mat-tab-header',\r\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\r\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\r\n  },\r\n  viewProviders: [{provide: MATERIAL_COMPATIBILITY_MODE, useValue: true}],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ChangeDetectorRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_labelWrappers': [{ type: ContentChildren, args: [MdTabLabelWrapper, ] },],\n'_inkBar': [{ type: ViewChild, args: [MdInkBar, ] },],\n'_tabListContainer': [{ type: ViewChild, args: ['tabListContainer', ] },],\n'_tabList': [{ type: ViewChild, args: ['tabList', ] },],\n'selectedIndex': [{ type: Input },],\n'selectFocusedIndex': [{ type: Output },],\n'indexFocused': [{ type: Output },],\n};\n}\n\nfunction MdTabHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabHeader.ctorParameters;\n/** @type {?} */\nMdTabHeader.propDecorators;\n/** @type {?} */\nMdTabHeader.prototype._labelWrappers;\n/** @type {?} */\nMdTabHeader.prototype._inkBar;\n/** @type {?} */\nMdTabHeader.prototype._tabListContainer;\n/** @type {?} */\nMdTabHeader.prototype._tabList;\n/**\n * The tab index that is focused.\n * @type {?}\n */\nMdTabHeader.prototype._focusIndex;\n/**\n * The distance in pixels that the tab labels should be translated to the left.\n * @type {?}\n */\nMdTabHeader.prototype._scrollDistance;\n/**\n * Whether the header should scroll to the selected index after the view has been checked.\n * @type {?}\n */\nMdTabHeader.prototype._selectedIndexChanged;\n/**\n * Combines listeners that will re-align the ink bar whenever they're invoked.\n * @type {?}\n */\nMdTabHeader.prototype._realignInkBar;\n/**\n * Whether the controls for pagination should be displayed\n * @type {?}\n */\nMdTabHeader.prototype._showPaginationControls;\n/**\n * Whether the tab list can be scrolled more towards the end of the tab label list.\n * @type {?}\n */\nMdTabHeader.prototype._disableScrollAfter;\n/**\n * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n * @type {?}\n */\nMdTabHeader.prototype._disableScrollBefore;\n/**\n * The number of tab labels that are displayed on the header. When this changes, the header\rshould re-evaluate the scroll position.\n * @type {?}\n */\nMdTabHeader.prototype._tabLabelCount;\n/**\n * Whether the scroll distance has changed and should be applied after the view is checked.\n * @type {?}\n */\nMdTabHeader.prototype._scrollDistanceChanged;\n/** @type {?} */\nMdTabHeader.prototype._selectedIndex;\n/**\n * Event emitted when the option is selected.\n * @type {?}\n */\nMdTabHeader.prototype.selectFocusedIndex;\n/**\n * Event emitted when a label is focused.\n * @type {?}\n */\nMdTabHeader.prototype.indexFocused;\n/** @type {?} */\nMdTabHeader.prototype._elementRef;\n/** @type {?} */\nMdTabHeader.prototype._renderer;\n/** @type {?} */\nMdTabHeader.prototype._changeDetectorRef;\n/** @type {?} */\nMdTabHeader.prototype._dir;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Directive, ElementRef} from '@angular/core';\r\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\n/**\n * \\@docs-private\n */\nexport class MdTabLabelWrapperBase {}\r\nexport const /** @type {?} */ _MdTabLabelWrapperMixinBase = mixinDisabled(MdTabLabelWrapperBase);\n/**\n * Used in the `md-tab-group` view to display tab labels.\r\\@docs-private\n */\nexport class MdTabLabelWrapper extends _MdTabLabelWrapperMixinBase implements CanDisable {\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) {\r\n    super();\r\n  }\n/**\n * Sets focus on the wrapper element\n * @return {?}\n */\nfocus(): void {\r\n    this.elementRef.nativeElement.focus();\r\n  }\n/**\n * @return {?}\n */\ngetOffsetLeft(): number {\r\n    return this.elementRef.nativeElement.offsetLeft;\r\n  }\n/**\n * @return {?}\n */\ngetOffsetWidth(): number {\r\n    return this.elementRef.nativeElement.offsetWidth;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[mdTabLabelWrapper], [matTabLabelWrapper]',\r\n  inputs: ['disabled'],\r\n  host: {\r\n    '[class.mat-tab-disabled]': 'disabled'\r\n  }\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction MdTabLabelWrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLabelWrapper.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLabelWrapper.ctorParameters;\n/** @type {?} */\nMdTabLabelWrapper.prototype.elementRef;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {\r\n  ViewChild,\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  QueryList,\r\n  ContentChildren,\r\n  ElementRef,\r\n  Renderer2,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  AfterViewChecked,\r\n  AfterContentInit,\r\n  AfterContentChecked,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MdTab} from './tab';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {\r\n  CanDisableRipple, MATERIAL_COMPATIBILITY_MODE,\r\n  mixinDisableRipple\r\n} from '@angular/material/core';\r\nimport {CanColor, mixinColor, ThemePalette} from '@angular/material/core';\n/**\n * Used to generate unique ID's for each tab component\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nexport class MdTabChangeEvent {\r\n  index: number;\r\n  tab: MdTab;\r\n}\n\nfunction MdTabChangeEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabChangeEvent.prototype.index;\n/** @type {?} */\nMdTabChangeEvent.prototype.tab;\n}\n\r\n\r\n/** Possible positions for the tab header. */\r\nexport type MdTabHeaderPosition = 'above' | 'below';\n/**\n * \\@docs-private\n */\nexport class MdTabGroupBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\r\n}\n\nfunction MdTabGroupBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabGroupBase.prototype._renderer;\n/** @type {?} */\nMdTabGroupBase.prototype._elementRef;\n}\n\r\nexport const /** @type {?} */ _MdTabGroupMixinBase = mixinColor(mixinDisableRipple(MdTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\ranimated ink-bar, keyboard navigation, and screen reader.\rSee: https://www.google.com/design/spec/components/tabs.html\n */\nexport class MdTabGroup extends _MdTabGroupMixinBase implements AfterContentInit,\r\n    AfterContentChecked, AfterViewChecked, OnDestroy, CanColor, CanDisableRipple {\r\n\r\n   _tabs: QueryList<MdTab>;\r\n\r\n   _tabBodyWrapper: ElementRef;\n/**\n * Whether this component has been initialized.\n */\nprivate _isInitialized: boolean = false;\n/**\n * The tab index that should be selected after the content has been checked.\n */\nprivate _indexToSelect: number | null = 0;\n/**\n * Snapshot of the height of the tab body wrapper before another tab is activated.\n */\nprivate _tabBodyWrapperHeight: number = 0;\n/**\n * Subscription to tabs being added/removed.\n */\nprivate _tabsSubscription = Subscription.EMPTY;\n/**\n * Subscription to changes in the tab labels.\n */\nprivate _tabLabelSubscription = Subscription.EMPTY;\n/**\n * Whether the tab group should grow to the size of the active tab.\n * @return {?}\n */\nget dynamicHeight(): boolean { return this._dynamicHeight; }\n/**\n * @param {?} value\n * @return {?}\n */\nset dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\nprivate _dynamicHeight: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _dynamicHeightDeprecated(): boolean { return this._dynamicHeight; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _dynamicHeightDeprecated(value: boolean) { this._dynamicHeight = value; }\n/**\n * The index of the active tab.\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number | null) { this._indexToSelect = value; }\n/**\n * @return {?}\n */\nget selectedIndex(): number | null { return this._selectedIndex; }\nprivate _selectedIndex: number | null = null;\n/**\n * Position of the tab header.\n */\nheaderPosition: MdTabHeaderPosition = 'above';\n/**\n * Background color of the tab group.\n * @return {?}\n */\nget backgroundColor(): ThemePalette { return this._backgroundColor; }\n/**\n * @param {?} value\n * @return {?}\n */\nset backgroundColor(value: ThemePalette) {\r\n    let /** @type {?} */ nativeElement = this._elementRef.nativeElement;\r\n\r\n    this._renderer.removeClass(nativeElement, `mat-background-${this.backgroundColor}`);\r\n\r\n    if (value) {\r\n      this._renderer.addClass(nativeElement, `mat-background-${value}`);\r\n    }\r\n\r\n    this._backgroundColor = value;\r\n  }\nprivate _backgroundColor: ThemePalette;\n/**\n * Output to enable support for two-way binding on `[(selectedIndex)]`\n */\nselectedIndexChange: EventEmitter<number> = new EventEmitter();\n/**\n * Event emitted when focus has changed within a tab group.\n */\nfocusChange: EventEmitter<MdTabChangeEvent> = new EventEmitter<MdTabChangeEvent>();\n/**\n * Event emitted when the tab selection has changed.\n */\nselectChange: EventEmitter<MdTabChangeEvent> = new EventEmitter<MdTabChangeEvent>(true);\nprivate _groupId: number;\n/**\n * @param {?} _renderer\n * @param {?} elementRef\n * @param {?} _changeDetectorRef\n */\nconstructor(_renderer: Renderer2,\r\n              elementRef: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef) {\r\n    super(_renderer, elementRef);\r\n    this._groupId = nextId++;\r\n  }\n/**\n * After the content is checked, this component knows what tabs have been defined\rand what the selected index should be. This is where we can know exactly what position\reach tab should be in according to the new selected index, and additionally we know how\ra new selected tab should transition in (from the left or right).\n * @return {?}\n */\nngAfterContentChecked(): void {\r\n    // Clamp the next selected index to the boundsof 0 and the tabs length.\r\n    // Note the `|| 0`, which ensures that values like NaN can't get through\r\n    // and which would otherwise throw the component into an infinite loop\r\n    // (since Math.max(NaN, 0) === NaN).\r\n    let /** @type {?} */ indexToSelect = this._indexToSelect =\r\n        Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\r\n\r\n    // If there is a change in selected index, emit a change event. Should not trigger if\r\n    // the selected index has not yet been initialized.\r\n    if (this._selectedIndex != indexToSelect && this._selectedIndex != null) {\r\n      this.selectChange.emit(this._createChangeEvent(indexToSelect));\r\n      // Emitting this value after change detection has run\r\n      // since the checked content may contain this variable'\r\n      Promise.resolve().then(() => this.selectedIndexChange.emit(indexToSelect));\r\n    }\r\n\r\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\r\n    this._tabs.forEach((tab: MdTab, index: number) => {\r\n      tab.position = index - indexToSelect;\r\n      tab.isActive = index === indexToSelect;\r\n\r\n      // If there is already a selected tab, then set up an origin for the next selected tab\r\n      // if it doesn't have one already.\r\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\r\n        tab.origin = indexToSelect - this._selectedIndex;\r\n      }\r\n    });\r\n\r\n    if (this._selectedIndex !== indexToSelect) {\r\n      this._selectedIndex = indexToSelect;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\r\n    this._subscribeToTabLabels();\r\n\r\n    // Subscribe to changes in the amount of tabs, in order to be\r\n    // able to re-render the content as new tabs are added or removed.\r\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\r\n      this._subscribeToTabLabels();\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    this._tabsSubscription.unsubscribe();\r\n    this._tabLabelSubscription.unsubscribe();\r\n  }\n/**\n * Waits one frame for the view to update, then updates the ink bar\rNote: This must be run outside of the zone or it will create an infinite change detection loop.\n * @return {?}\n */\nngAfterViewChecked(): void {\r\n    this._isInitialized = true;\r\n  }\n/**\n * @param {?} index\n * @return {?}\n */\n_focusChanged(index: number) {\r\n    this.focusChange.emit(this._createChangeEvent(index));\r\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate _createChangeEvent(index: number): MdTabChangeEvent {\r\n    const /** @type {?} */ event = new MdTabChangeEvent;\r\n    event.index = index;\r\n    if (this._tabs && this._tabs.length) {\r\n      event.tab = this._tabs.toArray()[index];\r\n    }\r\n    return event;\r\n  }\n/**\n * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\ron the MdTab component, whereas the data binding is inside the MdTabGroup. In order for the\rbinding to be updated, we need to subscribe to changes in it and trigger change detection\rmanually.\n * @return {?}\n */\nprivate _subscribeToTabLabels() {\r\n    if (this._tabLabelSubscription) {\r\n      this._tabLabelSubscription.unsubscribe();\r\n    }\r\n\r\n    this._tabLabelSubscription = merge(\r\n        ...this._tabs.map(tab => tab._disableChange),\r\n        ...this._tabs.map(tab => tab._labelChange)).subscribe(() => {\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\n/**\n * Returns a unique id for each tab label element\n * @param {?} i\n * @return {?}\n */\n_getTabLabelId(i: number): string {\r\n    return `md-tab-label-${this._groupId}-${i}`;\r\n  }\n/**\n * Returns a unique id for each tab content element\n * @param {?} i\n * @return {?}\n */\n_getTabContentId(i: number): string {\r\n    return `md-tab-content-${this._groupId}-${i}`;\r\n  }\n/**\n * Sets the height of the body wrapper to the height of the activating tab if dynamic\rheight property is true.\n * @param {?} tabHeight\n * @return {?}\n */\n_setTabBodyWrapperHeight(tabHeight: number): void {\r\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\r\n\r\n    this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height',\r\n        this._tabBodyWrapperHeight + 'px');\r\n\r\n    // This conditional forces the browser to paint the height so that\r\n    // the animation to the new height can have an origin.\r\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\r\n      this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height',\r\n          tabHeight + 'px');\r\n    }\r\n  }\n/**\n * Removes the height of the tab body wrapper.\n * @return {?}\n */\n_removeTabBodyWrapperHeight(): void {\r\n    this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\r\n    this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height', '');\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: 'md-tab-group, mat-tab-group',\r\n  templateUrl: 'tab-group.html',\r\n  styleUrls: ['tab-group.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  inputs: ['color', 'disableRipple'],\r\n  host: {\r\n    'class': 'mat-tab-group',\r\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\r\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\r\n  },\r\n  viewProviders: [{provide: MATERIAL_COMPATIBILITY_MODE, useValue: true}],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_tabs': [{ type: ContentChildren, args: [MdTab, ] },],\n'_tabBodyWrapper': [{ type: ViewChild, args: ['tabBodyWrapper', ] },],\n'dynamicHeight': [{ type: Input },],\n'_dynamicHeightDeprecated': [{ type: Input, args: ['md-dynamic-height', ] },],\n'selectedIndex': [{ type: Input },],\n'headerPosition': [{ type: Input },],\n'backgroundColor': [{ type: Input },],\n'selectedIndexChange': [{ type: Output },],\n'focusChange': [{ type: Output },],\n'selectChange': [{ type: Output },],\n};\n}\n\nfunction MdTabGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabGroup.ctorParameters;\n/** @type {?} */\nMdTabGroup.propDecorators;\n/** @type {?} */\nMdTabGroup.prototype._tabs;\n/** @type {?} */\nMdTabGroup.prototype._tabBodyWrapper;\n/**\n * Whether this component has been initialized.\n * @type {?}\n */\nMdTabGroup.prototype._isInitialized;\n/**\n * The tab index that should be selected after the content has been checked.\n * @type {?}\n */\nMdTabGroup.prototype._indexToSelect;\n/**\n * Snapshot of the height of the tab body wrapper before another tab is activated.\n * @type {?}\n */\nMdTabGroup.prototype._tabBodyWrapperHeight;\n/**\n * Subscription to tabs being added/removed.\n * @type {?}\n */\nMdTabGroup.prototype._tabsSubscription;\n/**\n * Subscription to changes in the tab labels.\n * @type {?}\n */\nMdTabGroup.prototype._tabLabelSubscription;\n/** @type {?} */\nMdTabGroup.prototype._dynamicHeight;\n/** @type {?} */\nMdTabGroup.prototype._selectedIndex;\n/**\n * Position of the tab header.\n * @type {?}\n */\nMdTabGroup.prototype.headerPosition;\n/** @type {?} */\nMdTabGroup.prototype._backgroundColor;\n/**\n * Output to enable support for two-way binding on `[(selectedIndex)]`\n * @type {?}\n */\nMdTabGroup.prototype.selectedIndexChange;\n/**\n * Event emitted when focus has changed within a tab group.\n * @type {?}\n */\nMdTabGroup.prototype.focusChange;\n/**\n * Event emitted when the tab selection has changed.\n * @type {?}\n */\nMdTabGroup.prototype.selectChange;\n/** @type {?} */\nMdTabGroup.prototype._groupId;\n/** @type {?} */\nMdTabGroup.prototype._changeDetectorRef;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {\r\n  ViewChild,\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  ElementRef,\r\n  Optional,\r\n  AfterViewChecked,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  animate,\r\n  transition,\r\n  AnimationEvent,\r\n} from '@angular/animations';\r\nimport {TemplatePortal, PortalHostDirective} from '@angular/cdk/portal';\r\nimport {Directionality, Direction} from '@angular/cdk/bidi';\r\n\r\n\r\n/**\r\n * These position states are used internally as animation states for the tab body. Setting the\r\n * position state to left, right, or center will transition the tab body from its current\r\n * position to its respective state. If there is not current position (void, in the case of a new\r\n * tab body), then there will be no transition animation to its state.\r\n *\r\n * In the case of a new tab body that should immediately be centered with an animating transition,\r\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\r\n * psuedo-prior state.\r\n */\r\nexport type MdTabBodyPositionState =\r\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\r\n\r\n/**\r\n * The origin state is an internally used state that is set on a new tab body indicating if it\r\n * began to the left or right of the prior selected index. For example, if the selected index was\r\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\r\n * origin of right because its index was greater than the prior selected index.\r\n */\r\nexport type MdTabBodyOriginState = 'left' | 'right';\n/**\n * Wrapper for the contents of a tab.\r\\@docs-private\n */\nexport class MdTabBody implements OnInit, AfterViewChecked {\n/**\n * The portal host inside of this container into which the tab body content will be loaded.\n */\n_portalHost: PortalHostDirective;\n/**\n * Event emitted when the tab begins to animate towards the center as the active tab.\n */\nonCentering: EventEmitter<number> = new EventEmitter<number>();\n/**\n * Event emitted when the tab completes its animation towards the center.\n */\nonCentered: EventEmitter<void> = new EventEmitter<void>(true);\n/**\n * The tab body content to display.\n */\n_content: TemplatePortal<any>;\n/**\n * The shifted index position of the tab body, where zero represents the active center tab.\n */\n_position: MdTabBodyPositionState;\n/**\n * @param {?} position\n * @return {?}\n */\nset position(position: number) {\r\n    if (position < 0) {\r\n      this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\r\n    } else if (position > 0) {\r\n      this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\r\n    } else {\r\n      this._position = 'center';\r\n    }\r\n  }\n/**\n * The origin position from which this tab should appear when it is centered into view.\n */\n_origin: MdTabBodyOriginState;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @param {?} origin\n * @return {?}\n */\nset origin(origin: number) {\r\n    if (origin == null) { return; }\r\n\r\n    const /** @type {?} */ dir = this._getLayoutDirection();\r\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\r\n      this._origin = 'left';\r\n    } else {\r\n      this._origin = 'right';\r\n    }\r\n  }\n/**\n * @param {?} _elementRef\n * @param {?} _dir\n */\nconstructor(private _elementRef: ElementRef,\nprivate _dir: Directionality) { }\n/**\n * After initialized, check if the content is centered and has an origin. If so, set the\rspecial position states that transition the tab from the left or right before centering.\n * @return {?}\n */\nngOnInit() {\r\n    if (this._position == 'center' && this._origin) {\r\n      this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\r\n    }\r\n  }\n/**\n * After the view has been set, check if the tab content is set to the center and attach the\rcontent if it is not already attached.\n * @return {?}\n */\nngAfterViewChecked() {\r\n    if (this._isCenterPosition(this._position) && !this._portalHost.hasAttached()) {\r\n      this._portalHost.attach(this._content);\r\n    }\r\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabStarted(e: AnimationEvent) {\r\n    if (this._isCenterPosition(e.toState)) {\r\n      this.onCentering.emit(this._elementRef.nativeElement.clientHeight);\r\n    }\r\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabComplete(e: AnimationEvent) {\r\n    // If the end state is that the tab is not centered, then detach the content.\r\n    if (!this._isCenterPosition(e.toState) && !this._isCenterPosition(this._position)) {\r\n      this._portalHost.detach();\r\n    }\r\n\r\n    // If the transition to the center is complete, emit an event.\r\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\r\n      this.onCentered.emit();\r\n    }\r\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\n_getLayoutDirection(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\n/**\n * Whether the provided position state is considered center, regardless of origin.\n * @param {?} position\n * @return {?}\n */\nprivate _isCenterPosition(position: MdTabBodyPositionState|string): boolean {\r\n    return position == 'center' ||\r\n        position == 'left-origin-center' ||\r\n        position == 'right-origin-center';\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: 'md-tab-body, mat-tab-body',\r\n  templateUrl: 'tab-body.html',\r\n  styleUrls: ['tab-body.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    'class': 'mat-tab-body',\r\n  },\r\n  animations: [\r\n    trigger('translateTab', [\r\n      state('void', style({transform: 'translate3d(0%, 0, 0)'})),\r\n      state('left', style({transform: 'translate3d(-100%, 0, 0)'})),\r\n      state('left-origin-center', style({transform: 'translate3d(0%, 0, 0)'})),\r\n      state('right-origin-center', style({transform: 'translate3d(0%, 0, 0)'})),\r\n      state('center', style({transform: 'translate3d(0%, 0, 0)'})),\r\n      state('right', style({transform: 'translate3d(100%, 0, 0)'})),\r\n      transition('* => left, * => right, left => center, right => center',\r\n          animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\r\n      transition('void => left-origin-center', [\r\n        style({transform: 'translate3d(-100%, 0, 0)'}),\r\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\r\n      ]),\r\n      transition('void => right-origin-center', [\r\n        style({transform: 'translate3d(100%, 0, 0)'}),\r\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\r\n      ])\r\n    ])\r\n  ]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_portalHost': [{ type: ViewChild, args: [PortalHostDirective, ] },],\n'onCentering': [{ type: Output },],\n'onCentered': [{ type: Output },],\n'_content': [{ type: Input, args: ['content', ] },],\n'position': [{ type: Input, args: ['position', ] },],\n'origin': [{ type: Input, args: ['origin', ] },],\n};\n}\n\nfunction MdTabBody_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabBody.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabBody.ctorParameters;\n/** @type {?} */\nMdTabBody.propDecorators;\n/**\n * The portal host inside of this container into which the tab body content will be loaded.\n * @type {?}\n */\nMdTabBody.prototype._portalHost;\n/**\n * Event emitted when the tab begins to animate towards the center as the active tab.\n * @type {?}\n */\nMdTabBody.prototype.onCentering;\n/**\n * Event emitted when the tab completes its animation towards the center.\n * @type {?}\n */\nMdTabBody.prototype.onCentered;\n/**\n * The tab body content to display.\n * @type {?}\n */\nMdTabBody.prototype._content;\n/**\n * The shifted index position of the tab body, where zero represents the active center tab.\n * @type {?}\n */\nMdTabBody.prototype._position;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @type {?}\n */\nMdTabBody.prototype._origin;\n/** @type {?} */\nMdTabBody.prototype._elementRef;\n/** @type {?} */\nMdTabBody.prototype._dir;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {MdTabLabel} from './tab-label';\n/**\n * \\@docs-private\n */\nexport class MdTabBase {}\r\nexport const /** @type {?} */ _MdTabMixinBase = mixinDisabled(MdTabBase);\nexport class MdTab extends _MdTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n/**\n * Content for the tab label given by <ng-template md-tab-label>.\n */\ntemplateLabel: MdTabLabel;\n/**\n * Template inside the MdTab view that contains an <ng-content>.\n */\n_content: TemplateRef<any>;\n/**\n * The plain text label for the tab, used when there is no template label.\n */\ntextLabel: string = '';\n/**\n * The portal that will be the hosted content of the tab\n */\nprivate _contentPortal: TemplatePortal<any> | null = null;\n/**\n * @return {?}\n */\nget content(): TemplatePortal<any> | null { return this._contentPortal; }\n/**\n * Emits whenever the label changes.\n */\n_labelChange = new Subject<void>();\n/**\n * Emits whenevfer the disable changes\n */\n_disableChange = new Subject<void>();\n/**\n * The relatively indexed position where 0 represents the center, negative is left, and positive\rrepresents the right.\n */\nposition: number | null = null;\n/**\n * The initial relatively index origin of the tab if it was created and selected after there\rwas already a selected tab. Provides context of what position the tab should originate from.\n */\norigin: number | null = null;\n/**\n * Whether the tab is currently active.\n */\nisActive = false;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {\r\n    super();\r\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasOwnProperty('textLabel')) {\r\n      this._labelChange.next();\r\n    }\r\n\r\n    if (changes.hasOwnProperty('disabled')) {\r\n      this._disableChange.next();\r\n    }\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\r\n    this._disableChange.complete();\r\n    this._labelChange.complete();\r\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\r\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: 'md-tab, mat-tab',\r\n  templateUrl: 'tab.html',\r\n  inputs: ['disabled'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  exportAs: 'mdTab, matTab',\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'templateLabel': [{ type: ContentChild, args: [MdTabLabel, ] },],\n'_content': [{ type: ViewChild, args: [TemplateRef, ] },],\n'textLabel': [{ type: Input, args: ['label', ] },],\n};\n}\n\nfunction MdTab_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTab.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTab.ctorParameters;\n/** @type {?} */\nMdTab.propDecorators;\n/**\n * Content for the tab label given by <ng-template md-tab-label>.\n * @type {?}\n */\nMdTab.prototype.templateLabel;\n/**\n * Template inside the MdTab view that contains an <ng-content>.\n * @type {?}\n */\nMdTab.prototype._content;\n/**\n * The plain text label for the tab, used when there is no template label.\n * @type {?}\n */\nMdTab.prototype.textLabel;\n/**\n * The portal that will be the hosted content of the tab\n * @type {?}\n */\nMdTab.prototype._contentPortal;\n/**\n * Emits whenever the label changes.\n * @type {?}\n */\nMdTab.prototype._labelChange;\n/**\n * Emits whenevfer the disable changes\n * @type {?}\n */\nMdTab.prototype._disableChange;\n/**\n * The relatively indexed position where 0 represents the center, negative is left, and positive\rrepresents the right.\n * @type {?}\n */\nMdTab.prototype.position;\n/**\n * The initial relatively index origin of the tab if it was created and selected after there\rwas already a selected tab. Provides context of what position the tab should originate from.\n * @type {?}\n */\nMdTab.prototype.origin;\n/**\n * Whether the tab is currently active.\n * @type {?}\n */\nMdTab.prototype.isActive;\n/** @type {?} */\nMdTab.prototype._viewContainerRef;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Directive, TemplateRef, ViewContainerRef} from '@angular/core';\r\nimport {TemplatePortalDirective} from '@angular/cdk/portal';\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _MdTabLabelBaseClass = TemplatePortalDirective;\n/**\n * Used to flag tab labels for use with the portal directive\n */\nexport class MdTabLabel extends _MdTabLabelBaseClass {\n/**\n * @param {?} templateRef\n * @param {?} viewContainerRef\n */\nconstructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[md-tab-label], [mat-tab-label], [mdTabLabel], [matTabLabel]',\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\n}\n\nfunction MdTabLabel_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLabel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLabel.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Directive, Renderer2, ElementRef, NgZone} from '@angular/core';\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\r\\@docs-private\n */\nexport class MdInkBar {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _ngZone\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _ngZone: NgZone) {}\n/**\n * Calculates the styles from the provided element in order to align the ink-bar to that element.\rShows the ink bar if previously set as hidden.\r\\@param element\n * @param {?} element\n * @return {?}\n */\nalignToElement(element: HTMLElement) {\r\n    this.show();\r\n\r\n    if (typeof requestAnimationFrame !== 'undefined') {\r\n      this._ngZone.runOutsideAngular(() => {\r\n        requestAnimationFrame(() => this._setStyles(element));\r\n      });\r\n    } else {\r\n      this._setStyles(element);\r\n    }\r\n  }\n/**\n * Shows the ink bar.\n * @return {?}\n */\nshow(): void {\r\n    this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'visible');\r\n  }\n/**\n * Hides the ink bar.\n * @return {?}\n */\nhide(): void {\r\n    this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'hidden');\r\n  }\n/**\n * Sets the proper styles to the ink bar element.\r\\@param element\n * @param {?} element\n * @return {?}\n */\nprivate _setStyles(element: HTMLElement) {\r\n    const /** @type {?} */ left = element ? (element.offsetLeft || 0) + 'px' : '0';\r\n    const /** @type {?} */ width = element ? (element.offsetWidth || 0) + 'px' : '0';\r\n\r\n    this._renderer.setStyle(this._elementRef.nativeElement, 'left', left);\r\n    this._renderer.setStyle(this._elementRef.nativeElement, 'width', width);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: 'md-ink-bar, mat-ink-bar',\r\n  host: {\r\n    'class': 'mat-ink-bar',\r\n  },\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: NgZone, },\n];\n}\n\nfunction MdInkBar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdInkBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdInkBar.ctorParameters;\n/** @type {?} */\nMdInkBar.prototype._renderer;\n/** @type {?} */\nMdInkBar.prototype._elementRef;\n/** @type {?} */\nMdInkBar.prototype._ngZone;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["observableOf"],"mappings":"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"}