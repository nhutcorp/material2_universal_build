{"version":3,"file":"tooltip.es5.js","sources":["../../../src/lib/tooltip/index.ts","../../../src/lib/tooltip/tooltip-module.ts","../../../src/lib/tooltip/tooltip.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {MdTooltipModule,TooltipPosition,TOUCHEND_HIDE_DELAY,SCROLL_THROTTLE_MS,TOOLTIP_PANEL_CLASS,getMdTooltipInvalidPositionError,MD_TOOLTIP_SCROLL_STRATEGY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER,MdTooltip,TooltipVisibility,TooltipComponent,MatTooltip,MatTooltipModule,MAT_TOOLTIP_SCROLL_STRATEGY,MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER,MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY} from './public_api';\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {A11yModule, ARIA_DESCRIBER_PROVIDER} from '@angular/cdk/a11y';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MdCommonModule} from '@angular/material/core';\r\nimport {MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER, MdTooltip, TooltipComponent} from './tooltip';\nexport class MdTooltipModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    MdCommonModule,\r\n    PlatformModule,\r\n    A11yModule,\r\n  ],\r\n  exports: [MdTooltip, TooltipComponent, MdCommonModule],\r\n  declarations: [MdTooltip, TooltipComponent],\r\n  entryComponents: [TooltipComponent],\r\n  providers: [MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER, ARIA_DESCRIBER_PROVIDER],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdTooltipModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTooltipModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTooltipModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\r\nimport {AriaDescriber} from '@angular/cdk/a11y';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {\r\n  OriginConnectionPosition,\r\n  Overlay,\r\n  OverlayConnectionPosition,\r\n  OverlayRef,\r\n  OverlayConfig,\r\n  RepositionScrollStrategy,\r\n  ScrollStrategy,\r\n} from '@angular/cdk/overlay';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {ComponentPortal} from '@angular/cdk/portal';\r\nimport {first} from '@angular/cdk/rxjs';\r\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Renderer2,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n\r\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n/**\n * Time in ms to delay before changing the tooltip visibility to hidden\n */\nexport const TOUCHEND_HIDE_DELAY = 1500;\n/**\n * Time in ms to throttle repositioning after scroll events.\n */\nexport const SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @param {?} position\n * @return {?}\n */\nexport function getMdTooltipInvalidPositionError(position: string) {\r\n  return Error(`Tooltip position \"${position}\" is invalid.`);\r\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n */\nexport const MD_TOOLTIP_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('md-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => RepositionScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\r\n}\n/**\n * \\@docs-private\n */\nexport const MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: MD_TOOLTIP_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY\r\n};\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\rhiding of a tooltip provided position (defaults to below the element).\r\rhttps://material.google.com/components/tooltips.html\n */\nexport class MdTooltip implements OnDestroy {\r\n  _overlayRef: OverlayRef | null;\r\n  _tooltipInstance: TooltipComponent | null;\nprivate _position: TooltipPosition = 'below';\nprivate _disabled: boolean = false;\nprivate _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n/**\n * Allows the user to define the position of the tooltip relative to the parent element\n * @return {?}\n */\nget position(): TooltipPosition { return this._position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset position(value: TooltipPosition) {\r\n    if (value !== this._position) {\r\n      this._position = value;\r\n\r\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\r\n      // the tooltip.\r\n      if (this._tooltipInstance) {\r\n        this._disposeTooltip();\r\n      }\r\n    }\r\n  }\n/**\n * Disables the display of the tooltip.\n * @return {?}\n */\nget disabled(): boolean { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n\r\n    // If tooltip is disabled, hide immediately.\r\n    if (this._disabled) {\r\n      this.hide(0);\r\n    }\r\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _positionDeprecated(): TooltipPosition { return this._position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _positionDeprecated(value: TooltipPosition) { this._position = value; }\n/**\n * The default delay in ms before showing the tooltip after show is called\n */\nshowDelay = 0;\n/**\n * The default delay in ms before hiding the tooltip after hide is called\n */\nhideDelay = 0;\nprivate _message = '';\n/**\n * The message to be displayed in the tooltip\n * @return {?}\n */\nget message() { return this._message; }\n/**\n * @param {?} value\n * @return {?}\n */\nset message(value: string) {\r\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\r\n\r\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\r\n    this._message = value != null ? `${value}`.trim() : '';\r\n    this._updateTooltipMessage();\r\n    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\r\n  }\n/**\n * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n * @return {?}\n */\nget tooltipClass() { return this._tooltipClass; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\r\n    this._tooltipClass = value;\r\n    if (this._tooltipInstance) {\r\n      this._setTooltipClass(this._tooltipClass);\r\n    }\r\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMessage(): string { return this.message; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMessage(v: string) { this.message = v; }\n/**\n * @return {?}\n */\nget _matMessage() { return this.message; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matMessage(v) { this.message = v; }\n/**\n * @return {?}\n */\nget _matPosition() { return this.position; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matPosition(v) { this.position = v; }\n/**\n * @return {?}\n */\nget _matDisabled() { return this.disabled; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matDisabled(v) { this.disabled = v; }\n/**\n * @return {?}\n */\nget _matHideDelay() { return this.hideDelay; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matHideDelay(v) { this.hideDelay = v; }\n/**\n * @return {?}\n */\nget _matShowDelay() { return this.showDelay; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matShowDelay(v) { this.showDelay = v; }\n/**\n * @return {?}\n */\nget _matClass() { return this.tooltipClass; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matClass(v) { this.tooltipClass = v; }\nprivate _enterListener: Function;\nprivate _leaveListener: Function;\n/**\n * @param {?} renderer\n * @param {?} _overlay\n * @param {?} _elementRef\n * @param {?} _scrollDispatcher\n * @param {?} _viewContainerRef\n * @param {?} _ngZone\n * @param {?} _platform\n * @param {?} _ariaDescriber\n * @param {?} _scrollStrategy\n * @param {?} _dir\n */\nconstructor(\r\n    renderer: Renderer2,\nprivate _overlay: Overlay,\nprivate _elementRef: ElementRef,\nprivate _scrollDispatcher: ScrollDispatcher,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _ngZone: NgZone,\nprivate _platform: Platform,\nprivate _ariaDescriber: AriaDescriber,\nprivate _scrollStrategy,\nprivate _dir: Directionality) {\r\n\r\n    // The mouse events shouldn't be bound on iOS devices, because\r\n    // they can prevent the first tap from firing its click event.\r\n    if (!_platform.IOS) {\r\n      this._enterListener =\r\n        renderer.listen(_elementRef.nativeElement, 'mouseenter', () => this.show());\r\n      this._leaveListener =\r\n        renderer.listen(_elementRef.nativeElement, 'mouseleave', () => this.hide());\r\n    }\r\n  }\n/**\n * Dispose the tooltip when destroyed.\n * @return {?}\n */\nngOnDestroy() {\r\n    if (this._tooltipInstance) {\r\n      this._disposeTooltip();\r\n    }\r\n    // Clean up the event listeners set in the constructor\r\n    if (!this._platform.IOS) {\r\n      this._enterListener();\r\n      this._leaveListener();\r\n    }\r\n\r\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\r\n  }\n/**\n * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n * @param {?=} delay\n * @return {?}\n */\nshow(delay: number = this.showDelay): void {\r\n    if (this.disabled || !this.message) { return; }\r\n\r\n    if (!this._tooltipInstance) {\r\n      this._createTooltip();\r\n    }\r\n\r\n    this._setTooltipClass(this._tooltipClass);\r\n    this._updateTooltipMessage(); /** @type {?} */((\r\n    this._tooltipInstance)).show(this._position, delay);\r\n  }\n/**\n * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n * @param {?=} delay\n * @return {?}\n */\nhide(delay: number = this.hideDelay): void {\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.hide(delay);\r\n    }\r\n  }\n/**\n * Shows/hides the tooltip\n * @return {?}\n */\ntoggle(): void {\r\n    this._isTooltipVisible() ? this.hide() : this.show();\r\n  }\n/**\n * Returns true if the tooltip is currently visible to the user\n * @return {?}\n */\n_isTooltipVisible(): boolean {\r\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\r\n  }\n/**\n * Handles the keydown events on the host element.\n * @param {?} e\n * @return {?}\n */\n_handleKeydown(e: KeyboardEvent) {\r\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\r\n      e.stopPropagation();\r\n      this.hide(0);\r\n    }\r\n  }\n/**\n * Create the tooltip to display\n * @return {?}\n */\nprivate _createTooltip(): void {\r\n    let /** @type {?} */ overlayRef = this._createOverlay();\r\n    let /** @type {?} */ portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\r\n\r\n    this._tooltipInstance = overlayRef.attach(portal).instance; /** @type {?} */((\r\n\r\n    // Dispose the overlay when finished the shown tooltip.\r\n    this._tooltipInstance)).afterHidden().subscribe(() => {\r\n      // Check first if the tooltip has already been removed through this components destroy.\r\n      if (this._tooltipInstance) {\r\n        this._disposeTooltip();\r\n      }\r\n    });\r\n  }\n/**\n * Create the overlay config and position strategy\n * @return {?}\n */\nprivate _createOverlay(): OverlayRef {\r\n    const /** @type {?} */ origin = this._getOrigin();\r\n    const /** @type {?} */ position = this._getOverlayPosition();\r\n\r\n    // Create connected position strategy that listens for scroll events to reposition.\r\n    // After position changes occur and the overlay is clipped by a parent scrollable then\r\n    // close the tooltip.\r\n    const /** @type {?} */ strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\r\n    strategy.withScrollableContainers(this._scrollDispatcher.getScrollContainers(this._elementRef));\r\n    strategy.onPositionChange.subscribe(change => {\r\n      if (change.scrollableViewProperties.isOverlayClipped &&\r\n          this._tooltipInstance && this._tooltipInstance.isVisible()) {\r\n        this.hide(0);\r\n      }\r\n    });\r\n\r\n    const /** @type {?} */ config = new OverlayConfig({\r\n      direction: this._dir ? this._dir.value : 'ltr',\r\n      positionStrategy: strategy,\r\n      panelClass: TOOLTIP_PANEL_CLASS,\r\n      scrollStrategy: this._scrollStrategy()\r\n    });\r\n\r\n    this._overlayRef = this._overlay.create(config);\r\n\r\n    return this._overlayRef;\r\n  }\n/**\n * Disposes the current tooltip and the overlay it is attached to\n * @return {?}\n */\nprivate _disposeTooltip(): void {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n    }\r\n\r\n    this._tooltipInstance = null;\r\n  }\n/**\n * Returns the origin position based on the user's position preference\n * @return {?}\n */\n_getOrigin(): OriginConnectionPosition {\r\n    if (this.position == 'above' || this.position == 'below') {\r\n      return {originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom'};\r\n    }\r\n\r\n    const /** @type {?} */ isDirectionLtr = !this._dir || this._dir.value == 'ltr';\r\n    if (this.position == 'left' ||\r\n        this.position == 'before' && isDirectionLtr ||\r\n        this.position == 'after' && !isDirectionLtr) {\r\n      return {originX: 'start', originY: 'center'};\r\n    }\r\n\r\n    if (this.position == 'right' ||\r\n        this.position == 'after' && isDirectionLtr ||\r\n        this.position == 'before' && !isDirectionLtr) {\r\n      return {originX: 'end', originY: 'center'};\r\n    }\r\n\r\n    throw getMdTooltipInvalidPositionError(this.position);\r\n  }\n/**\n * Returns the overlay position based on the user's preference\n * @return {?}\n */\n_getOverlayPosition(): OverlayConnectionPosition {\r\n    if (this.position == 'above') {\r\n      return {overlayX: 'center', overlayY: 'bottom'};\r\n    }\r\n\r\n    if (this.position == 'below') {\r\n      return {overlayX: 'center', overlayY: 'top'};\r\n    }\r\n\r\n    const /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\r\n    if (this.position == 'left' ||\r\n        this.position == 'before' && isLtr ||\r\n        this.position == 'after' && !isLtr) {\r\n      return {overlayX: 'end', overlayY: 'center'};\r\n    }\r\n\r\n    if (this.position == 'right' ||\r\n        this.position == 'after' && isLtr ||\r\n        this.position == 'before' && !isLtr) {\r\n      return {overlayX: 'start', overlayY: 'center'};\r\n    }\r\n\r\n    throw getMdTooltipInvalidPositionError(this.position);\r\n  }\n/**\n * Updates the tooltip message and repositions the overlay according to the new message length\n * @return {?}\n */\nprivate _updateTooltipMessage() {\r\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\r\n    // calculate the correct positioning based on the size of the text.\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.message = this.message;\r\n      this._tooltipInstance._markForCheck();\r\n\r\n      first.call(this._ngZone.onMicrotaskEmpty.asObservable()).subscribe(() => {\r\n        if (this._tooltipInstance) { /** @type {?} */((\r\n          this._overlayRef)).updatePosition();\r\n        }\r\n      });\r\n    }\r\n  }\n/**\n * Updates the tooltip class\n * @param {?} tooltipClass\n * @return {?}\n */\nprivate _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.tooltipClass = tooltipClass;\r\n      this._tooltipInstance._markForCheck();\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[md-tooltip], [mdTooltip], [mat-tooltip], [matTooltip]',\r\n  host: {\r\n    '(longpress)': 'show()',\r\n    '(focus)': 'show()',\r\n    '(blur)': 'hide(0)',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(touchend)': 'hide(' + TOUCHEND_HIDE_DELAY + ')',\r\n  },\r\n  exportAs: 'mdTooltip, matTooltip',\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: Overlay, },\n{type: ElementRef, },\n{type: ScrollDispatcher, },\n{type: ViewContainerRef, },\n{type: NgZone, },\n{type: Platform, },\n{type: AriaDescriber, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_TOOLTIP_SCROLL_STRATEGY, ] }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: Input, args: ['mdTooltipPosition', ] },],\n'disabled': [{ type: Input, args: ['mdTooltipDisabled', ] },],\n'_positionDeprecated': [{ type: Input, args: ['tooltip-position', ] },],\n'showDelay': [{ type: Input, args: ['mdTooltipShowDelay', ] },],\n'hideDelay': [{ type: Input, args: ['mdTooltipHideDelay', ] },],\n'message': [{ type: Input, args: ['mdTooltip', ] },],\n'tooltipClass': [{ type: Input, args: ['mdTooltipClass', ] },],\n'_deprecatedMessage': [{ type: Input, args: ['md-tooltip', ] },],\n'_matMessage': [{ type: Input, args: ['matTooltip', ] },],\n'_matPosition': [{ type: Input, args: ['matTooltipPosition', ] },],\n'_matDisabled': [{ type: Input, args: ['matTooltipDisabled', ] },],\n'_matHideDelay': [{ type: Input, args: ['matTooltipHideDelay', ] },],\n'_matShowDelay': [{ type: Input, args: ['matTooltipShowDelay', ] },],\n'_matClass': [{ type: Input, args: ['matTooltipClass', ] },],\n};\n}\n\nfunction MdTooltip_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTooltip.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTooltip.ctorParameters;\n/** @type {?} */\nMdTooltip.propDecorators;\n/** @type {?} */\nMdTooltip.prototype._overlayRef;\n/** @type {?} */\nMdTooltip.prototype._tooltipInstance;\n/** @type {?} */\nMdTooltip.prototype._position;\n/** @type {?} */\nMdTooltip.prototype._disabled;\n/** @type {?} */\nMdTooltip.prototype._tooltipClass;\n/**\n * The default delay in ms before showing the tooltip after show is called\n * @type {?}\n */\nMdTooltip.prototype.showDelay;\n/**\n * The default delay in ms before hiding the tooltip after hide is called\n * @type {?}\n */\nMdTooltip.prototype.hideDelay;\n/** @type {?} */\nMdTooltip.prototype._message;\n/** @type {?} */\nMdTooltip.prototype._enterListener;\n/** @type {?} */\nMdTooltip.prototype._leaveListener;\n/** @type {?} */\nMdTooltip.prototype._overlay;\n/** @type {?} */\nMdTooltip.prototype._elementRef;\n/** @type {?} */\nMdTooltip.prototype._scrollDispatcher;\n/** @type {?} */\nMdTooltip.prototype._viewContainerRef;\n/** @type {?} */\nMdTooltip.prototype._ngZone;\n/** @type {?} */\nMdTooltip.prototype._platform;\n/** @type {?} */\nMdTooltip.prototype._ariaDescriber;\n/** @type {?} */\nMdTooltip.prototype._scrollStrategy;\n/** @type {?} */\nMdTooltip.prototype._dir;\n}\n\r\n\r\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n/**\n * Internal component that wraps the tooltip's content.\r\\@docs-private\n */\nexport class TooltipComponent {\n/**\n * Message to display in the tooltip\n */\nmessage: string;\n/**\n * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n */\ntooltipClass: string|string[]|Set<string>|{[key: string]: any};\n/**\n * The timeout ID of any current timer set to show the tooltip\n */\n_showTimeoutId: number;\n/**\n * The timeout ID of any current timer set to hide the tooltip\n */\n_hideTimeoutId: number;\n/**\n * Property watched by the animation framework to show or hide the tooltip\n */\n_visibility: TooltipVisibility = 'initial';\n/**\n * Whether interactions on the page should close the tooltip\n */\nprivate _closeOnInteraction: boolean = false;\n/**\n * The transform origin used in the animation for showing and hiding the tooltip\n */\n_transformOrigin: string = 'bottom';\n/**\n * Subject for notifying that the tooltip has been hidden from the view\n */\nprivate _onHide: Subject<any> = new Subject();\n/**\n * @param {?} _dir\n * @param {?} _changeDetectorRef\n */\nconstructor(\nprivate _dir: Directionality,\nprivate _changeDetectorRef: ChangeDetectorRef) {}\n/**\n * Shows the tooltip with an animation originating from the provided origin\r\\@param position Position of the tooltip.\r\\@param delay Amount of milliseconds to the delay showing the tooltip.\n * @param {?} position\n * @param {?} delay\n * @return {?}\n */\nshow(position: TooltipPosition, delay: number): void {\r\n    // Cancel the delayed hide if it is scheduled\r\n    if (this._hideTimeoutId) {\r\n      clearTimeout(this._hideTimeoutId);\r\n    }\r\n\r\n    this._setTransformOrigin(position);\r\n    this._showTimeoutId = setTimeout(() => {\r\n      this._visibility = 'visible';\r\n\r\n      // Mark for check so if any parent component has set the\r\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\r\n      this._markForCheck();\r\n    }, delay);\r\n  }\n/**\n * Begins the animation to hide the tooltip after the provided delay in ms.\r\\@param delay Amount of milliseconds to delay showing the tooltip.\n * @param {?} delay\n * @return {?}\n */\nhide(delay: number): void {\r\n    // Cancel the delayed show if it is scheduled\r\n    if (this._showTimeoutId) {\r\n      clearTimeout(this._showTimeoutId);\r\n    }\r\n\r\n    this._hideTimeoutId = setTimeout(() => {\r\n      this._visibility = 'hidden';\r\n\r\n      // Mark for check so if any parent component has set the\r\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\r\n      this._markForCheck();\r\n    }, delay);\r\n  }\n/**\n * Returns an observable that notifies when the tooltip has been hidden from view\n * @return {?}\n */\nafterHidden(): Observable<void> {\r\n    return this._onHide.asObservable();\r\n  }\n/**\n * Whether the tooltip is being displayed\n * @return {?}\n */\nisVisible(): boolean {\r\n    return this._visibility === 'visible';\r\n  }\n/**\n * Sets the tooltip transform origin according to the tooltip position\n * @param {?} value\n * @return {?}\n */\n_setTransformOrigin(value: TooltipPosition) {\r\n    const /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\r\n    switch (value) {\r\n      case 'before': this._transformOrigin = isLtr ? 'right' : 'left'; break;\r\n      case 'after':  this._transformOrigin = isLtr ? 'left' : 'right'; break;\r\n      case 'left':   this._transformOrigin = 'right'; break;\r\n      case 'right':  this._transformOrigin = 'left'; break;\r\n      case 'above':  this._transformOrigin = 'bottom'; break;\r\n      case 'below':  this._transformOrigin = 'top'; break;\r\n      default: throw getMdTooltipInvalidPositionError(value);\r\n    }\r\n  }\n/**\n * @return {?}\n */\n_animationStart() {\r\n    this._closeOnInteraction = false;\r\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_animationDone(event: AnimationEvent): void {\r\n    const /** @type {?} */ toState = /** @type {?} */(( event.toState as TooltipVisibility));\r\n\r\n    if (toState === 'hidden' && !this.isVisible()) {\r\n      this._onHide.next();\r\n    }\r\n\r\n    if (toState === 'visible' || toState === 'hidden') {\r\n      // Note: as of Angular 4.3, the animations module seems to fire the `start` callback before\r\n      // the end if animations are disabled. Make this call async to ensure that it still fires\r\n      // at the appropriate time.\r\n      Promise.resolve().then(() => this._closeOnInteraction = true);\r\n    }\r\n  }\n/**\n * Interactions on the HTML body should close the tooltip immediately as defined in the\rmaterial design spec.\rhttps://material.google.com/components/tooltips.html#tooltips-interaction\n * @return {?}\n */\n_handleBodyInteraction(): void {\r\n    if (this._closeOnInteraction) {\r\n      this.hide(0);\r\n    }\r\n  }\n/**\n * Marks that the tooltip needs to be checked in the next change detection run.\rMainly used for rendering the initial text before positioning a tooltip, which\rcan be problematic in components with OnPush change detection.\n * @return {?}\n */\n_markForCheck(): void {\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: 'md-tooltip-component, mat-tooltip-component',\r\n  templateUrl: 'tooltip.html',\r\n  styleUrls: ['tooltip.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('state', [\r\n      state('initial, void, hidden', style({transform: 'scale(0)'})),\r\n      state('visible', style({transform: 'scale(1)'})),\r\n      transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\r\n      transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\r\n    ])\r\n  ],\r\n  host: {\r\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\r\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\r\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\r\n    '(body:click)': 'this._handleBodyInteraction()',\r\n    'aria-hidden': 'true',\r\n  }\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction TooltipComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipComponent.ctorParameters;\n/**\n * Message to display in the tooltip\n * @type {?}\n */\nTooltipComponent.prototype.message;\n/**\n * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n * @type {?}\n */\nTooltipComponent.prototype.tooltipClass;\n/**\n * The timeout ID of any current timer set to show the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._showTimeoutId;\n/**\n * The timeout ID of any current timer set to hide the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._hideTimeoutId;\n/**\n * Property watched by the animation framework to show or hide the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._visibility;\n/**\n * Whether interactions on the page should close the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._closeOnInteraction;\n/**\n * The transform origin used in the animation for showing and hiding the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._transformOrigin;\n/**\n * Subject for notifying that the tooltip has been hidden from the view\n * @type {?}\n */\nTooltipComponent.prototype._onHide;\n/** @type {?} */\nTooltipComponent.prototype._dir;\n/** @type {?} */\nTooltipComponent.prototype._changeDetectorRef;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}