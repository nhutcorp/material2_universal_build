{"version":3,"file":"menu.es5.js","sources":["../../../src/lib/menu/index.ts","../../../src/lib/menu/menu-module.ts","../../../src/lib/menu/menu-trigger.ts","../../../src/lib/menu/menu-directive.ts","../../../src/lib/menu/menu-item.ts","../../../src/lib/menu/menu-errors.ts","../../../src/lib/menu/menu-animations.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {MD_MENU_SCROLL_STRATEGY,fadeInItems,transformMenu,MdMenuModule,MdMenu,MdMenuDefaultOptions,MD_MENU_DEFAULT_OPTIONS,MdMenuItem,MdMenuTrigger,MdMenuPanel,MenuPositionX,MenuPositionY,MAT_MENU_DEFAULT_OPTIONS,MatMenu,MatMenuDefaultOptions,MatMenuItem,MatMenuModule,MatMenuPanel,MatMenuTrigger} from './public_api';\n\nexport {MdMenuItemBase as ɵa,_MdMenuItemMixinBase as ɵb} from './menu-item';\nexport {MD_MENU_SCROLL_STRATEGY_PROVIDER as ɵd,MD_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵc} from './menu-trigger';","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MdCommonModule} from '@angular/material/core';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {MdMenu, MD_MENU_DEFAULT_OPTIONS} from './menu-directive';\r\nimport {MdMenuItem} from './menu-item';\r\nimport {MdMenuTrigger, MD_MENU_SCROLL_STRATEGY_PROVIDER} from './menu-trigger';\r\nimport {MdRippleModule} from '@angular/material/core';\nexport class MdMenuModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [\r\n    OverlayModule,\r\n    CommonModule,\r\n    MdRippleModule,\r\n    MdCommonModule,\r\n  ],\r\n  exports: [MdMenu, MdMenuItem, MdMenuTrigger, MdCommonModule],\r\n  declarations: [MdMenu, MdMenuItem, MdMenuTrigger],\r\n  providers: [\r\n    MD_MENU_SCROLL_STRATEGY_PROVIDER,\r\n    {\r\n      provide: MD_MENU_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        overlapTrigger: true,\r\n        xPosition: 'after',\r\n        yPosition: 'below',\r\n      },\r\n    }\r\n  ],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdMenuModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {\r\n  ConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  Overlay,\r\n  OverlayRef,\r\n  OverlayConfig,\r\n  RepositionScrollStrategy,\r\n  ScrollStrategy,\r\n  VerticalConnectionPos,\r\n} from '@angular/cdk/overlay';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {filter, RxChain} from '@angular/cdk/rxjs';\r\nimport {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MdMenu} from './menu-directive';\r\nimport {throwMdMenuMissingError} from './menu-errors';\r\nimport {MdMenuItem} from './menu-item';\r\nimport {MdMenuPanel} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\n/**\n * Injection token that determines the scroll handling while the menu is open.\n */\nexport const MD_MENU_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('md-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => RepositionScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\n/**\n * \\@docs-private\n */\nexport const MD_MENU_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: MD_MENU_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MD_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\n/**\n * Default top padding of the menu panel.\n */\nexport const MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an md-menu tag.  It is\rresponsible for toggling the display of the provided menu instance.\n */\nexport class MdMenuTrigger implements AfterViewInit, OnDestroy {\nprivate _portal: TemplatePortal<any>;\nprivate _overlayRef: OverlayRef | null = null;\nprivate _menuOpen: boolean = false;\nprivate _closeSubscription = Subscription.EMPTY;\nprivate _positionSubscription = Subscription.EMPTY;\nprivate _hoverSubscription = Subscription.EMPTY;\nprivate _openedByMouse: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMdMenuTriggerFor(): MdMenuPanel {\r\n    return this.menu;\r\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMdMenuTriggerFor(v: MdMenuPanel) {\r\n    this.menu = v;\r\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMatMenuTriggerFor(): MdMenuPanel {\r\n    return this.menu;\r\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMatMenuTriggerFor(v: MdMenuPanel) {\r\n    this.menu = v;\r\n  }\n/**\n * @return {?}\n */\nget _matMenuTriggerFor(): MdMenuPanel {\r\n    return this.menu;\r\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matMenuTriggerFor(v: MdMenuPanel) {\r\n    this.menu = v;\r\n  }\n/**\n * References the menu instance that the trigger is associated with.\n */\nmenu: MdMenuPanel;\n/**\n * Event emitted when the associated menu is opened.\n */\nonMenuOpen = new EventEmitter<void>();\n/**\n * Event emitted when the associated menu is closed.\n */\nonMenuClose = new EventEmitter<void>();\n/**\n * @param {?} _overlay\n * @param {?} _element\n * @param {?} _viewContainerRef\n * @param {?} _scrollStrategy\n * @param {?} _parentMenu\n * @param {?} _menuItemInstance\n * @param {?} _dir\n */\nconstructor(private _overlay: Overlay,\nprivate _element: ElementRef,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _scrollStrategy,\nprivate _parentMenu: MdMenu,\nprivate _menuItemInstance: MdMenuItem,\nprivate _dir: Directionality) {\r\n\r\n    if (_menuItemInstance) {\r\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\r\n    }\r\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\r\n    this._checkMenu();\r\n\r\n    this.menu.close.subscribe(reason => {\r\n      this.closeMenu();\r\n\r\n      // If a click closed the menu, we should close the entire chain of nested menus.\r\n      if (reason === 'click' && this._parentMenu) {\r\n        this._parentMenu.close.emit(reason);\r\n      }\r\n    });\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // Subscribe to changes in the hovered item in order to toggle the panel.\r\n      this._hoverSubscription = filter\r\n          .call(this._parentMenu.hover(), active => active === this._menuItemInstance)\r\n          .subscribe(() => {\r\n            this._openedByMouse = true;\r\n            this.openMenu();\r\n          });\r\n    }\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n    }\r\n\r\n    this._cleanUpSubscriptions();\r\n  }\n/**\n * Whether the menu is open.\n * @return {?}\n */\nget menuOpen(): boolean {\r\n    return this._menuOpen;\r\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\nget dir(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\n/**\n * Whether the menu triggers a sub-menu or a top-level one.\n * @return {?}\n */\ntriggersSubmenu(): boolean {\r\n    return !!(this._menuItemInstance && this._parentMenu);\r\n  }\n/**\n * Toggles the menu between the open and closed states.\n * @return {?}\n */\ntoggleMenu(): void {\r\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\r\n  }\n/**\n * Opens the menu.\n * @return {?}\n */\nopenMenu(): void {\r\n    if (!this._menuOpen) {\r\n      this._createOverlay().attach(this._portal);\r\n      this._closeSubscription = this._menuClosingActions().subscribe(() => this.menu.close.emit());\r\n      this._initMenu();\r\n\r\n      if (this.menu instanceof MdMenu) {\r\n        this.menu._startAnimation();\r\n      }\r\n    }\r\n  }\n/**\n * Closes the menu.\n * @return {?}\n */\ncloseMenu(): void {\r\n    if (this._overlayRef && this.menuOpen) {\r\n      this._resetMenu();\r\n      this._overlayRef.detach();\r\n      this._closeSubscription.unsubscribe();\r\n      this.menu.close.emit();\r\n\r\n      if (this.menu instanceof MdMenu) {\r\n        this.menu._resetAnimation();\r\n      }\r\n    }\r\n  }\n/**\n * Focuses the menu trigger.\n * @return {?}\n */\nfocus() {\r\n    this._element.nativeElement.focus();\r\n  }\n/**\n * This method sets the menu state to open and focuses the first item if\rthe menu was opened via the keyboard.\n * @return {?}\n */\nprivate _initMenu(): void {\r\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\r\n    this.menu.direction = this.dir;\r\n    this._setMenuElevation();\r\n    this._setIsMenuOpen(true);\r\n\r\n    // Should only set focus if opened via the keyboard, so keyboard users can\r\n    // can easily navigate menu items. According to spec, mouse users should not\r\n    // see the focus style.\r\n    if (!this._openedByMouse) {\r\n      this.menu.focusFirstItem();\r\n    }\r\n  }\n/**\n * Updates the menu elevation based on the amount of parent menus that it has.\n * @return {?}\n */\nprivate _setMenuElevation(): void {\r\n    if (this.menu.setElevation) {\r\n      let /** @type {?} */ depth = 0;\r\n      let /** @type {?} */ parentMenu = this.menu.parentMenu;\r\n\r\n      while (parentMenu) {\r\n        depth++;\r\n        parentMenu = parentMenu.parentMenu;\r\n      }\r\n\r\n      this.menu.setElevation(depth);\r\n    }\r\n  }\n/**\n * This method resets the menu when it's closed, most importantly restoring\rfocus to the menu trigger if the menu was opened via the keyboard.\n * @return {?}\n */\nprivate _resetMenu(): void {\r\n    this._setIsMenuOpen(false);\r\n\r\n    // Focus only needs to be reset to the host element if the menu was opened\r\n    // by the keyboard and manually shifted to the first menu item.\r\n    if (!this._openedByMouse) {\r\n      this.focus();\r\n    }\r\n\r\n    this._openedByMouse = false;\r\n  }\n/**\n * @param {?} isOpen\n * @return {?}\n */\nprivate _setIsMenuOpen(isOpen: boolean): void {\r\n    this._menuOpen = isOpen;\r\n    this._menuOpen ? this.onMenuOpen.emit() : this.onMenuClose.emit();\r\n\r\n    if (this.triggersSubmenu()) {\r\n      this._menuItemInstance._highlighted = isOpen;\r\n    }\r\n  }\n/**\n * This method checks that a valid instance of MdMenu has been passed into\rmdMenuTriggerFor. If not, an exception is thrown.\n * @return {?}\n */\nprivate _checkMenu() {\r\n    if (!this.menu) {\r\n      throwMdMenuMissingError();\r\n    }\r\n  }\n/**\n * This method creates the overlay from the provided menu's template and saves its\rOverlayRef so that it can be attached to the DOM when openMenu is called.\n * @return {?}\n */\nprivate _createOverlay(): OverlayRef {\r\n    if (!this._overlayRef) {\r\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\r\n      const /** @type {?} */ config = this._getOverlayConfig();\r\n      this._subscribeToPositions( /** @type {?} */((config.positionStrategy as ConnectedPositionStrategy)));\r\n      this._overlayRef = this._overlay.create(config);\r\n    }\r\n\r\n    return this._overlayRef;\r\n  }\n/**\n * This method builds the configuration object needed to create the overlay, the OverlayState.\r\\@returns OverlayConfig\n * @return {?}\n */\nprivate _getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this._getPosition(),\r\n      hasBackdrop: !this.triggersSubmenu(),\r\n      backdropClass: 'cdk-overlay-transparent-backdrop',\r\n      direction: this.dir,\r\n      scrollStrategy: this._scrollStrategy()\r\n    });\r\n  }\n/**\n * Listens to changes in the position of the overlay and sets the correct classes\ron the menu based on the new position. This ensures the animation origin is always\rcorrect, even if a fallback position is used for the overlay.\n * @param {?} position\n * @return {?}\n */\nprivate _subscribeToPositions(position: ConnectedPositionStrategy): void {\r\n    this._positionSubscription = position.onPositionChange.subscribe(change => {\r\n      const /** @type {?} */ posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\r\n      const /** @type {?} */ posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\r\n\r\n      this.menu.setPositionClasses(posX, posY);\r\n    });\r\n  }\n/**\n * This method builds the position strategy for the overlay, so the menu is properly connected\rto the trigger.\r\\@returns ConnectedPositionStrategy\n * @return {?}\n */\nprivate _getPosition(): ConnectedPositionStrategy {\r\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\r\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\r\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\r\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\r\n    let /** @type {?} */ offsetY = 0;\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // When the menu is a sub-menu, it should always align itself\r\n      // to the edges of the trigger, instead of overlapping it.\r\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\r\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\r\n\r\n      // TODO(crisbeto): this should be a function, once the overlay supports it.\r\n      // Right now it will be wrong for the fallback positions.\r\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\r\n    } else if (!this.menu.overlapTrigger) {\r\n      originY = overlayY === 'top' ? 'bottom' : 'top';\r\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\r\n    }\r\n\r\n    return this._overlay.position()\r\n        .connectedTo(this._element, {originX, originY}, {overlayX, overlayY})\r\n        .withDirection(this.dir)\r\n        .withOffsetY(offsetY)\r\n        .withFallbackPosition(\r\n            {originX: originFallbackX, originY},\r\n            {overlayX: overlayFallbackX, overlayY})\r\n        .withFallbackPosition(\r\n            {originX, originY: originFallbackY},\r\n            {overlayX, overlayY: overlayFallbackY})\r\n        .withFallbackPosition(\r\n            {originX: originFallbackX, originY: originFallbackY},\r\n            {overlayX: overlayFallbackX, overlayY: overlayFallbackY});\r\n  }\n/**\n * Cleans up the active subscriptions.\n * @return {?}\n */\nprivate _cleanUpSubscriptions(): void {\r\n    this._closeSubscription.unsubscribe();\r\n    this._positionSubscription.unsubscribe();\r\n    this._hoverSubscription.unsubscribe();\r\n  }\n/**\n * Returns a stream that emits whenever an action that should close the menu occurs.\n * @return {?}\n */\nprivate _menuClosingActions() {\r\n    const /** @type {?} */ backdrop = /** @type {?} */(( this._overlayRef)).backdropClick();\r\n    const /** @type {?} */ parentClose = this._parentMenu ? this._parentMenu.close : observableOf(null);\r\n    const /** @type {?} */ hover = this._parentMenu ? RxChain.from(this._parentMenu.hover())\r\n        .call(filter, active => active !== this._menuItemInstance)\r\n        .call(filter, () => this._menuOpen)\r\n        .result() : observableOf(null);\r\n\r\n    return merge(backdrop, parentClose, hover);\r\n  }\n/**\n * Handles mouse presses on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleMousedown(event: MouseEvent): void {\r\n    if (!isFakeMousedownFromScreenReader(event)) {\r\n      this._openedByMouse = true;\r\n\r\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\r\n      // we should prevent focus from moving onto it via click to avoid the\r\n      // highlight from lingering on the menu item.\r\n      if (this.triggersSubmenu()) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\n/**\n * Handles key presses on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\r\n    const /** @type {?} */ keyCode = event.keyCode;\r\n\r\n    if (this.triggersSubmenu() && (\r\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\r\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\r\n      this.openMenu();\r\n    }\r\n  }\n/**\n * Handles click events on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleClick(event: MouseEvent): void {\r\n    if (this.triggersSubmenu()) {\r\n      // Stop event propagation to avoid closing the parent menu.\r\n      event.stopPropagation();\r\n      this.openMenu();\r\n    } else {\r\n      this.toggleMenu();\r\n    }\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: `[md-menu-trigger-for], [mat-menu-trigger-for],\r\n             [mdMenuTriggerFor], [matMenuTriggerFor]`,\r\n  host: {\r\n    'aria-haspopup': 'true',\r\n    '(mousedown)': '_handleMousedown($event)',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(click)': '_handleClick($event)',\r\n  },\r\n  exportAs: 'mdMenuTrigger, matMenuTrigger'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_MENU_SCROLL_STRATEGY, ] }, ]},\n{type: MdMenu, decorators: [{ type: Optional }, ]},\n{type: MdMenuItem, decorators: [{ type: Optional }, { type: Self }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_deprecatedMdMenuTriggerFor': [{ type: Input, args: ['md-menu-trigger-for', ] },],\n'_deprecatedMatMenuTriggerFor': [{ type: Input, args: ['mat-menu-trigger-for', ] },],\n'_matMenuTriggerFor': [{ type: Input, args: ['matMenuTriggerFor', ] },],\n'menu': [{ type: Input, args: ['mdMenuTriggerFor', ] },],\n'onMenuOpen': [{ type: Output },],\n'onMenuClose': [{ type: Output },],\n};\n}\n\nfunction MdMenuTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuTrigger.ctorParameters;\n/** @type {?} */\nMdMenuTrigger.propDecorators;\n/** @type {?} */\nMdMenuTrigger.prototype._portal;\n/** @type {?} */\nMdMenuTrigger.prototype._overlayRef;\n/** @type {?} */\nMdMenuTrigger.prototype._menuOpen;\n/** @type {?} */\nMdMenuTrigger.prototype._closeSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._positionSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._hoverSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._openedByMouse;\n/**\n * References the menu instance that the trigger is associated with.\n * @type {?}\n */\nMdMenuTrigger.prototype.menu;\n/**\n * Event emitted when the associated menu is opened.\n * @type {?}\n */\nMdMenuTrigger.prototype.onMenuOpen;\n/**\n * Event emitted when the associated menu is closed.\n * @type {?}\n */\nMdMenuTrigger.prototype.onMenuClose;\n/** @type {?} */\nMdMenuTrigger.prototype._overlay;\n/** @type {?} */\nMdMenuTrigger.prototype._element;\n/** @type {?} */\nMdMenuTrigger.prototype._viewContainerRef;\n/** @type {?} */\nMdMenuTrigger.prototype._scrollStrategy;\n/** @type {?} */\nMdMenuTrigger.prototype._parentMenu;\n/** @type {?} */\nMdMenuTrigger.prototype._menuItemInstance;\n/** @type {?} */\nMdMenuTrigger.prototype._dir;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {AnimationEvent} from '@angular/animations';\r\nimport {FocusKeyManager} from '@angular/cdk/a11y';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {ESCAPE, LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {RxChain, startWith, switchMap} from '@angular/cdk/rxjs';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {fadeInItems, transformMenu} from './menu-animations';\r\nimport {throwMdMenuInvalidPositionX, throwMdMenuInvalidPositionY} from './menu-errors';\r\nimport {MdMenuItem} from './menu-item';\r\nimport {MdMenuPanel} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\n\r\n\r\n/** Default `md-menu` options that can be overridden. */\r\nexport interface MdMenuDefaultOptions {\r\n  xPosition: MenuPositionX;\r\n  yPosition: MenuPositionY;\r\n  overlapTrigger: boolean;\r\n}\n/**\n * Injection token to be used to override the default options for `md-menu`.\n */\nexport const MD_MENU_DEFAULT_OPTIONS =\r\n    new InjectionToken<MdMenuDefaultOptions>('md-menu-default-options');\n/**\n * Start elevation for the menu panel.\r\\@docs-private\n */\nconst MD_MENU_BASE_ELEVATION = 2;\nexport class MdMenu implements AfterContentInit, MdMenuPanel, OnDestroy {\nprivate _keyManager: FocusKeyManager<MdMenuItem>;\nprivate _xPosition: MenuPositionX = this._defaultOptions.xPosition;\nprivate _yPosition: MenuPositionY = this._defaultOptions.yPosition;\nprivate _previousElevation: string;\n/**\n * Subscription to tab events on the menu panel\n */\nprivate _tabSubscription = Subscription.EMPTY;\n/**\n * Config object to be passed into the menu's ngClass\n */\n_classList: any = {};\n/**\n * Current state of the panel animation.\n */\n_panelAnimationState: 'void' | 'enter-start' | 'enter' = 'void';\n/**\n * Parent menu of the current menu panel.\n */\nparentMenu: MdMenuPanel | undefined;\n/**\n * Layout direction of the menu.\n */\ndirection: Direction;\n/**\n * Position of the menu in the X axis.\n * @return {?}\n */\nget xPosition() { return this._xPosition; }\n/**\n * @param {?} value\n * @return {?}\n */\nset xPosition(value: MenuPositionX) {\r\n    if (value !== 'before' && value !== 'after') {\r\n      throwMdMenuInvalidPositionX();\r\n    }\r\n    this._xPosition = value;\r\n    this.setPositionClasses();\r\n  }\n/**\n * Position of the menu in the Y axis.\n * @return {?}\n */\nget yPosition() { return this._yPosition; }\n/**\n * @param {?} value\n * @return {?}\n */\nset yPosition(value: MenuPositionY) {\r\n    if (value !== 'above' && value !== 'below') {\r\n      throwMdMenuInvalidPositionY();\r\n    }\r\n    this._yPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n   templateRef: TemplateRef<any>;\n/**\n * List of the items inside of a menu.\n */\nitems: QueryList<MdMenuItem>;\n/**\n * Whether the menu should overlap its trigger.\n */\noverlapTrigger = this._defaultOptions.overlapTrigger;\n/**\n * This method takes classes set on the host md-menu element and applies them on the\rmenu template that displays in the overlay container.  Otherwise, it's difficult\rto style the containing menu from outside the component.\r\\@param classes list of class names\n * @param {?} classes\n * @return {?}\n */\nset classList(classes: string) {\r\n    if (classes && classes.length) {\r\n      this._classList = classes.split(' ').reduce((obj: any, className: string) => {\r\n        obj[className] = true;\r\n        return obj;\r\n      }, {});\r\n\r\n      this._elementRef.nativeElement.className = '';\r\n      this.setPositionClasses();\r\n    }\r\n  }\n/**\n * Event emitted when the menu is closed.\n */\nclose = new EventEmitter<void | 'click' | 'keydown'>();\n/**\n * @param {?} _elementRef\n * @param {?} _defaultOptions\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _defaultOptions: MdMenuDefaultOptions) { }\n/**\n * @return {?}\n */\nngAfterContentInit() {\r\n    this._keyManager = new FocusKeyManager<MdMenuItem>(this.items).withWrap();\r\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close.emit('keydown'));\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    this._tabSubscription.unsubscribe();\r\n    this.close.emit();\r\n    this.close.complete();\r\n  }\n/**\n * Stream that emits whenever the hovered menu item changes.\n * @return {?}\n */\nhover(): Observable<MdMenuItem> {\r\n    return RxChain.from(this.items.changes)\r\n      .call(startWith, this.items)\r\n      .call(switchMap, (items: MdMenuItem[]) => merge(...items.map(item => item.hover)))\r\n      .result();\r\n  }\n/**\n * Handle a keyboard event from the menu, delegating to the appropriate action.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      case ESCAPE:\r\n        this.close.emit('keydown');\r\n        event.stopPropagation();\r\n      break;\r\n      case LEFT_ARROW:\r\n        if (this.parentMenu && this.direction === 'ltr') {\r\n          this.close.emit('keydown');\r\n        }\r\n      break;\r\n      case RIGHT_ARROW:\r\n        if (this.parentMenu && this.direction === 'rtl') {\r\n          this.close.emit('keydown');\r\n        }\r\n      break;\r\n      default:\r\n        this._keyManager.onKeydown(event);\r\n    }\r\n  }\n/**\n * Focus the first item in the menu. This method is used by the menu trigger\rto focus the first item when the menu is opened by the ENTER key.\n * @return {?}\n */\nfocusFirstItem() {\r\n    this._keyManager.setFirstItemActive();\r\n  }\n/**\n * It's necessary to set position-based classes to ensure the menu panel animation\rfolds out from the correct direction.\n * @param {?=} posX\n * @param {?=} posY\n * @return {?}\n */\nsetPositionClasses(posX = this.xPosition, posY = this.yPosition): void {\r\n    this._classList['mat-menu-before'] = posX === 'before';\r\n    this._classList['mat-menu-after'] = posX === 'after';\r\n    this._classList['mat-menu-above'] = posY === 'above';\r\n    this._classList['mat-menu-below'] = posY === 'below';\r\n  }\n/**\n * Sets the menu panel elevation.\r\\@param depth Number of parent menus that come before the menu.\n * @param {?} depth\n * @return {?}\n */\nsetElevation(depth: number): void {\r\n    // The elevation starts at the base and increases by one for each level.\r\n    const /** @type {?} */ newElevation = `mat-elevation-z${MD_MENU_BASE_ELEVATION + depth}`;\r\n    const /** @type {?} */ customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\r\n\r\n    if (!customElevation || customElevation === this._previousElevation) {\r\n      if (this._previousElevation) {\r\n        this._classList[this._previousElevation] = false;\r\n      }\r\n\r\n      this._classList[newElevation] = true;\r\n      this._previousElevation = newElevation;\r\n    }\r\n  }\n/**\n * Starts the enter animation.\n * @return {?}\n */\n_startAnimation() {\r\n    this._panelAnimationState = 'enter-start';\r\n  }\n/**\n * Resets the panel animation to its initial state.\n * @return {?}\n */\n_resetAnimation() {\r\n    this._panelAnimationState = 'void';\r\n  }\n/**\n * Callback that is invoked when the panel animation completes.\n * @param {?} event\n * @return {?}\n */\n_onAnimationDone(event: AnimationEvent) {\r\n    // After the initial expansion is done, trigger the second phase of the enter animation.\r\n    if (event.toState === 'enter-start') {\r\n      this._panelAnimationState = 'enter';\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: 'md-menu, mat-menu',\r\n  templateUrl: 'menu.html',\r\n  styleUrls: ['menu.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  animations: [\r\n    transformMenu,\r\n    fadeInItems\r\n  ],\r\n  exportAs: 'mdMenu, matMenu'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_MENU_DEFAULT_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'xPosition': [{ type: Input },],\n'yPosition': [{ type: Input },],\n'templateRef': [{ type: ViewChild, args: [TemplateRef, ] },],\n'items': [{ type: ContentChildren, args: [MdMenuItem, ] },],\n'overlapTrigger': [{ type: Input },],\n'classList': [{ type: Input, args: ['class', ] },],\n'close': [{ type: Output },],\n};\n}\n\nfunction MdMenu_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenu.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenu.ctorParameters;\n/** @type {?} */\nMdMenu.propDecorators;\n/** @type {?} */\nMdMenu.prototype._keyManager;\n/** @type {?} */\nMdMenu.prototype._xPosition;\n/** @type {?} */\nMdMenu.prototype._yPosition;\n/** @type {?} */\nMdMenu.prototype._previousElevation;\n/**\n * Subscription to tab events on the menu panel\n * @type {?}\n */\nMdMenu.prototype._tabSubscription;\n/**\n * Config object to be passed into the menu's ngClass\n * @type {?}\n */\nMdMenu.prototype._classList;\n/**\n * Current state of the panel animation.\n * @type {?}\n */\nMdMenu.prototype._panelAnimationState;\n/**\n * Parent menu of the current menu panel.\n * @type {?}\n */\nMdMenu.prototype.parentMenu;\n/**\n * Layout direction of the menu.\n * @type {?}\n */\nMdMenu.prototype.direction;\n/** @type {?} */\nMdMenu.prototype.templateRef;\n/**\n * List of the items inside of a menu.\n * @type {?}\n */\nMdMenu.prototype.items;\n/**\n * Whether the menu should overlap its trigger.\n * @type {?}\n */\nMdMenu.prototype.overlapTrigger;\n/**\n * Event emitted when the menu is closed.\n * @type {?}\n */\nMdMenu.prototype.close;\n/** @type {?} */\nMdMenu.prototype._elementRef;\n/** @type {?} */\nMdMenu.prototype._defaultOptions;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {FocusableOption} from '@angular/cdk/a11y';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanDisable, MATERIAL_COMPATIBILITY_MODE, mixinDisabled} from '@angular/material/core';\r\nimport {Subject} from 'rxjs/Subject';\n/**\n * \\@docs-private\n */\nexport class MdMenuItemBase {}\r\nexport const /** @type {?} */ _MdMenuItemMixinBase = mixinDisabled(MdMenuItemBase);\n/**\n * This directive is intended to be used inside an md-menu tag.\rIt exists mostly to set the role attribute.\n */\nexport class MdMenuItem extends _MdMenuItemMixinBase implements FocusableOption, CanDisable,\r\n  OnDestroy {\n/**\n * Stream that emits when the menu item is hovered.\n */\nhover: Subject<MdMenuItem> = new Subject();\n/**\n * Whether the menu item is highlighted.\n */\n_highlighted: boolean = false;\n/**\n * Whether the menu item acts as a trigger for a sub-menu.\n */\n_triggersSubmenu: boolean = false;\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) {\r\n    super();\r\n  }\n/**\n * Focuses the menu item.\n * @return {?}\n */\nfocus(): void {\r\n    this._getHostElement().focus();\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    this.hover.complete();\r\n  }\n/**\n * Used to set the `tabindex`.\n * @return {?}\n */\n_getTabIndex(): string {\r\n    return this.disabled ? '-1' : '0';\r\n  }\n/**\n * Returns the host DOM element.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\r\n    return this._elementRef.nativeElement;\r\n  }\n/**\n * Prevents the default element actions if it is disabled.\n * @param {?} event\n * @return {?}\n */\n_checkDisabled(event: Event): void {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\n/**\n * Emits to the hover stream.\n * @return {?}\n */\n_emitHoverEvent() {\r\n    if (!this.disabled) {\r\n      this.hover.next(this);\r\n    }\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: '[md-menu-item], [mat-menu-item]',\r\n  inputs: ['disabled'],\r\n  host: {\r\n    'role': 'menuitem',\r\n    'class': 'mat-menu-item',\r\n    '[class.mat-menu-item-highlighted]': '_highlighted',\r\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\r\n    '[attr.tabindex]': '_getTabIndex()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.disabled]': 'disabled || null',\r\n    '(click)': '_checkDisabled($event)',\r\n    '(mouseenter)': '_emitHoverEvent()',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  templateUrl: 'menu-item.html',\r\n  exportAs: 'mdMenuItem, matMenuItem',\r\n  viewProviders: [{provide: MATERIAL_COMPATIBILITY_MODE, useValue: true}],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction MdMenuItem_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuItem.ctorParameters;\n/**\n * Stream that emits when the menu item is hovered.\n * @type {?}\n */\nMdMenuItem.prototype.hover;\n/**\n * Whether the menu item is highlighted.\n * @type {?}\n */\nMdMenuItem.prototype._highlighted;\n/**\n * Whether the menu item acts as a trigger for a sub-menu.\n * @type {?}\n */\nMdMenuItem.prototype._triggersSubmenu;\n/** @type {?} */\nMdMenuItem.prototype._elementRef;\n}\n\r\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid md-menu instance\r\\@docs-private\n * @return {?}\n */\nexport function throwMdMenuMissingError() {\r\n  throw Error(`md-menu-trigger: must pass in an md-menu instance.\r\n\r\n    Example:\r\n      <md-menu #menu=\"mdMenu\"></md-menu>\r\n      <button [mdMenuTriggerFor]=\"menu\"></button>`);\r\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\rIn other words, it doesn't match 'before' or 'after'.\r\\@docs-private\n * @return {?}\n */\nexport function throwMdMenuInvalidPositionX() {\r\n  throw Error(`x-position value must be either 'before' or after'.\r\n      Example: <md-menu x-position=\"before\" #menu=\"mdMenu\"></md-menu>`);\r\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\rIn other words, it doesn't match 'above' or 'below'.\r\\@docs-private\n * @return {?}\n */\nexport function throwMdMenuInvalidPositionY() {\r\n  throw Error(`y-position value must be either 'above' or below'.\r\n      Example: <md-menu y-position=\"above\" #menu=\"mdMenu\"></md-menu>`);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport{\r\n  trigger,\r\n  state,\r\n  style,\r\n  animate,\r\n  transition,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * Below are all the animations for the md-menu component.\r\n * Animation duration and timing values are based on:\r\n * https://material.io/guidelines/components/menus.html#menus-usage\r\n */\r\n\r\n\r\n/**\r\n * This animation controls the menu panel's entry and exit from the page.\r\n *\r\n * When the menu panel is added to the DOM, it scales in and fades in its border.\r\n *\r\n * When the menu panel is removed from the DOM, it simply fades out after a brief\r\n * delay to display the ripple.\r\n */\r\n\r\n// TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.\r\nexport const /** @type {?} */ transformMenu: AnimationTriggerMetadata = trigger('transformMenu', [\r\n  state('void', style({\r\n    opacity: 0,\r\n    // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\r\n    // as of 4.2, which causes the animation to be skipped if it starts from 0.\r\n    transform: 'scale(0.01, 0.01)'\r\n  })),\r\n  state('enter-start', style({\r\n    opacity: 1,\r\n    transform: 'scale(1, 0.5)'\r\n  })),\r\n  state('enter', style({\r\n    transform: 'scale(1, 1)'\r\n  })),\r\n  transition('void => enter-start', animate('100ms linear')),\r\n  transition('enter-start => enter', animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\r\n  transition('* => void', animate('150ms 50ms linear', style({opacity: 0})))\r\n]);\n/**\n * This animation fades in the background color and content of the menu panel\rafter its containing element is scaled in.\n */\nexport const fadeInItems: AnimationTriggerMetadata = trigger('fadeInItems', [\r\n  state('showing', style({opacity: 1})),\r\n  transition('void => *', [\r\n    style({opacity: 0}),\r\n    animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\r\n  ])\r\n]);\r\n"],"names":["observableOf"],"mappings":"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"}