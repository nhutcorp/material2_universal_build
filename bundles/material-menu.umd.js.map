{"version":3,"file":"material-menu.umd.js","sources":["../../src/lib/menu/index.ts","../../src/lib/menu/menu-module.ts","../../src/lib/menu/menu-trigger.ts","../../src/lib/menu/menu-directive.ts","../../src/lib/menu/menu-item.ts","../../src/lib/menu/menu-errors.ts","../../src/lib/menu/menu-animations.ts","../../src/lib/core/style/apply-transform.ts","../../src/lib/core/testing/month-constants.ts","../../src/lib/core/index.ts","../../src/lib/core/option/index.ts","../../src/lib/core/option/option.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/ripple/index.ts","../../src/lib/core/ripple/ripple.ts","../../src/lib/core/ripple/ripple-renderer.ts","../../src/lib/core/ripple/ripple-ref.ts","../../src/lib/core/line/line.ts","../../src/lib/core/gestures/gesture-config.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/datetime/index.ts","../../src/lib/core/datetime/native-date-formats.ts","../../src/lib/core/datetime/native-date-adapter.ts","../../src/lib/core/util/object-extend.ts","../../src/lib/core/datetime/date-adapter.ts","../../src/lib/core/coordination/unique-selection-dispatcher.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/disable-ripple.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/compatibility/compatibility.ts","../../src/lib/core/animation/animation.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {MD_MENU_SCROLL_STRATEGY,fadeInItems,transformMenu,MdMenuModule,MdMenu,MdMenuDefaultOptions,MD_MENU_DEFAULT_OPTIONS,MdMenuItem,MdMenuTrigger,MdMenuPanel,MenuPositionX,MenuPositionY,MAT_MENU_DEFAULT_OPTIONS,MatMenu,MatMenuDefaultOptions,MatMenuItem,MatMenuModule,MatMenuPanel,MatMenuTrigger} from './public_api';\n\nexport {MdMenuItemBase as ɵa,_MdMenuItemMixinBase as ɵb} from './menu-item';\nexport {MD_MENU_SCROLL_STRATEGY_PROVIDER as ɵd,MD_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵc} from './menu-trigger';","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MdCommonModule} from '@angular/material/core';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {MdMenu, MD_MENU_DEFAULT_OPTIONS} from './menu-directive';\r\nimport {MdMenuItem} from './menu-item';\r\nimport {MdMenuTrigger, MD_MENU_SCROLL_STRATEGY_PROVIDER} from './menu-trigger';\r\nimport {MdRippleModule} from '@angular/material/core';\nexport class MdMenuModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [\r\n    OverlayModule,\r\n    CommonModule,\r\n    MdRippleModule,\r\n    MdCommonModule,\r\n  ],\r\n  exports: [MdMenu, MdMenuItem, MdMenuTrigger, MdCommonModule],\r\n  declarations: [MdMenu, MdMenuItem, MdMenuTrigger],\r\n  providers: [\r\n    MD_MENU_SCROLL_STRATEGY_PROVIDER,\r\n    {\r\n      provide: MD_MENU_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        overlapTrigger: true,\r\n        xPosition: 'after',\r\n        yPosition: 'below',\r\n      },\r\n    }\r\n  ],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdMenuModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {\r\n  ConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  Overlay,\r\n  OverlayRef,\r\n  OverlayConfig,\r\n  RepositionScrollStrategy,\r\n  ScrollStrategy,\r\n  VerticalConnectionPos,\r\n} from '@angular/cdk/overlay';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {filter, RxChain} from '@angular/cdk/rxjs';\r\nimport {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {of as observableOf} from 'rxjs/observable/of';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {MdMenu} from './menu-directive';\r\nimport {throwMdMenuMissingError} from './menu-errors';\r\nimport {MdMenuItem} from './menu-item';\r\nimport {MdMenuPanel} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\n/**\n * Injection token that determines the scroll handling while the menu is open.\n */\nexport const MD_MENU_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('md-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => RepositionScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\n/**\n * \\@docs-private\n */\nexport const MD_MENU_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: MD_MENU_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MD_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\n/**\n * Default top padding of the menu panel.\n */\nexport const MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an md-menu tag.  It is\rresponsible for toggling the display of the provided menu instance.\n */\nexport class MdMenuTrigger implements AfterViewInit, OnDestroy {\nprivate _portal: TemplatePortal<any>;\nprivate _overlayRef: OverlayRef | null = null;\nprivate _menuOpen: boolean = false;\nprivate _closeSubscription = Subscription.EMPTY;\nprivate _positionSubscription = Subscription.EMPTY;\nprivate _hoverSubscription = Subscription.EMPTY;\nprivate _openedByMouse: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMdMenuTriggerFor(): MdMenuPanel {\r\n    return this.menu;\r\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMdMenuTriggerFor(v: MdMenuPanel) {\r\n    this.menu = v;\r\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMatMenuTriggerFor(): MdMenuPanel {\r\n    return this.menu;\r\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMatMenuTriggerFor(v: MdMenuPanel) {\r\n    this.menu = v;\r\n  }\n/**\n * @return {?}\n */\nget _matMenuTriggerFor(): MdMenuPanel {\r\n    return this.menu;\r\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matMenuTriggerFor(v: MdMenuPanel) {\r\n    this.menu = v;\r\n  }\n/**\n * References the menu instance that the trigger is associated with.\n */\nmenu: MdMenuPanel;\n/**\n * Event emitted when the associated menu is opened.\n */\nonMenuOpen = new EventEmitter<void>();\n/**\n * Event emitted when the associated menu is closed.\n */\nonMenuClose = new EventEmitter<void>();\n/**\n * @param {?} _overlay\n * @param {?} _element\n * @param {?} _viewContainerRef\n * @param {?} _scrollStrategy\n * @param {?} _parentMenu\n * @param {?} _menuItemInstance\n * @param {?} _dir\n */\nconstructor(private _overlay: Overlay,\nprivate _element: ElementRef,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _scrollStrategy,\nprivate _parentMenu: MdMenu,\nprivate _menuItemInstance: MdMenuItem,\nprivate _dir: Directionality) {\r\n\r\n    if (_menuItemInstance) {\r\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\r\n    }\r\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\r\n    this._checkMenu();\r\n\r\n    this.menu.close.subscribe(reason => {\r\n      this.closeMenu();\r\n\r\n      // If a click closed the menu, we should close the entire chain of nested menus.\r\n      if (reason === 'click' && this._parentMenu) {\r\n        this._parentMenu.close.emit(reason);\r\n      }\r\n    });\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // Subscribe to changes in the hovered item in order to toggle the panel.\r\n      this._hoverSubscription = filter\r\n          .call(this._parentMenu.hover(), active => active === this._menuItemInstance)\r\n          .subscribe(() => {\r\n            this._openedByMouse = true;\r\n            this.openMenu();\r\n          });\r\n    }\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n    }\r\n\r\n    this._cleanUpSubscriptions();\r\n  }\n/**\n * Whether the menu is open.\n * @return {?}\n */\nget menuOpen(): boolean {\r\n    return this._menuOpen;\r\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\nget dir(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\n/**\n * Whether the menu triggers a sub-menu or a top-level one.\n * @return {?}\n */\ntriggersSubmenu(): boolean {\r\n    return !!(this._menuItemInstance && this._parentMenu);\r\n  }\n/**\n * Toggles the menu between the open and closed states.\n * @return {?}\n */\ntoggleMenu(): void {\r\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\r\n  }\n/**\n * Opens the menu.\n * @return {?}\n */\nopenMenu(): void {\r\n    if (!this._menuOpen) {\r\n      this._createOverlay().attach(this._portal);\r\n      this._closeSubscription = this._menuClosingActions().subscribe(() => this.menu.close.emit());\r\n      this._initMenu();\r\n\r\n      if (this.menu instanceof MdMenu) {\r\n        this.menu._startAnimation();\r\n      }\r\n    }\r\n  }\n/**\n * Closes the menu.\n * @return {?}\n */\ncloseMenu(): void {\r\n    if (this._overlayRef && this.menuOpen) {\r\n      this._resetMenu();\r\n      this._overlayRef.detach();\r\n      this._closeSubscription.unsubscribe();\r\n      this.menu.close.emit();\r\n\r\n      if (this.menu instanceof MdMenu) {\r\n        this.menu._resetAnimation();\r\n      }\r\n    }\r\n  }\n/**\n * Focuses the menu trigger.\n * @return {?}\n */\nfocus() {\r\n    this._element.nativeElement.focus();\r\n  }\n/**\n * This method sets the menu state to open and focuses the first item if\rthe menu was opened via the keyboard.\n * @return {?}\n */\nprivate _initMenu(): void {\r\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\r\n    this.menu.direction = this.dir;\r\n    this._setMenuElevation();\r\n    this._setIsMenuOpen(true);\r\n\r\n    // Should only set focus if opened via the keyboard, so keyboard users can\r\n    // can easily navigate menu items. According to spec, mouse users should not\r\n    // see the focus style.\r\n    if (!this._openedByMouse) {\r\n      this.menu.focusFirstItem();\r\n    }\r\n  }\n/**\n * Updates the menu elevation based on the amount of parent menus that it has.\n * @return {?}\n */\nprivate _setMenuElevation(): void {\r\n    if (this.menu.setElevation) {\r\n      let /** @type {?} */ depth = 0;\r\n      let /** @type {?} */ parentMenu = this.menu.parentMenu;\r\n\r\n      while (parentMenu) {\r\n        depth++;\r\n        parentMenu = parentMenu.parentMenu;\r\n      }\r\n\r\n      this.menu.setElevation(depth);\r\n    }\r\n  }\n/**\n * This method resets the menu when it's closed, most importantly restoring\rfocus to the menu trigger if the menu was opened via the keyboard.\n * @return {?}\n */\nprivate _resetMenu(): void {\r\n    this._setIsMenuOpen(false);\r\n\r\n    // Focus only needs to be reset to the host element if the menu was opened\r\n    // by the keyboard and manually shifted to the first menu item.\r\n    if (!this._openedByMouse) {\r\n      this.focus();\r\n    }\r\n\r\n    this._openedByMouse = false;\r\n  }\n/**\n * @param {?} isOpen\n * @return {?}\n */\nprivate _setIsMenuOpen(isOpen: boolean): void {\r\n    this._menuOpen = isOpen;\r\n    this._menuOpen ? this.onMenuOpen.emit() : this.onMenuClose.emit();\r\n\r\n    if (this.triggersSubmenu()) {\r\n      this._menuItemInstance._highlighted = isOpen;\r\n    }\r\n  }\n/**\n * This method checks that a valid instance of MdMenu has been passed into\rmdMenuTriggerFor. If not, an exception is thrown.\n * @return {?}\n */\nprivate _checkMenu() {\r\n    if (!this.menu) {\r\n      throwMdMenuMissingError();\r\n    }\r\n  }\n/**\n * This method creates the overlay from the provided menu's template and saves its\rOverlayRef so that it can be attached to the DOM when openMenu is called.\n * @return {?}\n */\nprivate _createOverlay(): OverlayRef {\r\n    if (!this._overlayRef) {\r\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\r\n      const /** @type {?} */ config = this._getOverlayConfig();\r\n      this._subscribeToPositions( /** @type {?} */((config.positionStrategy as ConnectedPositionStrategy)));\r\n      this._overlayRef = this._overlay.create(config);\r\n    }\r\n\r\n    return this._overlayRef;\r\n  }\n/**\n * This method builds the configuration object needed to create the overlay, the OverlayState.\r\\@returns OverlayConfig\n * @return {?}\n */\nprivate _getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this._getPosition(),\r\n      hasBackdrop: !this.triggersSubmenu(),\r\n      backdropClass: 'cdk-overlay-transparent-backdrop',\r\n      direction: this.dir,\r\n      scrollStrategy: this._scrollStrategy()\r\n    });\r\n  }\n/**\n * Listens to changes in the position of the overlay and sets the correct classes\ron the menu based on the new position. This ensures the animation origin is always\rcorrect, even if a fallback position is used for the overlay.\n * @param {?} position\n * @return {?}\n */\nprivate _subscribeToPositions(position: ConnectedPositionStrategy): void {\r\n    this._positionSubscription = position.onPositionChange.subscribe(change => {\r\n      const /** @type {?} */ posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\r\n      const /** @type {?} */ posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\r\n\r\n      this.menu.setPositionClasses(posX, posY);\r\n    });\r\n  }\n/**\n * This method builds the position strategy for the overlay, so the menu is properly connected\rto the trigger.\r\\@returns ConnectedPositionStrategy\n * @return {?}\n */\nprivate _getPosition(): ConnectedPositionStrategy {\r\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\r\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\r\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\r\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\r\n    let /** @type {?} */ offsetY = 0;\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // When the menu is a sub-menu, it should always align itself\r\n      // to the edges of the trigger, instead of overlapping it.\r\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\r\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\r\n\r\n      // TODO(crisbeto): this should be a function, once the overlay supports it.\r\n      // Right now it will be wrong for the fallback positions.\r\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\r\n    } else if (!this.menu.overlapTrigger) {\r\n      originY = overlayY === 'top' ? 'bottom' : 'top';\r\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\r\n    }\r\n\r\n    return this._overlay.position()\r\n        .connectedTo(this._element, {originX, originY}, {overlayX, overlayY})\r\n        .withDirection(this.dir)\r\n        .withOffsetY(offsetY)\r\n        .withFallbackPosition(\r\n            {originX: originFallbackX, originY},\r\n            {overlayX: overlayFallbackX, overlayY})\r\n        .withFallbackPosition(\r\n            {originX, originY: originFallbackY},\r\n            {overlayX, overlayY: overlayFallbackY})\r\n        .withFallbackPosition(\r\n            {originX: originFallbackX, originY: originFallbackY},\r\n            {overlayX: overlayFallbackX, overlayY: overlayFallbackY});\r\n  }\n/**\n * Cleans up the active subscriptions.\n * @return {?}\n */\nprivate _cleanUpSubscriptions(): void {\r\n    this._closeSubscription.unsubscribe();\r\n    this._positionSubscription.unsubscribe();\r\n    this._hoverSubscription.unsubscribe();\r\n  }\n/**\n * Returns a stream that emits whenever an action that should close the menu occurs.\n * @return {?}\n */\nprivate _menuClosingActions() {\r\n    const /** @type {?} */ backdrop = /** @type {?} */(( this._overlayRef)).backdropClick();\r\n    const /** @type {?} */ parentClose = this._parentMenu ? this._parentMenu.close : observableOf(null);\r\n    const /** @type {?} */ hover = this._parentMenu ? RxChain.from(this._parentMenu.hover())\r\n        .call(filter, active => active !== this._menuItemInstance)\r\n        .call(filter, () => this._menuOpen)\r\n        .result() : observableOf(null);\r\n\r\n    return merge(backdrop, parentClose, hover);\r\n  }\n/**\n * Handles mouse presses on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleMousedown(event: MouseEvent): void {\r\n    if (!isFakeMousedownFromScreenReader(event)) {\r\n      this._openedByMouse = true;\r\n\r\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\r\n      // we should prevent focus from moving onto it via click to avoid the\r\n      // highlight from lingering on the menu item.\r\n      if (this.triggersSubmenu()) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\n/**\n * Handles key presses on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\r\n    const /** @type {?} */ keyCode = event.keyCode;\r\n\r\n    if (this.triggersSubmenu() && (\r\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\r\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\r\n      this.openMenu();\r\n    }\r\n  }\n/**\n * Handles click events on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleClick(event: MouseEvent): void {\r\n    if (this.triggersSubmenu()) {\r\n      // Stop event propagation to avoid closing the parent menu.\r\n      event.stopPropagation();\r\n      this.openMenu();\r\n    } else {\r\n      this.toggleMenu();\r\n    }\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: `[md-menu-trigger-for], [mat-menu-trigger-for],\r\n             [mdMenuTriggerFor], [matMenuTriggerFor]`,\r\n  host: {\r\n    'aria-haspopup': 'true',\r\n    '(mousedown)': '_handleMousedown($event)',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(click)': '_handleClick($event)',\r\n  },\r\n  exportAs: 'mdMenuTrigger, matMenuTrigger'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_MENU_SCROLL_STRATEGY, ] }, ]},\n{type: MdMenu, decorators: [{ type: Optional }, ]},\n{type: MdMenuItem, decorators: [{ type: Optional }, { type: Self }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_deprecatedMdMenuTriggerFor': [{ type: Input, args: ['md-menu-trigger-for', ] },],\n'_deprecatedMatMenuTriggerFor': [{ type: Input, args: ['mat-menu-trigger-for', ] },],\n'_matMenuTriggerFor': [{ type: Input, args: ['matMenuTriggerFor', ] },],\n'menu': [{ type: Input, args: ['mdMenuTriggerFor', ] },],\n'onMenuOpen': [{ type: Output },],\n'onMenuClose': [{ type: Output },],\n};\n}\n\nfunction MdMenuTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuTrigger.ctorParameters;\n/** @type {?} */\nMdMenuTrigger.propDecorators;\n/** @type {?} */\nMdMenuTrigger.prototype._portal;\n/** @type {?} */\nMdMenuTrigger.prototype._overlayRef;\n/** @type {?} */\nMdMenuTrigger.prototype._menuOpen;\n/** @type {?} */\nMdMenuTrigger.prototype._closeSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._positionSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._hoverSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._openedByMouse;\n/**\n * References the menu instance that the trigger is associated with.\n * @type {?}\n */\nMdMenuTrigger.prototype.menu;\n/**\n * Event emitted when the associated menu is opened.\n * @type {?}\n */\nMdMenuTrigger.prototype.onMenuOpen;\n/**\n * Event emitted when the associated menu is closed.\n * @type {?}\n */\nMdMenuTrigger.prototype.onMenuClose;\n/** @type {?} */\nMdMenuTrigger.prototype._overlay;\n/** @type {?} */\nMdMenuTrigger.prototype._element;\n/** @type {?} */\nMdMenuTrigger.prototype._viewContainerRef;\n/** @type {?} */\nMdMenuTrigger.prototype._scrollStrategy;\n/** @type {?} */\nMdMenuTrigger.prototype._parentMenu;\n/** @type {?} */\nMdMenuTrigger.prototype._menuItemInstance;\n/** @type {?} */\nMdMenuTrigger.prototype._dir;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {AnimationEvent} from '@angular/animations';\r\nimport {FocusKeyManager} from '@angular/cdk/a11y';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {ESCAPE, LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {RxChain, startWith, switchMap} from '@angular/cdk/rxjs';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {merge} from 'rxjs/observable/merge';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {fadeInItems, transformMenu} from './menu-animations';\r\nimport {throwMdMenuInvalidPositionX, throwMdMenuInvalidPositionY} from './menu-errors';\r\nimport {MdMenuItem} from './menu-item';\r\nimport {MdMenuPanel} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\n\r\n\r\n/** Default `md-menu` options that can be overridden. */\r\nexport interface MdMenuDefaultOptions {\r\n  xPosition: MenuPositionX;\r\n  yPosition: MenuPositionY;\r\n  overlapTrigger: boolean;\r\n}\n/**\n * Injection token to be used to override the default options for `md-menu`.\n */\nexport const MD_MENU_DEFAULT_OPTIONS =\r\n    new InjectionToken<MdMenuDefaultOptions>('md-menu-default-options');\n/**\n * Start elevation for the menu panel.\r\\@docs-private\n */\nconst MD_MENU_BASE_ELEVATION = 2;\nexport class MdMenu implements AfterContentInit, MdMenuPanel, OnDestroy {\nprivate _keyManager: FocusKeyManager<MdMenuItem>;\nprivate _xPosition: MenuPositionX = this._defaultOptions.xPosition;\nprivate _yPosition: MenuPositionY = this._defaultOptions.yPosition;\nprivate _previousElevation: string;\n/**\n * Subscription to tab events on the menu panel\n */\nprivate _tabSubscription = Subscription.EMPTY;\n/**\n * Config object to be passed into the menu's ngClass\n */\n_classList: any = {};\n/**\n * Current state of the panel animation.\n */\n_panelAnimationState: 'void' | 'enter-start' | 'enter' = 'void';\n/**\n * Parent menu of the current menu panel.\n */\nparentMenu: MdMenuPanel | undefined;\n/**\n * Layout direction of the menu.\n */\ndirection: Direction;\n/**\n * Position of the menu in the X axis.\n * @return {?}\n */\nget xPosition() { return this._xPosition; }\n/**\n * @param {?} value\n * @return {?}\n */\nset xPosition(value: MenuPositionX) {\r\n    if (value !== 'before' && value !== 'after') {\r\n      throwMdMenuInvalidPositionX();\r\n    }\r\n    this._xPosition = value;\r\n    this.setPositionClasses();\r\n  }\n/**\n * Position of the menu in the Y axis.\n * @return {?}\n */\nget yPosition() { return this._yPosition; }\n/**\n * @param {?} value\n * @return {?}\n */\nset yPosition(value: MenuPositionY) {\r\n    if (value !== 'above' && value !== 'below') {\r\n      throwMdMenuInvalidPositionY();\r\n    }\r\n    this._yPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n   templateRef: TemplateRef<any>;\n/**\n * List of the items inside of a menu.\n */\nitems: QueryList<MdMenuItem>;\n/**\n * Whether the menu should overlap its trigger.\n */\noverlapTrigger = this._defaultOptions.overlapTrigger;\n/**\n * This method takes classes set on the host md-menu element and applies them on the\rmenu template that displays in the overlay container.  Otherwise, it's difficult\rto style the containing menu from outside the component.\r\\@param classes list of class names\n * @param {?} classes\n * @return {?}\n */\nset classList(classes: string) {\r\n    if (classes && classes.length) {\r\n      this._classList = classes.split(' ').reduce((obj: any, className: string) => {\r\n        obj[className] = true;\r\n        return obj;\r\n      }, {});\r\n\r\n      this._elementRef.nativeElement.className = '';\r\n      this.setPositionClasses();\r\n    }\r\n  }\n/**\n * Event emitted when the menu is closed.\n */\nclose = new EventEmitter<void | 'click' | 'keydown'>();\n/**\n * @param {?} _elementRef\n * @param {?} _defaultOptions\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _defaultOptions: MdMenuDefaultOptions) { }\n/**\n * @return {?}\n */\nngAfterContentInit() {\r\n    this._keyManager = new FocusKeyManager<MdMenuItem>(this.items).withWrap();\r\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close.emit('keydown'));\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    this._tabSubscription.unsubscribe();\r\n    this.close.emit();\r\n    this.close.complete();\r\n  }\n/**\n * Stream that emits whenever the hovered menu item changes.\n * @return {?}\n */\nhover(): Observable<MdMenuItem> {\r\n    return RxChain.from(this.items.changes)\r\n      .call(startWith, this.items)\r\n      .call(switchMap, (items: MdMenuItem[]) => merge(...items.map(item => item.hover)))\r\n      .result();\r\n  }\n/**\n * Handle a keyboard event from the menu, delegating to the appropriate action.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      case ESCAPE:\r\n        this.close.emit('keydown');\r\n        event.stopPropagation();\r\n      break;\r\n      case LEFT_ARROW:\r\n        if (this.parentMenu && this.direction === 'ltr') {\r\n          this.close.emit('keydown');\r\n        }\r\n      break;\r\n      case RIGHT_ARROW:\r\n        if (this.parentMenu && this.direction === 'rtl') {\r\n          this.close.emit('keydown');\r\n        }\r\n      break;\r\n      default:\r\n        this._keyManager.onKeydown(event);\r\n    }\r\n  }\n/**\n * Focus the first item in the menu. This method is used by the menu trigger\rto focus the first item when the menu is opened by the ENTER key.\n * @return {?}\n */\nfocusFirstItem() {\r\n    this._keyManager.setFirstItemActive();\r\n  }\n/**\n * It's necessary to set position-based classes to ensure the menu panel animation\rfolds out from the correct direction.\n * @param {?=} posX\n * @param {?=} posY\n * @return {?}\n */\nsetPositionClasses(posX = this.xPosition, posY = this.yPosition): void {\r\n    this._classList['mat-menu-before'] = posX === 'before';\r\n    this._classList['mat-menu-after'] = posX === 'after';\r\n    this._classList['mat-menu-above'] = posY === 'above';\r\n    this._classList['mat-menu-below'] = posY === 'below';\r\n  }\n/**\n * Sets the menu panel elevation.\r\\@param depth Number of parent menus that come before the menu.\n * @param {?} depth\n * @return {?}\n */\nsetElevation(depth: number): void {\r\n    // The elevation starts at the base and increases by one for each level.\r\n    const /** @type {?} */ newElevation = `mat-elevation-z${MD_MENU_BASE_ELEVATION + depth}`;\r\n    const /** @type {?} */ customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\r\n\r\n    if (!customElevation || customElevation === this._previousElevation) {\r\n      if (this._previousElevation) {\r\n        this._classList[this._previousElevation] = false;\r\n      }\r\n\r\n      this._classList[newElevation] = true;\r\n      this._previousElevation = newElevation;\r\n    }\r\n  }\n/**\n * Starts the enter animation.\n * @return {?}\n */\n_startAnimation() {\r\n    this._panelAnimationState = 'enter-start';\r\n  }\n/**\n * Resets the panel animation to its initial state.\n * @return {?}\n */\n_resetAnimation() {\r\n    this._panelAnimationState = 'void';\r\n  }\n/**\n * Callback that is invoked when the panel animation completes.\n * @param {?} event\n * @return {?}\n */\n_onAnimationDone(event: AnimationEvent) {\r\n    // After the initial expansion is done, trigger the second phase of the enter animation.\r\n    if (event.toState === 'enter-start') {\r\n      this._panelAnimationState = 'enter';\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: 'md-menu, mat-menu',\r\n  templateUrl: 'menu.html',\r\n  styleUrls: ['menu.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  animations: [\r\n    transformMenu,\r\n    fadeInItems\r\n  ],\r\n  exportAs: 'mdMenu, matMenu'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_MENU_DEFAULT_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'xPosition': [{ type: Input },],\n'yPosition': [{ type: Input },],\n'templateRef': [{ type: ViewChild, args: [TemplateRef, ] },],\n'items': [{ type: ContentChildren, args: [MdMenuItem, ] },],\n'overlapTrigger': [{ type: Input },],\n'classList': [{ type: Input, args: ['class', ] },],\n'close': [{ type: Output },],\n};\n}\n\nfunction MdMenu_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenu.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenu.ctorParameters;\n/** @type {?} */\nMdMenu.propDecorators;\n/** @type {?} */\nMdMenu.prototype._keyManager;\n/** @type {?} */\nMdMenu.prototype._xPosition;\n/** @type {?} */\nMdMenu.prototype._yPosition;\n/** @type {?} */\nMdMenu.prototype._previousElevation;\n/**\n * Subscription to tab events on the menu panel\n * @type {?}\n */\nMdMenu.prototype._tabSubscription;\n/**\n * Config object to be passed into the menu's ngClass\n * @type {?}\n */\nMdMenu.prototype._classList;\n/**\n * Current state of the panel animation.\n * @type {?}\n */\nMdMenu.prototype._panelAnimationState;\n/**\n * Parent menu of the current menu panel.\n * @type {?}\n */\nMdMenu.prototype.parentMenu;\n/**\n * Layout direction of the menu.\n * @type {?}\n */\nMdMenu.prototype.direction;\n/** @type {?} */\nMdMenu.prototype.templateRef;\n/**\n * List of the items inside of a menu.\n * @type {?}\n */\nMdMenu.prototype.items;\n/**\n * Whether the menu should overlap its trigger.\n * @type {?}\n */\nMdMenu.prototype.overlapTrigger;\n/**\n * Event emitted when the menu is closed.\n * @type {?}\n */\nMdMenu.prototype.close;\n/** @type {?} */\nMdMenu.prototype._elementRef;\n/** @type {?} */\nMdMenu.prototype._defaultOptions;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {FocusableOption} from '@angular/cdk/a11y';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanDisable, MATERIAL_COMPATIBILITY_MODE, mixinDisabled} from '@angular/material/core';\r\nimport {Subject} from 'rxjs/Subject';\n/**\n * \\@docs-private\n */\nexport class MdMenuItemBase {}\r\nexport const /** @type {?} */ _MdMenuItemMixinBase = mixinDisabled(MdMenuItemBase);\n/**\n * This directive is intended to be used inside an md-menu tag.\rIt exists mostly to set the role attribute.\n */\nexport class MdMenuItem extends _MdMenuItemMixinBase implements FocusableOption, CanDisable,\r\n  OnDestroy {\n/**\n * Stream that emits when the menu item is hovered.\n */\nhover: Subject<MdMenuItem> = new Subject();\n/**\n * Whether the menu item is highlighted.\n */\n_highlighted: boolean = false;\n/**\n * Whether the menu item acts as a trigger for a sub-menu.\n */\n_triggersSubmenu: boolean = false;\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) {\r\n    super();\r\n  }\n/**\n * Focuses the menu item.\n * @return {?}\n */\nfocus(): void {\r\n    this._getHostElement().focus();\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    this.hover.complete();\r\n  }\n/**\n * Used to set the `tabindex`.\n * @return {?}\n */\n_getTabIndex(): string {\r\n    return this.disabled ? '-1' : '0';\r\n  }\n/**\n * Returns the host DOM element.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\r\n    return this._elementRef.nativeElement;\r\n  }\n/**\n * Prevents the default element actions if it is disabled.\n * @param {?} event\n * @return {?}\n */\n_checkDisabled(event: Event): void {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\n/**\n * Emits to the hover stream.\n * @return {?}\n */\n_emitHoverEvent() {\r\n    if (!this.disabled) {\r\n      this.hover.next(this);\r\n    }\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: '[md-menu-item], [mat-menu-item]',\r\n  inputs: ['disabled'],\r\n  host: {\r\n    'role': 'menuitem',\r\n    'class': 'mat-menu-item',\r\n    '[class.mat-menu-item-highlighted]': '_highlighted',\r\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\r\n    '[attr.tabindex]': '_getTabIndex()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.disabled]': 'disabled || null',\r\n    '(click)': '_checkDisabled($event)',\r\n    '(mouseenter)': '_emitHoverEvent()',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  templateUrl: 'menu-item.html',\r\n  exportAs: 'mdMenuItem, matMenuItem',\r\n  viewProviders: [{provide: MATERIAL_COMPATIBILITY_MODE, useValue: true}],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction MdMenuItem_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuItem.ctorParameters;\n/**\n * Stream that emits when the menu item is hovered.\n * @type {?}\n */\nMdMenuItem.prototype.hover;\n/**\n * Whether the menu item is highlighted.\n * @type {?}\n */\nMdMenuItem.prototype._highlighted;\n/**\n * Whether the menu item acts as a trigger for a sub-menu.\n * @type {?}\n */\nMdMenuItem.prototype._triggersSubmenu;\n/** @type {?} */\nMdMenuItem.prototype._elementRef;\n}\n\r\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid md-menu instance\r\\@docs-private\n * @return {?}\n */\nexport function throwMdMenuMissingError() {\r\n  throw Error(`md-menu-trigger: must pass in an md-menu instance.\r\n\r\n    Example:\r\n      <md-menu #menu=\"mdMenu\"></md-menu>\r\n      <button [mdMenuTriggerFor]=\"menu\"></button>`);\r\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\rIn other words, it doesn't match 'before' or 'after'.\r\\@docs-private\n * @return {?}\n */\nexport function throwMdMenuInvalidPositionX() {\r\n  throw Error(`x-position value must be either 'before' or after'.\r\n      Example: <md-menu x-position=\"before\" #menu=\"mdMenu\"></md-menu>`);\r\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\rIn other words, it doesn't match 'above' or 'below'.\r\\@docs-private\n * @return {?}\n */\nexport function throwMdMenuInvalidPositionY() {\r\n  throw Error(`y-position value must be either 'above' or below'.\r\n      Example: <md-menu y-position=\"above\" #menu=\"mdMenu\"></md-menu>`);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport{\r\n  trigger,\r\n  state,\r\n  style,\r\n  animate,\r\n  transition,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * Below are all the animations for the md-menu component.\r\n * Animation duration and timing values are based on:\r\n * https://material.io/guidelines/components/menus.html#menus-usage\r\n */\r\n\r\n\r\n/**\r\n * This animation controls the menu panel's entry and exit from the page.\r\n *\r\n * When the menu panel is added to the DOM, it scales in and fades in its border.\r\n *\r\n * When the menu panel is removed from the DOM, it simply fades out after a brief\r\n * delay to display the ripple.\r\n */\r\n\r\n// TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.\r\nexport const /** @type {?} */ transformMenu: AnimationTriggerMetadata = trigger('transformMenu', [\r\n  state('void', style({\r\n    opacity: 0,\r\n    // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\r\n    // as of 4.2, which causes the animation to be skipped if it starts from 0.\r\n    transform: 'scale(0.01, 0.01)'\r\n  })),\r\n  state('enter-start', style({\r\n    opacity: 1,\r\n    transform: 'scale(1, 0.5)'\r\n  })),\r\n  state('enter', style({\r\n    transform: 'scale(1, 1)'\r\n  })),\r\n  transition('void => enter-start', animate('100ms linear')),\r\n  transition('enter-start => enter', animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\r\n  transition('* => void', animate('150ms 50ms linear', style({opacity: 0})))\r\n]);\n/**\n * This animation fades in the background color and content of the menu panel\rafter its containing element is scaled in.\n */\nexport const fadeInItems: AnimationTriggerMetadata = trigger('fadeInItems', [\r\n  state('showing', style({opacity: 1})),\r\n  transition('void => *', [\r\n    style({opacity: 0}),\r\n    animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\r\n  ])\r\n]);\r\n","\n/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\r\\@param element\r\\@param transformValue\n * @param {?} element\n * @param {?} transformValue\n * @return {?}\n */\nexport function applyCssTransform(element: HTMLElement, transformValue: string) {\r\n  // It's important to trim the result, because the browser will ignore the set operation\r\n  // if the string contains only whitespace.\r\n  let /** @type {?} */ value = transformValue.trim();\r\n\r\n  element.style.transform = value;\r\n  element.style.webkitTransform = value;\r\n}\r\n","\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\rused to seeing them one-based. So we create these aliases to make writing the tests easier.\n */\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\r\n    OCT = 9, NOV = 10, DEC = 11;\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {AnimationCurves,AnimationDurations,MdCommonModule,MATERIAL_SANITY_CHECKS,CanDisable,mixinDisabled,CanColor,mixinColor,ThemePalette,CanDisableRipple,mixinDisableRipple,HasTabIndex,mixinTabIndex,MATERIAL_COMPATIBILITY_MODE,getMdCompatibilityInvalidPrefixError,MAT_ELEMENTS_SELECTOR,MD_ELEMENTS_SELECTOR,MatPrefixRejector,MdPrefixRejector,CompatibilityModule,NoConflictStyleCompatibilityMode,UniqueSelectionDispatcherListener,UniqueSelectionDispatcher,UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY,UNIQUE_SELECTION_DISPATCHER_PROVIDER,NativeDateModule,MdNativeDateModule,MAT_DATE_LOCALE,MAT_DATE_LOCALE_PROVIDER,DateAdapter,MdDateFormats,MD_DATE_FORMATS,NativeDateAdapter,MD_NATIVE_DATE_FORMATS,MD_ERROR_GLOBAL_OPTIONS,ErrorStateMatcher,ErrorOptions,defaultErrorStateMatcher,showOnDirtyErrorStateMatcher,HammerInput,HammerStatic,Recognizer,RecognizerStatic,HammerInstance,HammerManager,GestureConfig,MdLine,MdLineSetter,MdLineModule,MdOptionModule,MdOptionSelectionChange,MdOption,MdOptgroupBase,_MdOptgroupMixinBase,MdOptgroup,MD_PLACEHOLDER_GLOBAL_OPTIONS,FloatPlaceholderType,PlaceholderOptions,MdRipple,RippleGlobalOptions,MD_RIPPLE_GLOBAL_OPTIONS,RippleRef,RippleState,RippleConfig,RIPPLE_FADE_IN_DURATION,RIPPLE_FADE_OUT_DURATION,MdRippleModule,MdPseudoCheckboxModule,MdPseudoCheckboxState,MdPseudoCheckbox,applyCssTransform,extendObject,MAT_DATE_FORMATS,MAT_RIPPLE_GLOBAL_OPTIONS,MAT_NATIVE_DATE_FORMATS,MAT_PLACEHOLDER_GLOBAL_OPTIONS,MAT_ERROR_GLOBAL_OPTIONS,MatCommonModule,MatDateFormats,MatLine,MatLineModule,MatLineSetter,MatOptgroup,MatOptgroupBase,MatOption,MatOptionModule,MatOptionSelectionChange,MatNativeDateModule,MatPseudoCheckbox,MatPseudoCheckboxModule,MatPseudoCheckboxState,MatRipple,MatRippleModule,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC} from './public_api';\n\nexport {RippleRenderer as ɵa} from './ripple/ripple-renderer';","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MdRippleModule} from '../ripple/index';\r\nimport {MdPseudoCheckboxModule} from '../selection/index';\r\nimport {MdOption} from './option';\r\nimport {MdOptgroup} from './optgroup';\nexport class MdOptionModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [MdRippleModule, CommonModule, MdPseudoCheckboxModule],\r\n  exports: [MdOption, MdOptgroup],\r\n  declarations: [MdOption, MdOptgroup]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdOptionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOptionModule.ctorParameters;\n}\n\r\n\r\n\r\nexport {MdOptionSelectionChange,MdOption} from './option';\r\nexport {MdOptgroupBase,_MdOptgroupMixinBase,MdOptgroup} from './optgroup';\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {MATERIAL_COMPATIBILITY_MODE} from '../compatibility/compatibility';\r\nimport {MdOptgroup} from './optgroup';\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\rthe component definition.\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MdOption when selected or deselected.\n */\nexport class MdOptionSelectionChange {\n/**\n * @param {?} source\n * @param {?=} isUserInput\n */\nconstructor(public source: MdOption,\npublic isUserInput = false) { }\r\n}\n\nfunction MdOptionSelectionChange_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptionSelectionChange.prototype.source;\n/** @type {?} */\nMdOptionSelectionChange.prototype.isUserInput;\n}\n\n/**\n * Single option inside of a `<md-select>` element.\n */\nexport class MdOption {\nprivate _selected: boolean = false;\nprivate _active: boolean = false;\nprivate _multiple: boolean = false;\nprivate _disableRipple: boolean = false;\n/**\n * Whether the option is disabled.\n */\nprivate _disabled: boolean = false;\nprivate _id: string = `md-option-${_uniqueIdCounter++}`;\n/**\n * Whether the wrapping component is in multiple selection mode.\n * @return {?}\n */\nget multiple() { return this._multiple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset multiple(value: boolean) {\r\n    if (value !== this._multiple) {\r\n      this._multiple = value;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\n/**\n * The unique ID of the option.\n * @return {?}\n */\nget id() { return this._id; }\n/**\n * Whether or not the option is currently selected.\n * @return {?}\n */\nget selected(): boolean { return this._selected; }\n/**\n * The form value of the option.\n */\nvalue: any;\n/**\n * Whether the option is disabled.\n * @return {?}\n */\nget disabled() { return (this.group && this.group.disabled) || this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * Whether ripples for the option are disabled.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\r\n    this._disableRipple = value;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\n/**\n * Event emitted when the option is selected or deselected.\n */\nonSelectionChange = new EventEmitter<MdOptionSelectionChange>();\n/**\n * @param {?} _element\n * @param {?} _changeDetectorRef\n * @param {?} group\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef,\npublic readonly group: MdOptgroup) {}\n/**\n * Whether or not the option is currently active and ready to be selected.\rAn active option displays styles as if it is focused, but the\rfocus is actually retained somewhere else. This comes in handy\rfor components like autocomplete where focus must remain on the input.\n * @return {?}\n */\nget active(): boolean {\r\n    return this._active;\r\n  }\n/**\n * The displayed value of the option. It is necessary to show the selected option in the\rselect's trigger.\n * @return {?}\n */\nget viewValue(): string {\r\n    // TODO(kara): Add input property alternative for node envs.\r\n    return (this._getHostElement().textContent || '').trim();\r\n  }\n/**\n * Selects the option.\n * @return {?}\n */\nselect(): void {\r\n    this._selected = true;\r\n    this._changeDetectorRef.markForCheck();\r\n    this._emitSelectionChangeEvent();\r\n  }\n/**\n * Deselects the option.\n * @return {?}\n */\ndeselect(): void {\r\n    this._selected = false;\r\n    this._changeDetectorRef.markForCheck();\r\n    this._emitSelectionChangeEvent();\r\n  }\n/**\n * Sets focus onto this option.\n * @return {?}\n */\nfocus(): void {\r\n    const /** @type {?} */ element = this._getHostElement();\r\n\r\n    if (typeof element.focus === 'function') {\r\n      element.focus();\r\n    }\r\n  }\n/**\n * This method sets display styles on the option to make it appear\ractive. This is used by the ActiveDescendantKeyManager so key\revents will display the proper options as active on arrow key events.\n * @return {?}\n */\nsetActiveStyles(): void {\r\n    if (!this._active) {\r\n      this._active = true;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\n/**\n * This method removes display styles on the option that made it appear\ractive. This is used by the ActiveDescendantKeyManager so key\revents will display the proper options as active on arrow key events.\n * @return {?}\n */\nsetInactiveStyles(): void {\r\n    if (this._active) {\r\n      this._active = false;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\n/**\n * Gets the label to be used when determining whether the option should be focused.\n * @return {?}\n */\ngetLabel(): string {\r\n    return this.viewValue;\r\n  }\n/**\n * Ensures the option is selected when activated from the keyboard.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\r\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\r\n      this._selectViaInteraction();\r\n\r\n      // Prevent the page from scrolling down and form submits.\r\n      event.preventDefault();\r\n    }\r\n  }\n/**\n * Selects the option while indicating the selection came from the user. Used to\rdetermine if the select's view -> model callback should be invoked.\n * @return {?}\n */\n_selectViaInteraction(): void {\r\n    if (!this.disabled) {\r\n      this._selected = this.multiple ? !this._selected : true;\r\n      this._changeDetectorRef.markForCheck();\r\n      this._emitSelectionChangeEvent(true);\r\n    }\r\n  }\n/**\n * Returns the correct tabindex for the option depending on disabled state.\n * @return {?}\n */\n_getTabIndex(): string {\r\n    return this.disabled ? '-1' : '0';\r\n  }\n/**\n * Gets the host DOM element.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\r\n    return this._element.nativeElement;\r\n  }\n/**\n * Emits the selection change event.\n * @param {?=} isUserInput\n * @return {?}\n */\nprivate _emitSelectionChangeEvent(isUserInput = false): void {\r\n    this.onSelectionChange.emit(new MdOptionSelectionChange(this, isUserInput));\r\n  }\n/**\n * Counts the amount of option group labels that precede the specified option.\r\\@param optionIndex Index of the option at which to start counting.\r\\@param options Flat list of all of the options.\r\\@param optionGroups Flat list of all of the option groups.\n * @param {?} optionIndex\n * @param {?} options\n * @param {?} optionGroups\n * @return {?}\n */\nstatic countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MdOption>,\r\n    optionGroups: QueryList<MdOptgroup>): number {\r\n\r\n    if (optionGroups.length) {\r\n      let /** @type {?} */ optionsArray = options.toArray();\r\n      let /** @type {?} */ groups = optionGroups.toArray();\r\n      let /** @type {?} */ groupCounter = 0;\r\n\r\n      for (let /** @type {?} */ i = 0; i < optionIndex + 1; i++) {\r\n        if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\r\n          groupCounter++;\r\n        }\r\n      }\r\n\r\n      return groupCounter;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: 'md-option, mat-option',\r\n  host: {\r\n    'role': 'option',\r\n    '[attr.tabindex]': '_getTabIndex()',\r\n    '[class.mat-selected]': 'selected',\r\n    '[class.mat-option-multiple]': 'multiple',\r\n    '[class.mat-active]': 'active',\r\n    '[id]': 'id',\r\n    '[attr.aria-selected]': 'selected.toString()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[class.mat-option-disabled]': 'disabled',\r\n    '(click)': '_selectViaInteraction()',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    'class': 'mat-option',\r\n  },\r\n  templateUrl: 'option.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  viewProviders: [{provide: MATERIAL_COMPATIBILITY_MODE, useValue: true}],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n{type: MdOptgroup, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'disabled': [{ type: Input },],\n'onSelectionChange': [{ type: Output },],\n};\n}\n\nfunction MdOption_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOption.ctorParameters;\n/** @type {?} */\nMdOption.propDecorators;\n/** @type {?} */\nMdOption.prototype._selected;\n/** @type {?} */\nMdOption.prototype._active;\n/** @type {?} */\nMdOption.prototype._multiple;\n/** @type {?} */\nMdOption.prototype._disableRipple;\n/**\n * Whether the option is disabled.\n * @type {?}\n */\nMdOption.prototype._disabled;\n/** @type {?} */\nMdOption.prototype._id;\n/**\n * The form value of the option.\n * @type {?}\n */\nMdOption.prototype.value;\n/**\n * Event emitted when the option is selected or deselected.\n * @type {?}\n */\nMdOption.prototype.onSelectionChange;\n/** @type {?} */\nMdOption.prototype._element;\n/** @type {?} */\nMdOption.prototype._changeDetectorRef;\n/** @type {?} */\nMdOption.prototype.group;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\r\nimport {mixinDisabled, CanDisable} from '../common-behaviors/disabled';\n/**\n * \\@docs-private\n */\nexport class MdOptgroupBase { }\r\nexport const /** @type {?} */ _MdOptgroupMixinBase = mixinDisabled(MdOptgroupBase);\r\n\r\n// Counter for unique group ids.\r\nlet /** @type {?} */ _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `md-option`.\n */\nexport class MdOptgroup extends _MdOptgroupMixinBase implements CanDisable {\n/**\n * Label for the option group.\n */\nlabel: string;\n/**\n * Unique id for the underlying label.\n */\n_labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: 'md-optgroup, mat-optgroup',\r\n  templateUrl: 'optgroup.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  inputs: ['disabled'],\r\n  host: {\r\n    'class': 'mat-optgroup',\r\n    'role': 'group',\r\n    '[class.mat-optgroup-disabled]': 'disabled',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.aria-labelledby]': '_labelId',\r\n  }\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n};\n}\n\nfunction MdOptgroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptgroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOptgroup.ctorParameters;\n/** @type {?} */\nMdOptgroup.propDecorators;\n/**\n * Label for the option group.\n * @type {?}\n */\nMdOptgroup.prototype.label;\n/**\n * Unique id for the underlying label.\n * @type {?}\n */\nMdOptgroup.prototype._labelId;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {NgModule} from '@angular/core';\r\nimport {MdPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\nexport class MdPseudoCheckboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  exports: [MdPseudoCheckbox],\r\n  declarations: [MdPseudoCheckbox]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdPseudoCheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPseudoCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPseudoCheckboxModule.ctorParameters;\n}\n\r\n\r\n\r\nexport {MdPseudoCheckboxState,MdPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\r\n\r\nexport type MdPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\rMeant to be used when the checkbox is purely decorative and a large number of them will be\rincluded, such as for the options in a multi-select. Uses no SVGs or complex animations.\rNote that theming is meant to be handled by the parent element, e.g.\r`mat-primary .mat-pseudo-checkbox`.\r\rNote that this component will be completely invisible to screen-reader users. This is *not*\rinterchangeable with <md-checkbox> and should *not* be used if the user would directly interact\rwith the checkbox. The pseudo-checkbox should only be used as an implementation detail of\rmore complex components that appropriately handle selected / checked state.\r\\@docs-private\n */\nexport class MdPseudoCheckbox {\n/**\n * Display state of the checkbox.\n */\nstate: MdPseudoCheckboxState = 'unchecked';\n/**\n * Whether the checkbox is disabled.\n */\ndisabled: boolean = false;\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'md-pseudo-checkbox, mat-pseudo-checkbox',\r\n  styleUrls: ['pseudo-checkbox.css'],\r\n  template: '',\r\n  host: {\r\n    'class': 'mat-pseudo-checkbox',\r\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\r\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\r\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\r\n  },\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction MdPseudoCheckbox_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPseudoCheckbox.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPseudoCheckbox.ctorParameters;\n/** @type {?} */\nMdPseudoCheckbox.propDecorators;\n/**\n * Display state of the checkbox.\n * @type {?}\n */\nMdPseudoCheckbox.prototype.state;\n/**\n * Whether the checkbox is disabled.\n * @type {?}\n */\nMdPseudoCheckbox.prototype.disabled;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {NgModule} from '@angular/core';\r\nimport {ScrollDispatchModule, VIEWPORT_RULER_PROVIDER} from '@angular/cdk/scrolling';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {MdCommonModule} from '../common-behaviors/common-module';\r\nimport {MdRipple} from './ripple';\r\n\r\nexport {MdRipple, RippleGlobalOptions, MD_RIPPLE_GLOBAL_OPTIONS} from './ripple';\r\nexport {RippleRef, RippleState} from './ripple-ref';\r\nexport {RippleConfig, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION} from './ripple-renderer';\nexport class MdRippleModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [MdCommonModule, PlatformModule, ScrollDispatchModule],\r\n  exports: [MdRipple, MdCommonModule],\r\n  declarations: [MdRipple],\r\n  providers: [VIEWPORT_RULER_PROVIDER],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRippleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRippleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRippleModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  Inject,\r\n  NgZone,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  InjectionToken,\r\n  Optional,\r\n} from '@angular/core';\r\nimport {ViewportRuler} from '@angular/cdk/scrolling';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\r\nimport {RippleRef} from './ripple-ref';\r\n\r\nexport interface RippleGlobalOptions {\r\n  disabled?: boolean;\r\n  baseSpeedFactor?: number;\r\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n */\nexport const MD_RIPPLE_GLOBAL_OPTIONS =\r\n    new InjectionToken<RippleGlobalOptions>('md-ripple-global-options');\nexport class MdRipple implements OnChanges, OnDestroy {\r\n\r\n  /**\r\n   * The element that triggers the ripple when click events are received. Defaults to the\r\n   * directive's host element.\r\n   */\r\n  // Prevent TS metadata emit from referencing HTMLElement in ripple.js\r\n  // Otherwise running this code in a Node environment (e.g Universal) will not work.\r\n   trigger: HTMLElement|HTMLElement;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\rthan originating from the location of the click event.\n */\ncentered: boolean;\n/**\n * Whether click events will not trigger the ripple. Ripples can be still launched manually\rby using the `launch()` method.\n */\ndisabled: boolean;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\rwill be the distance from the center of the ripple to the furthest corner of the host element's\rbounding rectangle.\n */\nradius: number = 0;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\rsetting it to 0.5 will cause the animations to take twice as long.\rA changed speedFactor will not modify the fade-out duration of the ripples.\n */\nspeedFactor: number = 1;\n/**\n * Custom color for ripples.\n */\ncolor: string;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n */\nunbounded: boolean;\n/**\n * @return {?}\n */\nget _matRippleTrigger() { return this.trigger; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleTrigger(v) { this.trigger = v; }\n/**\n * @return {?}\n */\nget _matRippleCentered() { return this.centered; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleCentered(v) { this.centered = v; }\n/**\n * @return {?}\n */\nget _matRippleDisabled() { return this.disabled; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleDisabled(v) { this.disabled = v; }\n/**\n * @return {?}\n */\nget _matRippleRadius() { return this.radius; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleRadius(v) { this.radius = v; }\n/**\n * @return {?}\n */\nget _matRippleSpeedFactor() { return this.speedFactor; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleSpeedFactor(v) { this.speedFactor = v; }\n/**\n * @return {?}\n */\nget _matRippleColor() { return this.color; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleColor(v) { this.color = v; }\n/**\n * @return {?}\n */\nget _matRippleUnbounded() { return this.unbounded; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleUnbounded(v) { this.unbounded = v; }\n/**\n * Renderer for the ripple DOM manipulations.\n */\nprivate _rippleRenderer: RippleRenderer;\n/**\n * Options that are set globally for all ripples.\n */\nprivate _globalOptions: RippleGlobalOptions;\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} platform\n * @param {?} globalOptions\n */\nconstructor(\r\n    elementRef: ElementRef,\r\n    ngZone: NgZone,\r\n    ruler: ViewportRuler,\r\n    platform: Platform,\r\n      globalOptions: RippleGlobalOptions\r\n  ) {\r\n    this._rippleRenderer = new RippleRenderer(elementRef, ngZone, ruler, platform);\r\n    this._globalOptions = globalOptions ? globalOptions : {};\r\n\r\n    this._updateRippleRenderer();\r\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\r\n    if ((changes['trigger'] || changes['_matRippleTrigger']) && this.trigger) {\r\n      this._rippleRenderer.setTriggerElement(this.trigger);\r\n    }\r\n\r\n    this._updateRippleRenderer();\r\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\r\n    // Set the trigger element to null to cleanup all listeners.\r\n    this._rippleRenderer.setTriggerElement(null);\r\n  }\n/**\n * Launches a manual ripple at the specified position.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nlaunch(pageX: number, pageY: number, config = this.rippleConfig): RippleRef {\r\n    return this._rippleRenderer.fadeInRipple(pageX, pageY, config);\r\n  }\n/**\n * Fades out all currently showing ripple elements.\n * @return {?}\n */\nfadeOutAll() {\r\n    this._rippleRenderer.fadeOutAll();\r\n  }\n/**\n * Ripple configuration from the directive's input values.\n * @return {?}\n */\nget rippleConfig(): RippleConfig {\r\n    return {\r\n      centered: this.centered,\r\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\r\n      radius: this.radius,\r\n      color: this.color\r\n    };\r\n  }\n/**\n * Updates the ripple renderer with the latest ripple configuration.\n * @return {?}\n */\n_updateRippleRenderer() {\r\n    this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\r\n    this._rippleRenderer.rippleConfig = this.rippleConfig;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[md-ripple], [mat-ripple], [mdRipple], [matRipple]',\r\n  exportAs: 'mdRipple, matRipple',\r\n  host: {\r\n    'class': 'mat-ripple',\r\n    '[class.mat-ripple-unbounded]': 'unbounded'\r\n  }\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: Input, args: ['mdRippleTrigger', ] },],\n'centered': [{ type: Input, args: ['mdRippleCentered', ] },],\n'disabled': [{ type: Input, args: ['mdRippleDisabled', ] },],\n'radius': [{ type: Input, args: ['mdRippleRadius', ] },],\n'speedFactor': [{ type: Input, args: ['mdRippleSpeedFactor', ] },],\n'color': [{ type: Input, args: ['mdRippleColor', ] },],\n'unbounded': [{ type: Input, args: ['mdRippleUnbounded', ] },],\n'_matRippleTrigger': [{ type: Input, args: ['matRippleTrigger', ] },],\n'_matRippleCentered': [{ type: Input, args: ['matRippleCentered', ] },],\n'_matRippleDisabled': [{ type: Input, args: ['matRippleDisabled', ] },],\n'_matRippleRadius': [{ type: Input, args: ['matRippleRadius', ] },],\n'_matRippleSpeedFactor': [{ type: Input, args: ['matRippleSpeedFactor', ] },],\n'_matRippleColor': [{ type: Input, args: ['matRippleColor', ] },],\n'_matRippleUnbounded': [{ type: Input, args: ['matRippleUnbounded', ] },],\n};\n}\n\nfunction MdRipple_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRipple.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRipple.ctorParameters;\n/** @type {?} */\nMdRipple.propDecorators;\n/** @type {?} */\nMdRipple.prototype.trigger;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\rthan originating from the location of the click event.\n * @type {?}\n */\nMdRipple.prototype.centered;\n/**\n * Whether click events will not trigger the ripple. Ripples can be still launched manually\rby using the `launch()` method.\n * @type {?}\n */\nMdRipple.prototype.disabled;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\rwill be the distance from the center of the ripple to the furthest corner of the host element's\rbounding rectangle.\n * @type {?}\n */\nMdRipple.prototype.radius;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\rsetting it to 0.5 will cause the animations to take twice as long.\rA changed speedFactor will not modify the fade-out duration of the ripples.\n * @type {?}\n */\nMdRipple.prototype.speedFactor;\n/**\n * Custom color for ripples.\n * @type {?}\n */\nMdRipple.prototype.color;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n * @type {?}\n */\nMdRipple.prototype.unbounded;\n/**\n * Renderer for the ripple DOM manipulations.\n * @type {?}\n */\nMdRipple.prototype._rippleRenderer;\n/**\n * Options that are set globally for all ripples.\n * @type {?}\n */\nMdRipple.prototype._globalOptions;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {ElementRef, NgZone} from '@angular/core';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {ViewportRuler} from '@angular/cdk/scrolling';\r\nimport {RippleRef, RippleState} from './ripple-ref';\n/**\n * Fade-in duration for the ripples. Can be modified with the speedFactor option.\n */\nexport const RIPPLE_FADE_IN_DURATION = 450;\n/**\n * Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor.\n */\nexport const RIPPLE_FADE_OUT_DURATION = 400;\r\n\r\nexport type RippleConfig = {\r\n  color?: string;\r\n  centered?: boolean;\r\n  radius?: number;\r\n  speedFactor?: number;\r\n  persistent?: boolean;\r\n};\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\rThe constructor takes a reference to the ripple directive's host element and a map of DOM\revent handlers to be installed on the element that triggers ripple animations.\rThis will eventually become a custom renderer once Angular support exists.\r\\@docs-private\n */\nexport class RippleRenderer {\n/**\n * Element where the ripples are being added to.\n */\nprivate _containerElement: HTMLElement;\n/**\n * Element which triggers the ripple elements on mouse events.\n */\nprivate _triggerElement: HTMLElement | null;\n/**\n * Whether the mouse is currently down or not.\n */\nprivate _isMousedown: boolean = false;\n/**\n * Events to be registered on the trigger element.\n */\nprivate _triggerEvents = new Map<string, any>();\n/**\n * Set of currently active ripple references.\n */\nprivate _activeRipples = new Set<RippleRef>();\n/**\n * Ripple config for all ripples created by events.\n */\nrippleConfig: RippleConfig = {};\n/**\n * Whether mouse ripples should be created or not.\n */\nrippleDisabled: boolean = false;\n/**\n * @param {?} elementRef\n * @param {?} _ngZone\n * @param {?} _ruler\n * @param {?} platform\n */\nconstructor(\r\n      elementRef: ElementRef,\nprivate _ngZone: NgZone,\nprivate _ruler: ViewportRuler,\r\n      platform: Platform) {\r\n    // Only do anything if we're on the browser.\r\n    if (platform.isBrowser) {\r\n      this._containerElement = elementRef.nativeElement;\r\n\r\n      // Specify events which need to be registered on the trigger.\r\n      this._triggerEvents.set('mousedown', this.onMousedown.bind(this));\r\n      this._triggerEvents.set('mouseup', this.onMouseup.bind(this));\r\n      this._triggerEvents.set('mouseleave', this.onMouseLeave.bind(this));\r\n\r\n      // By default use the host element as trigger element.\r\n      this.setTriggerElement(this._containerElement);\r\n    }\r\n  }\n/**\n * Fades in a ripple at the given coordinates.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nfadeInRipple(pageX: number, pageY: number, config: RippleConfig = {}): RippleRef {\r\n    let /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\r\n\r\n    if (config.centered) {\r\n      pageX = containerRect.left + containerRect.width / 2;\r\n      pageY = containerRect.top + containerRect.height / 2;\r\n    } else {\r\n      // Subtract scroll values from the coordinates because calculations below\r\n      // are always relative to the viewport rectangle.\r\n      let /** @type {?} */ scrollPosition = this._ruler.getViewportScrollPosition();\r\n      pageX -= scrollPosition.left;\r\n      pageY -= scrollPosition.top;\r\n    }\r\n\r\n    let /** @type {?} */ radius = config.radius || distanceToFurthestCorner(pageX, pageY, containerRect);\r\n    let /** @type {?} */ duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));\r\n    let /** @type {?} */ offsetX = pageX - containerRect.left;\r\n    let /** @type {?} */ offsetY = pageY - containerRect.top;\r\n\r\n    let /** @type {?} */ ripple = document.createElement('div');\r\n    ripple.classList.add('mat-ripple-element');\r\n\r\n    ripple.style.left = `${offsetX - radius}px`;\r\n    ripple.style.top = `${offsetY - radius}px`;\r\n    ripple.style.height = `${radius * 2}px`;\r\n    ripple.style.width = `${radius * 2}px`;\r\n\r\n    // If the color is not set, the default CSS color will be used.\r\n    ripple.style.backgroundColor = config.color || null;\r\n    ripple.style.transitionDuration = `${duration}ms`;\r\n\r\n    this._containerElement.appendChild(ripple);\r\n\r\n    // By default the browser does not recalculate the styles of dynamically created\r\n    // ripple elements. This is critical because then the `scale` would not animate properly.\r\n    enforceStyleRecalculation(ripple);\r\n\r\n    ripple.style.transform = 'scale(1)';\r\n\r\n    // Exposed reference to the ripple that will be returned.\r\n    let /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\r\n\r\n    rippleRef.state = RippleState.FADING_IN;\r\n\r\n    // Add the ripple reference to the list of all active ripples.\r\n    this._activeRipples.add(rippleRef);\r\n\r\n    // Wait for the ripple element to be completely faded in.\r\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\r\n    this.runTimeoutOutsideZone(() => {\r\n      rippleRef.state = RippleState.VISIBLE;\r\n\r\n      if (!config.persistent && !this._isMousedown) {\r\n        rippleRef.fadeOut();\r\n      }\r\n    }, duration);\r\n\r\n    return rippleRef;\r\n  }\n/**\n * Fades out a ripple reference.\n * @param {?} rippleRef\n * @return {?}\n */\nfadeOutRipple(rippleRef: RippleRef) {\r\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\r\n    if (!this._activeRipples.delete(rippleRef)) {\r\n      return;\r\n    }\r\n\r\n    let /** @type {?} */ rippleEl = rippleRef.element;\r\n\r\n    rippleEl.style.transitionDuration = `${RIPPLE_FADE_OUT_DURATION}ms`;\r\n    rippleEl.style.opacity = '0';\r\n\r\n    rippleRef.state = RippleState.FADING_OUT;\r\n\r\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\r\n    this.runTimeoutOutsideZone(() => {\r\n      rippleRef.state = RippleState.HIDDEN; /** @type {?} */((\r\n      rippleEl.parentNode)).removeChild(rippleEl);\r\n    }, RIPPLE_FADE_OUT_DURATION);\r\n  }\n/**\n * Fades out all currently active ripples.\n * @return {?}\n */\nfadeOutAll() {\r\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\r\n  }\n/**\n * Sets the trigger element and registers the mouse events.\n * @param {?} element\n * @return {?}\n */\nsetTriggerElement(element: HTMLElement | null) {\r\n    // Remove all previously register event listeners from the trigger element.\r\n    if (this._triggerElement) {\r\n      this._triggerEvents.forEach((fn, type) => { /** @type {?} */((\r\n        this._triggerElement)).removeEventListener(type, fn);\r\n      });\r\n    }\r\n\r\n    if (element) {\r\n      // If the element is not null, register all event listeners on the trigger element.\r\n      this._ngZone.runOutsideAngular(() => {\r\n        this._triggerEvents.forEach((fn, type) => element.addEventListener(type, fn));\r\n      });\r\n    }\r\n\r\n    this._triggerElement = element;\r\n  }\n/**\n * Listener being called on mousedown event.\n * @param {?} event\n * @return {?}\n */\nprivate onMousedown(event: MouseEvent) {\r\n    if (!this.rippleDisabled) {\r\n      this._isMousedown = true;\r\n      this.fadeInRipple(event.pageX, event.pageY, this.rippleConfig);\r\n    }\r\n  }\n/**\n * Listener being called on mouseup event.\n * @return {?}\n */\nprivate onMouseup() {\r\n    this._isMousedown = false;\r\n\r\n    // Fade-out all ripples that are completely visible and not persistent.\r\n    this._activeRipples.forEach(ripple => {\r\n      if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\r\n        ripple.fadeOut();\r\n      }\r\n    });\r\n  }\n/**\n * Listener being called on mouseleave event.\n * @return {?}\n */\nprivate onMouseLeave() {\r\n    if (this._isMousedown) {\r\n      this.onMouseup();\r\n    }\r\n  }\n/**\n * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n * @param {?} fn\n * @param {?=} delay\n * @return {?}\n */\nprivate runTimeoutOutsideZone(fn: Function, delay = 0) {\r\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\r\n  }\r\n\r\n}\n\nfunction RippleRenderer_tsickle_Closure_declarations() {\n/**\n * Element where the ripples are being added to.\n * @type {?}\n */\nRippleRenderer.prototype._containerElement;\n/**\n * Element which triggers the ripple elements on mouse events.\n * @type {?}\n */\nRippleRenderer.prototype._triggerElement;\n/**\n * Whether the mouse is currently down or not.\n * @type {?}\n */\nRippleRenderer.prototype._isMousedown;\n/**\n * Events to be registered on the trigger element.\n * @type {?}\n */\nRippleRenderer.prototype._triggerEvents;\n/**\n * Set of currently active ripple references.\n * @type {?}\n */\nRippleRenderer.prototype._activeRipples;\n/**\n * Ripple config for all ripples created by events.\n * @type {?}\n */\nRippleRenderer.prototype.rippleConfig;\n/**\n * Whether mouse ripples should be created or not.\n * @type {?}\n */\nRippleRenderer.prototype.rippleDisabled;\n/** @type {?} */\nRippleRenderer.prototype._ngZone;\n/** @type {?} */\nRippleRenderer.prototype._ruler;\n}\n\n/**\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element: HTMLElement) {\r\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\r\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\r\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\r\n  window.getComputedStyle(element).getPropertyValue('opacity');\r\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\r\n  const /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\r\n  const /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\r\n  return Math.sqrt(distX * distX + distY * distY);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nexport type RippleState = number;\nexport let RippleState: any = {};\nRippleState.FADING_IN = 0;\nRippleState.VISIBLE = 1;\nRippleState.FADING_OUT = 2;\nRippleState.HIDDEN = 3;\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n/**\n * Current state of the ripple reference.\n */\nstate: RippleState = RippleState.HIDDEN;\n/**\n * @param {?} _renderer\n * @param {?} element\n * @param {?} config\n */\nconstructor(\nprivate _renderer: RippleRenderer,\npublic element: HTMLElement,\npublic config: RippleConfig) {\r\n  }\n/**\n * Fades out the ripple element.\n * @return {?}\n */\nfadeOut() {\r\n    this._renderer.fadeOutRipple(this);\r\n  }\r\n}\n\nfunction RippleRef_tsickle_Closure_declarations() {\n/**\n * Current state of the ripple reference.\n * @type {?}\n */\nRippleRef.prototype.state;\n/** @type {?} */\nRippleRef.prototype._renderer;\n/** @type {?} */\nRippleRef.prototype.element;\n/** @type {?} */\nRippleRef.prototype.config;\n}\n\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {\r\n  NgModule,\r\n  Directive,\r\n  Renderer2,\r\n  ElementRef,\r\n  QueryList,\r\n} from '@angular/core';\r\nimport {MdCommonModule} from '../common-behaviors/common-module';\n/**\n * Shared directive to count lines inside a text area, such as a list item.\rLine elements can be extracted with a \\@ContentChildren(MdLine) query, then\rcounted by checking the query list's length.\n */\nexport class MdLine {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[md-line], [mat-line], [mdLine], [matLine]',\r\n  host: {'class': 'mat-line'}\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdLine_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLine.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdLine.ctorParameters;\n}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\r\\@docs-private\n */\nexport class MdLineSetter {\n/**\n * @param {?} _lines\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(private _lines: QueryList<MdLine>,\nprivate _renderer: Renderer2,\nprivate _element: ElementRef) {\r\n    this._setLineClass(this._lines.length);\r\n\r\n    this._lines.changes.subscribe(() => {\r\n      this._setLineClass(this._lines.length);\r\n    });\r\n  }\n/**\n * @param {?} count\n * @return {?}\n */\nprivate _setLineClass(count: number): void {\r\n    this._resetClasses();\r\n    if (count === 2 || count === 3) {\r\n      this._setClass(`mat-${count}-line`, true);\r\n    } else if (count > 3) {\r\n      this._setClass(`mat-multi-line`, true);\r\n    }\r\n  }\n/**\n * @return {?}\n */\nprivate _resetClasses(): void {\r\n    this._setClass('mat-2-line', false);\r\n    this._setClass('mat-3-line', false);\r\n    this._setClass('mat-multi-line', false);\r\n  }\n/**\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nprivate _setClass(className: string, isAdd: boolean): void {\r\n    if (isAdd) {\r\n      this._renderer.addClass(this._element.nativeElement, className);\r\n    } else {\r\n      this._renderer.removeClass(this._element.nativeElement, className);\r\n    }\r\n  }\r\n\r\n}\n\nfunction MdLineSetter_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLineSetter.prototype._lines;\n/** @type {?} */\nMdLineSetter.prototype._renderer;\n/** @type {?} */\nMdLineSetter.prototype._element;\n}\n\nexport class MdLineModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [MdCommonModule],\r\n  exports: [MdLine, MdCommonModule],\r\n  declarations: [MdLine],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdLineModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLineModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdLineModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Injectable, isDevMode} from '@angular/core';\r\nimport {HammerGestureConfig} from '@angular/platform-browser';\r\nimport {HammerStatic, HammerInstance, Recognizer, RecognizerStatic} from './gesture-annotations';\nexport class GestureConfig extends HammerGestureConfig {\nprivate _hammer: HammerStatic = typeof window !== 'undefined' ? ( /** @type {?} */((window as any))).Hammer : null;\r\n\r\n  /* List of new event names to add to the gesture support list */\r\n  events: string[] = this._hammer ? [\r\n    'longpress',\r\n    'slide',\r\n    'slidestart',\r\n    'slideend',\r\n    'slideright',\r\n    'slideleft'\r\n  ] : [];\nconstructor() {\r\n    super();\r\n\r\n    if (!this._hammer && isDevMode()) {\r\n      console.warn(\r\n        'Could not find HammerJS. Certain Angular Material ' +\r\n        'components may not work correctly.'\r\n      );\r\n    }\r\n  }\n/**\n * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\r\rOur gesture names come from the Material Design gestures spec:\rhttps://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\r\rMore information on default recognizers can be found in Hammer docs:\rhttp://hammerjs.github.io/recognizer-pan/\rhttp://hammerjs.github.io/recognizer-press/\r\r\\@param element Element to which to assign the new HammerJS gestures.\r\\@returns Newly-created HammerJS instance.\n * @param {?} element\n * @return {?}\n */\nbuildHammer(element: HTMLElement): HammerInstance {\r\n    const /** @type {?} */ mc = new this._hammer(element);\r\n\r\n    // Default Hammer Recognizers.\r\n    let /** @type {?} */ pan = new this._hammer.Pan();\r\n    let /** @type {?} */ swipe = new this._hammer.Swipe();\r\n    let /** @type {?} */ press = new this._hammer.Press();\r\n\r\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\r\n    // Otherwise the previous `recognizeWith` will be dropped.\r\n    // TODO: Confirm threshold numbers with Material Design UX Team\r\n    let /** @type {?} */ slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\r\n    let /** @type {?} */ longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\r\n\r\n    // Overwrite the default `pan` event to use the swipe event.\r\n    pan.recognizeWith(swipe);\r\n\r\n    // Add customized gestures to Hammer manager\r\n    mc.add([swipe, press, pan, slide, longpress]);\r\n\r\n    return /** @type {?} */(( mc as HammerInstance));\r\n  }\n/**\n * Creates a new recognizer, without affecting the default recognizers of HammerJS\n * @param {?} base\n * @param {?} options\n * @param {...?} inheritances\n * @return {?}\n */\nprivate _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\r\n    let /** @type {?} */ recognizer = new ( /** @type {?} */((base.constructor as RecognizerStatic)))(options);\r\n\r\n    inheritances.push(base);\r\n    inheritances.forEach(item => recognizer.recognizeWith(item));\r\n\r\n    return recognizer;\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GestureConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nGestureConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGestureConfig.ctorParameters;\n/** @type {?} */\nGestureConfig.prototype._hammer;\n/** @type {?} */\nGestureConfig.prototype.events;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {InjectionToken} from '@angular/core';\r\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\n/**\n * Injection token that can be used to specify the global error options.\n */\nexport const MD_ERROR_GLOBAL_OPTIONS = new InjectionToken<ErrorOptions>('md-error-global-options');\r\n\r\nexport type ErrorStateMatcher =\r\n    (control: FormControl, form: FormGroupDirective | NgForm) => boolean;\r\n\r\nexport interface ErrorOptions {\r\n  errorStateMatcher?: ErrorStateMatcher;\r\n}\n/**\n * Returns whether control is invalid and is either touched or is a part of a submitted form.\n * @param {?} control\n * @param {?} form\n * @return {?}\n */\nexport function defaultErrorStateMatcher(control: FormControl, form: FormGroupDirective | NgForm) {\r\n  const /** @type {?} */ isSubmitted = form && form.submitted;\r\n  return !!(control.invalid && (control.touched || isSubmitted));\r\n}\n/**\n * Returns whether control is invalid and is either dirty or is a part of a submitted form.\n * @param {?} control\n * @param {?} form\n * @return {?}\n */\nexport function showOnDirtyErrorStateMatcher(control: FormControl,\r\n    form: FormGroupDirective | NgForm) {\r\n  const /** @type {?} */ isSubmitted = form && form.submitted;\r\n  return !!(control.invalid && (control.dirty || isSubmitted));\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {NgModule} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_LOCALE_PROVIDER} from './date-adapter';\r\nimport {NativeDateAdapter} from './native-date-adapter';\r\nimport {MD_DATE_FORMATS} from './date-formats';\r\nimport {MD_NATIVE_DATE_FORMATS} from './native-date-formats';\r\n\r\nexport {MAT_DATE_LOCALE,MAT_DATE_LOCALE_PROVIDER,DateAdapter} from './date-adapter';\r\nexport {MdDateFormats,MD_DATE_FORMATS} from './date-formats';\r\nexport {NativeDateAdapter} from './native-date-adapter';\r\nexport {MD_NATIVE_DATE_FORMATS} from './native-date-formats';\nexport class NativeDateModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  providers: [\r\n    {provide: DateAdapter, useClass: NativeDateAdapter},\r\n    MAT_DATE_LOCALE_PROVIDER\r\n  ],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NativeDateModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNativeDateModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNativeDateModule.ctorParameters;\n}\n\nexport class MdNativeDateModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [NativeDateModule],\r\n  providers: [{provide: MD_DATE_FORMATS, useValue: MD_NATIVE_DATE_FORMATS}],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdNativeDateModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdNativeDateModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdNativeDateModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {MdDateFormats} from './date-formats';\r\n\r\n\r\nexport const /** @type {?} */ MD_NATIVE_DATE_FORMATS: MdDateFormats = {\r\n  parse: {\r\n    dateInput: null,\r\n  },\r\n  display: {\r\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\r\n    monthYearLabel: {year: 'numeric', month: 'short'},\r\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\r\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\r\n  }\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Inject, Injectable, Optional} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\r\nimport {extendObject} from '../util/object-extend';\n/**\n * Whether the browser supports the Intl API.\n */\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/**\n * The default month names to use if Intl API is not available.\n */\nconst DEFAULT_MONTH_NAMES = {\r\n  'long': [\r\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\r\n    'October', 'November', 'December'\r\n  ],\r\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\r\n};\n/**\n * The default date names to use if Intl API is not available.\n */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n/**\n * The default day of the week names to use if Intl API is not available.\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\r\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\r\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\r(https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\rbecause the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\r\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n  const /** @type {?} */ valuesArray = Array(length);\r\n  for (let /** @type {?} */ i = 0; i < length; i++) {\r\n    valuesArray[i] = valueFunction(i);\r\n  }\r\n  return valuesArray;\r\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nexport class NativeDateAdapter extends DateAdapter<Date> {\n/**\n * @param {?} matDateLocale\n */\nconstructor(  matDateLocale: string) {\r\n    super();\r\n    super.setLocale(matDateLocale);\r\n  }\n/**\n * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\rWithout this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\rthe result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\rwill produce `'8/13/1800'`.\n */\nuseUtcForDisplay = true;\n/**\n * @param {?} date\n * @return {?}\n */\ngetYear(date: Date): number {\r\n    return date.getFullYear();\r\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetMonth(date: Date): number {\r\n    return date.getMonth();\r\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetDate(date: Date): number {\r\n    return date.getDate();\r\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetDayOfWeek(date: Date): number {\r\n    return date.getDay();\r\n  }\n/**\n * @param {?} style\n * @return {?}\n */\ngetMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {month: style});\r\n      return range(12, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, i, 1))));\r\n    }\r\n    return DEFAULT_MONTH_NAMES[style];\r\n  }\n/**\n * @return {?}\n */\ngetDateNames(): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric'});\r\n      return range(31, i => this._stripDirectionalityCharacters(\r\n          dtf.format(new Date(2017, 0, i + 1))));\r\n    }\r\n    return DEFAULT_DATE_NAMES;\r\n  }\n/**\n * @param {?} style\n * @return {?}\n */\ngetDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {weekday: style});\r\n      return range(7, i => this._stripDirectionalityCharacters(\r\n          dtf.format(new Date(2017, 0, i + 1))));\r\n    }\r\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\r\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetYearName(date: Date): string {\r\n    if (SUPPORTS_INTL_API) {\r\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric'});\r\n      return this._stripDirectionalityCharacters(dtf.format(date));\r\n    }\r\n    return String(this.getYear(date));\r\n  }\n/**\n * @return {?}\n */\ngetFirstDayOfWeek(): number {\r\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\r\n    return 0;\r\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetNumDaysInMonth(date: Date): number {\r\n    return this.getDate(this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date) + 1, 0));\r\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nclone(date: Date): Date {\r\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\r\n  }\n/**\n * @param {?} year\n * @param {?} month\n * @param {?} date\n * @return {?}\n */\ncreateDate(year: number, month: number, date: number): Date {\r\n    // Check for invalid month and date (except upper bound on date which we have to check after\r\n    // creating the Date).\r\n    if (month < 0 || month > 11) {\r\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    let /** @type {?} */ result = this._createDateWithOverflow(year, month, date);\r\n\r\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n    if (result.getMonth() != month) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result;\r\n  }\n/**\n * @return {?}\n */\ntoday(): Date {\r\n    return new Date();\r\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nparse(value: any): Date | null {\r\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\r\n    // parameters.\r\n    if (typeof value == 'number') {\r\n      return new Date(value);\r\n    }\r\n    return value ? new Date(Date.parse(value)) : null;\r\n  }\n/**\n * @param {?} date\n * @param {?} displayFormat\n * @return {?}\n */\nformat(date: Date, displayFormat: Object): string {\r\n    if (!this.isValid(date)) {\r\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\r\n    }\r\n    if (SUPPORTS_INTL_API) {\r\n      if (this.useUtcForDisplay) {\r\n        date = new Date(Date.UTC(\r\n            date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\r\n            date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\r\n        displayFormat = extendObject({}, displayFormat, {timeZone: 'utc'});\r\n      }\r\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\r\n      return this._stripDirectionalityCharacters(dtf.format(date));\r\n    }\r\n    return this._stripDirectionalityCharacters(date.toDateString());\r\n  }\n/**\n * @param {?} date\n * @param {?} years\n * @return {?}\n */\naddCalendarYears(date: Date, years: number): Date {\r\n    return this.addCalendarMonths(date, years * 12);\r\n  }\n/**\n * @param {?} date\n * @param {?} months\n * @return {?}\n */\naddCalendarMonths(date: Date, months: number): Date {\r\n    let /** @type {?} */ newDate = this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\r\n\r\n    // It's possible to wind up in the wrong month if the original month has more days than the new\r\n    // month. In this case we want to go to the last day of the desired month.\r\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n    // guarantee this.\r\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\r\n    }\r\n\r\n    return newDate;\r\n  }\n/**\n * @param {?} date\n * @param {?} days\n * @return {?}\n */\naddCalendarDays(date: Date, days: number): Date {\r\n    return this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\r\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ntoIso8601(date: Date): string {\r\n    return [\r\n      date.getUTCFullYear(),\r\n      this._2digit(date.getUTCMonth() + 1),\r\n      this._2digit(date.getUTCDate())\r\n    ].join('-');\r\n  }\n/**\n * @param {?} iso8601String\n * @return {?}\n */\nfromIso8601(iso8601String: string): Date | null {\r\n    // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\r\n    // string is the right format first.\r\n    if (ISO_8601_REGEX.test(iso8601String)) {\r\n      let /** @type {?} */ d = new Date(iso8601String);\r\n      if (this.isValid(d)) {\r\n        return d;\r\n      }\r\n    }\r\n    return null;\r\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nisDateInstance(obj: any) {\r\n    return obj instanceof Date;\r\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nisValid(date: Date) {\r\n    return !isNaN(date.getTime());\r\n  }\n/**\n * Creates a date but allows the month and date to overflow.\n * @param {?} year\n * @param {?} month\n * @param {?} date\n * @return {?}\n */\nprivate _createDateWithOverflow(year: number, month: number, date: number) {\r\n    let /** @type {?} */ result = new Date(year, month, date);\r\n\r\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\r\n    // abbreviations for 19xx.\r\n    if (year >= 0 && year < 100) {\r\n      result.setFullYear(this.getYear(result) - 1900);\r\n    }\r\n    return result;\r\n  }\n/**\n * Pads a number to make it two digits.\r\\@param n The number to pad.\r\\@returns The padded number.\n * @param {?} n\n * @return {?}\n */\nprivate _2digit(n: number) {\r\n    return ('00' + n).slice(-2);\r\n  }\n/**\n * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\rother browsers do not. We remove them to make output consistent and because they interfere with\rdate parsing.\r\\@param str The string to strip direction characters from.\r\\@returns The stripped string.\n * @param {?} str\n * @return {?}\n */\nprivate _stripDirectionalityCharacters(str: string) {\r\n    return str.replace(/[\\u200e\\u200f]/g, '');\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE, ] }, ]},\n];\n}\n\nfunction NativeDateAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nNativeDateAdapter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNativeDateAdapter.ctorParameters;\n/**\n * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\rWithout this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\rthe result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\rwill produce `'8/13/1800'`.\n * @type {?}\n */\nNativeDateAdapter.prototype.useUtcForDisplay;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\rsimilar to Object.assign.\r\r\\@param dest The object which will have properties copied to it.\r\\@param sources The source objects from which properties will be copied.\n * @param {?} dest\n * @param {...?} sources\n * @return {?}\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\r\n  if (dest == null) {\r\n    throw TypeError('Cannot convert undefined or null to object');\r\n  }\r\n\r\n  for (let /** @type {?} */ source of sources) {\r\n    if (source != null) {\r\n      for (let /** @type {?} */ key in source) {\r\n        if (source.hasOwnProperty(key)) {\r\n          dest[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return dest;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {InjectionToken, LOCALE_ID} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subject} from 'rxjs/Subject';\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE');\n/**\n * Provider for MAT_DATE_LOCALE injection token.\n */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n */\nexport abstract class DateAdapter<D> {\n/**\n * The locale to use for all dates.\n */\nprotected locale: any;\n/**\n * A stream that emits when the locale changes.\n * @return {?}\n */\nget localeChanges(): Observable<void> { return this._localeChanges; }\r\n  protected _localeChanges= new Subject<void>();\n/**\n * Gets the year component of the given date.\r\\@param date The date to extract the year from.\r\\@returns The year component.\n * @abstract\n * @param {?} date\n * @return {?}\n */\ngetYear(date: D) {}\n/**\n * Gets the month component of the given date.\r\\@param date The date to extract the month from.\r\\@returns The month component (0-indexed, 0 = January).\n * @abstract\n * @param {?} date\n * @return {?}\n */\ngetMonth(date: D) {}\n/**\n * Gets the date of the month component of the given date.\r\\@param date The date to extract the date of the month from.\r\\@returns The month component (1-indexed, 1 = first of month).\n * @abstract\n * @param {?} date\n * @return {?}\n */\ngetDate(date: D) {}\n/**\n * Gets the day of the week component of the given date.\r\\@param date The date to extract the day of the week from.\r\\@returns The month component (0-indexed, 0 = Sunday).\n * @abstract\n * @param {?} date\n * @return {?}\n */\ngetDayOfWeek(date: D) {}\n/**\n * Gets a list of names for the months.\r\\@param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\r\\@returns An ordered list of all month names, starting with January.\n * @abstract\n * @param {?} style\n * @return {?}\n */\ngetMonthNames(style: 'long' | 'short' | 'narrow') {}\n/**\n * Gets a list of names for the dates of the month.\r\\@returns An ordered list of all date of the month names, starting with '1'.\n * @abstract\n * @return {?}\n */\ngetDateNames() {}\n/**\n * Gets a list of names for the days of the week.\r\\@param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\r\\@returns An ordered list of all weekday names, starting with Sunday.\n * @abstract\n * @param {?} style\n * @return {?}\n */\ngetDayOfWeekNames(style: 'long' | 'short' | 'narrow') {}\n/**\n * Gets the name for the year of the given date.\r\\@param date The date to get the year name for.\r\\@returns The name of the given year (e.g. '2017').\n * @abstract\n * @param {?} date\n * @return {?}\n */\ngetYearName(date: D) {}\n/**\n * Gets the first day of the week.\r\\@returns The first day of the week (0-indexed, 0 = Sunday).\n * @abstract\n * @return {?}\n */\ngetFirstDayOfWeek() {}\n/**\n * Gets the number of days in the month of the given date.\r\\@param date The date whose month should be checked.\r\\@returns The number of days in the month of the given date.\n * @abstract\n * @param {?} date\n * @return {?}\n */\ngetNumDaysInMonth(date: D) {}\n/**\n * Clones the given date.\r\\@param date The date to clone\r\\@returns A new date equal to the given date.\n * @abstract\n * @param {?} date\n * @return {?}\n */\nclone(date: D) {}\n/**\n * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\rmonth and date.\r\\@param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\r\\@param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\r\\@param date The date of month of the date. Must be an integer 1 - length of the given month.\r\\@returns The new date, or null if invalid.\n * @abstract\n * @param {?} year\n * @param {?} month\n * @param {?} date\n * @return {?}\n */\ncreateDate(year: number, month: number, date: number) {}\n/**\n * Gets today's date.\r\\@returns Today's date.\n * @abstract\n * @return {?}\n */\ntoday() {}\n/**\n * Parses a date from a value.\r\\@param value The value to parse.\r\\@param parseFormat The expected format of the value being parsed\r    (type is implementation-dependent).\r\\@returns The parsed date.\n * @abstract\n * @param {?} value\n * @param {?} parseFormat\n * @return {?}\n */\nparse(value: any, parseFormat: any) {}\n/**\n * Formats a date as a string.\r\\@param date The value to format.\r\\@param displayFormat The format to use to display the date as a string.\r\\@returns The formatted date string.\n * @abstract\n * @param {?} date\n * @param {?} displayFormat\n * @return {?}\n */\nformat(date: D, displayFormat: any) {}\n/**\n * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\rcalendar for each year and then finding the closest date in the new month. For example when\radding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\r\\@param date The date to add years to.\r\\@param years The number of years to add (may be negative).\r\\@returns A new date equal to the given one with the specified number of years added.\n * @abstract\n * @param {?} date\n * @param {?} years\n * @return {?}\n */\naddCalendarYears(date: D, years: number) {}\n/**\n * Adds the given number of months to the date. Months are counted as if flipping a page on the\rcalendar for each month and then finding the closest date in the new month. For example when\radding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\r\\@param date The date to add months to.\r\\@param months The number of months to add (may be negative).\r\\@returns A new date equal to the given one with the specified number of months added.\n * @abstract\n * @param {?} date\n * @param {?} months\n * @return {?}\n */\naddCalendarMonths(date: D, months: number) {}\n/**\n * Adds the given number of days to the date. Days are counted as if moving one cell on the\rcalendar for each day.\r\\@param date The date to add days to.\r\\@param days The number of days to add (may be negative).\r\\@returns A new date equal to the given one with the specified number of days added.\n * @abstract\n * @param {?} date\n * @param {?} days\n * @return {?}\n */\naddCalendarDays(date: D, days: number) {}\n/**\n * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\r\\@param date The date to get the ISO date string for.\r\\@returns The ISO date string date string.\n * @abstract\n * @param {?} date\n * @return {?}\n */\ntoIso8601(date: D) {}\n/**\n * Creates a date from an RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339).\r\\@param iso8601String The ISO date string to create a date from\r\\@returns The date created from the ISO date string.\n * @abstract\n * @param {?} iso8601String\n * @return {?}\n */\nfromIso8601(iso8601String: string) {}\n/**\n * Checks whether the given object is considered a date instance by this DateAdapter.\r\\@param obj The object to check\r\\@returns Whether the object is a date instance.\n * @abstract\n * @param {?} obj\n * @return {?}\n */\nisDateInstance(obj: any) {}\n/**\n * Checks whether the given date is valid.\r\\@param date The date to check.\r\\@returns Whether the date is valid.\n * @abstract\n * @param {?} date\n * @return {?}\n */\nisValid(date: D) {}\n/**\n * Sets the locale used for all dates.\r\\@param locale The new locale.\n * @param {?} locale\n * @return {?}\n */\nsetLocale(locale: any) {\r\n    this.locale = locale;\r\n    this._localeChanges.next();\r\n  }\n/**\n * Compares two dates.\r\\@param first The first date to compare.\r\\@param second The second date to compare.\r\\@returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\r    a number greater than 0 if the first date is later.\n * @param {?} first\n * @param {?} second\n * @return {?}\n */\ncompareDate(first: D, second: D): number {\r\n    return this.getYear(first) - this.getYear(second) ||\r\n        this.getMonth(first) - this.getMonth(second) ||\r\n        this.getDate(first) - this.getDate(second);\r\n  }\n/**\n * Checks if two dates are equal.\r\\@param first The first date to check.\r\\@param second The second date to check.\r\\@returns {boolean} Whether the two dates are equal.\r    Null dates are considered equal to other null dates.\n * @param {?} first\n * @param {?} second\n * @return {?}\n */\nsameDate(first: D | null, second: D | null): boolean {\r\n    return first && second ? !this.compareDate(first, second) : first == second;\r\n  }\n/**\n * Clamp the given date between min and max dates.\r\\@param date The date to clamp.\r\\@param min The minimum value to allow. If null or omitted no min is enforced.\r\\@param max The maximum value to allow. If null or omitted no max is enforced.\r\\@returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\r    otherwise `date`.\n * @param {?} date\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nclampDate(date: D, min?: D | null, max?: D | null): D {\r\n    if (min && this.compareDate(date, min) < 0) {\r\n      return min;\r\n    }\r\n    if (max && this.compareDate(date, max) > 0) {\r\n      return max;\r\n    }\r\n    return date;\r\n  }\r\n}\n\nfunction DateAdapter_tsickle_Closure_declarations() {\n/**\n * The locale to use for all dates.\n * @type {?}\n */\nDateAdapter.prototype.locale;\n/** @type {?} */\nDateAdapter.prototype._localeChanges;\n}\n\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\r\n\r\n\r\n// Users of the Dispatcher never need to see this type, but TypeScript requires it to be exported.\r\nexport type UniqueSelectionDispatcherListener = (id: string, name: string) => void;\n/**\n * Class to coordinate unique selection based on name.\rIntended to be consumed as an Angular service.\rThis service is needed because native radio change events are only fired on the item currently\rbeing selected, and we still need to uncheck the previous selection.\r\rThis service does not *store* any IDs and names because they may change at any time, so it is\rless error-prone if they are simply passed through when the events occur.\n */\nexport class UniqueSelectionDispatcher {\nprivate _listeners: UniqueSelectionDispatcherListener[] = [];\n/**\n * Notify other items that selection for the given name has been set.\r\\@param id ID of the item.\r\\@param name Name of the item.\n * @param {?} id\n * @param {?} name\n * @return {?}\n */\nnotify(id: string, name: string) {\r\n    for (let /** @type {?} */ listener of this._listeners) {\r\n      listener(id, name);\r\n    }\r\n  }\n/**\n * Listen for future changes to item selection.\r\\@return Function used to deregister listener\r\n * @param {?} listener\n * @return {?}\n */\nlisten(listener: UniqueSelectionDispatcherListener): () => void {\r\n    this._listeners.push(listener);\r\n    return () => {\r\n      this._listeners = this._listeners.filter((registered: UniqueSelectionDispatcherListener) => {\r\n        return listener !== registered;\r\n      });\r\n    };\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UniqueSelectionDispatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nUniqueSelectionDispatcher.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUniqueSelectionDispatcher.ctorParameters;\n/** @type {?} */\nUniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentDispatcher\n * @return {?}\n */\nexport function UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(\r\n    parentDispatcher: UniqueSelectionDispatcher) {\r\n  return parentDispatcher || new UniqueSelectionDispatcher();\r\n}\n/**\n * \\@docs-private\n */\nexport const UNIQUE_SELECTION_DISPATCHER_PROVIDER = {\r\n  // If there is already a dispatcher available, use that. Otherwise, provide a new one.\r\n  provide: UniqueSelectionDispatcher,\r\n  deps: [[new Optional(), new SkipSelf(), UniqueSelectionDispatcher]],\r\n  useFactory: UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY\r\n};\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Constructor} from './constructor';\r\nimport {CanDisable} from './disabled';\r\n\r\n/** @docs-private */\r\nexport interface HasTabIndex {\r\n  tabIndex: number;\r\n}\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\r\n    : Constructor<HasTabIndex> & T {\r\n  return class extends base {\nprivate _tabIndex: number = defaultTabIndex;\n/**\n * @return {?}\n */\nget tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tabIndex(value: number) {\r\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\r\n      this._tabIndex = value != null ? value : defaultTabIndex;\r\n    }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) {\r\n      super(...args);\r\n    }\r\n  };\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Constructor} from './constructor';\r\n\r\n/** @docs-private */\r\nexport interface CanDisableRipple {\r\n  disableRipple: boolean;\r\n}\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T)\r\n    : Constructor<CanDisableRipple> & T {\r\n  return class extends base {\nprivate _disableRipple: boolean = false;\n/**\n * Whether the ripple effect is disabled or not.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) { super(...args); }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {Constructor} from './constructor';\r\nimport {ElementRef, Renderer2} from '@angular/core';\r\n\r\n/** @docs-private */\r\nexport interface CanColor {\r\n  color: ThemePalette;\r\n}\r\n\r\n/** @docs-private */\r\nexport interface HasRenderer {\r\n  _renderer: Renderer2;\r\n  _elementRef: ElementRef;\r\n}\r\n\r\n/** Possible color palette values.  */\r\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nexport function mixinColor<T extends Constructor<HasRenderer>>(base: T, defaultColor?: ThemePalette)\r\n    : Constructor<CanColor> & T {\r\n  return class extends base {\nprivate _color: ThemePalette;\n/**\n * @return {?}\n */\nget color(): ThemePalette { return this._color; }\n/**\n * @param {?} value\n * @return {?}\n */\nset color(value: ThemePalette) {\r\n      const /** @type {?} */ colorPalette = value || defaultColor;\r\n\r\n      if (colorPalette !== this._color) {\r\n        if (this._color) {\r\n          this._renderer.removeClass(this._elementRef.nativeElement, `mat-${this._color}`);\r\n        }\r\n        if (colorPalette) {\r\n          this._renderer.addClass(this._elementRef.nativeElement, `mat-${colorPalette}`);\r\n        }\r\n\r\n        this._color = colorPalette;\r\n      }\r\n    }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) {\r\n      super(...args);\r\n\r\n      // Set the default color that can be specified from the mixin.\r\n      this.color = defaultColor;\r\n    }\r\n  };\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/platform-browser';\r\nimport {BidiModule} from '@angular/cdk/bidi';\r\nimport {CompatibilityModule} from '../compatibility/compatibility';\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('md-sanity-checks');\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\rcomponents. This includes Bidi, compatibility mode, etc.\r\rThis module should be imported to each top-level component module (e.g., MdTabsModule).\n */\nexport class MdCommonModule {\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n */\nprivate _hasDoneGlobalChecks = false;\n/**\n * @param {?} _document\n * @param {?} _sanityChecksEnabled\n */\nconstructor(\nprivate _document: any,\r\n      _sanityChecksEnabled: boolean) {\r\n\r\n    if (_sanityChecksEnabled && !this._hasDoneGlobalChecks && _document && isDevMode()) {\r\n      this._checkDoctype();\r\n      this._checkTheme();\r\n      this._hasDoneGlobalChecks = true;\r\n    }\r\n  }\n/**\n * @return {?}\n */\nprivate _checkDoctype(): void {\r\n    if (!this._document.doctype) {\r\n      console.warn(\r\n        'Current document does not have a doctype. This may cause ' +\r\n        'some Angular Material components not to behave as expected.'\r\n      );\r\n    }\r\n  }\n/**\n * @return {?}\n */\nprivate _checkTheme(): void {\r\n    if (typeof getComputedStyle === 'function') {\r\n      const /** @type {?} */ testElement = this._document.createElement('div');\r\n\r\n      testElement.classList.add('mat-theme-loaded-marker');\r\n      this._document.body.appendChild(testElement);\r\n\r\n      if (getComputedStyle(testElement).display !== 'none') {\r\n        console.warn(\r\n          'Could not find Angular Material core theme. Most Material ' +\r\n          'components may not work as expected. For more info refer ' +\r\n          'to the theming guide: https://material.angular.io/guide/theming'\r\n        );\r\n      }\r\n\r\n      this._document.body.removeChild(testElement);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [CompatibilityModule, BidiModule],\r\n  exports: [CompatibilityModule, BidiModule],\r\n  providers: [{\r\n    provide: MATERIAL_SANITY_CHECKS, useValue: true,\r\n  }],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS, ] }, ]},\n];\n}\n\nfunction MdCommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCommonModule.ctorParameters;\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n * @type {?}\n */\nMdCommonModule.prototype._hasDoneGlobalChecks;\n/** @type {?} */\nMdCommonModule.prototype._document;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\nimport {NgModule, Directive, Inject, Optional, ElementRef, InjectionToken} from '@angular/core';\r\n\r\nexport const /** @type {?} */ MATERIAL_COMPATIBILITY_MODE = new InjectionToken<boolean>('md-compatibility-mode');\n/**\n * Returns an exception to be thrown if the consumer has used\ran invalid Material prefix on a component.\r\\@docs-private\n * @param {?} prefix\n * @param {?} nodeName\n * @return {?}\n */\nexport function getMdCompatibilityInvalidPrefixError(prefix: string, nodeName: string) {\r\n  return Error(`The \"${prefix}-\" prefix cannot be used in ng-material v1 compatibility mode. ` +\r\n                   `It was used on an \"${nodeName.toLowerCase()}\" element.`);\r\n}\n/**\n * Selector that matches all elements that may have style collisions with AngularJS Material.\n */\nexport const MAT_ELEMENTS_SELECTOR = `\r\n  [mat-button],\r\n  [mat-fab],\r\n  [mat-icon-button],\r\n  [mat-mini-fab],\r\n  [mat-raised-button],\r\n  [matCardSubtitle],\r\n  [matCardTitle],\r\n  [matCellDef],\r\n  [matColumnDef],\r\n  [matDialogActions],\r\n  [matDialogClose],\r\n  [matDialogContent],\r\n  [matDialogTitle],\r\n  [matHeaderCellDef],\r\n  [matHeaderRowDef],\r\n  [matLine],\r\n  [matRowDef],\r\n  [matStepLabel],\r\n  [matStepperNext],\r\n  [matStepperPrevious],\r\n  [matTabLabel],\r\n  [matTabLink],\r\n  [matTabNav],\r\n  [matTooltip],\r\n  [matInput],\r\n  [matPrefix],\r\n  [matSuffix],\r\n  mat-autocomplete,\r\n  mat-button-toggle,\r\n  mat-button-toggle,\r\n  mat-button-toggle-group,\r\n  mat-card,\r\n  mat-card-actions,\r\n  mat-card-content,\r\n  mat-card-footer,\r\n  mat-card-header,\r\n  mat-card-subtitle,\r\n  mat-card-title,\r\n  mat-card-title-group,\r\n  mat-cell,\r\n  mat-checkbox,\r\n  mat-chip,\r\n  mat-dialog-actions,\r\n  mat-dialog-container,\r\n  mat-dialog-content,\r\n  mat-divider,\r\n  mat-error,\r\n  mat-grid-list,\r\n  mat-grid-tile,\r\n  mat-grid-tile-footer,\r\n  mat-grid-tile-header,\r\n  mat-header-cell,\r\n  mat-header-row,\r\n  mat-hint,\r\n  mat-horizontal-stepper,\r\n  mat-icon,\r\n  mat-input-container,\r\n  mat-form-field,\r\n  mat-list,\r\n  mat-list-item,\r\n  mat-menu,\r\n  mat-nav-list,\r\n  mat-option,\r\n  mat-placeholder,\r\n  mat-progress-bar,\r\n  mat-pseudo-checkbox,\r\n  mat-radio-button,\r\n  mat-radio-group,\r\n  mat-row,\r\n  mat-select,\r\n  mat-sidenav,\r\n  mat-sidenav-container,\r\n  mat-slider,\r\n  mat-spinner,\r\n  mat-step,\r\n  mat-tab,\r\n  mat-table,\r\n  mat-tab-group,\r\n  mat-toolbar,\r\n  mat-vertical-stepper`;\n/**\n * Selector that matches all elements that may have style collisions with AngularJS Material.\n */\nexport const MD_ELEMENTS_SELECTOR = `\r\n  [md-button],\r\n  [md-fab],\r\n  [md-icon-button],\r\n  [md-mini-fab],\r\n  [md-raised-button],\r\n  [mdCardSubtitle],\r\n  [mdCardTitle],\r\n  [mdCellDef],\r\n  [mdColumnDef],\r\n  [mdDialogActions],\r\n  [mdDialogClose],\r\n  [mdDialogContent],\r\n  [mdDialogTitle],\r\n  [mdHeaderCellDef],\r\n  [mdHeaderRowDef],\r\n  [mdLine],\r\n  [mdRowDef],\r\n  [mdStepLabel],\r\n  [mdStepperNext],\r\n  [mdStepperPrevious],\r\n  [mdTabLabel],\r\n  [mdTabLink],\r\n  [mdTabNav],\r\n  [mdTooltip],\r\n  [mdInput],\r\n  [mdPrefix],\r\n  [mdSuffix],\r\n  md-autocomplete,\r\n  md-button-toggle,\r\n  md-button-toggle,\r\n  md-button-toggle-group,\r\n  md-card,\r\n  md-card-actions,\r\n  md-card-content,\r\n  md-card-footer,\r\n  md-card-header,\r\n  md-card-subtitle,\r\n  md-card-title,\r\n  md-card-title-group,\r\n  md-cell,\r\n  md-checkbox,\r\n  md-chip,\r\n  md-dialog-actions,\r\n  md-dialog-container,\r\n  md-dialog-content,\r\n  md-divider,\r\n  md-error,\r\n  md-grid-list,\r\n  md-grid-tile,\r\n  md-grid-tile-footer,\r\n  md-grid-tile-header,\r\n  md-header-cell,\r\n  md-header-row,\r\n  md-hint,\r\n  md-horizontal-stepper,\r\n  md-icon,\r\n  md-input-container,\r\n  md-form-field,\r\n  md-list,\r\n  md-list-item,\r\n  md-menu,\r\n  md-nav-list,\r\n  md-option,\r\n  md-placeholder,\r\n  md-progress-bar,\r\n  md-pseudo-checkbox,\r\n  md-radio-button,\r\n  md-radio-group,\r\n  md-row,\r\n  md-select,\r\n  md-sidenav,\r\n  md-sidenav-container,\r\n  md-slider,\r\n  md-spinner,\r\n  md-step,\r\n  md-tab,\r\n  md-table,\r\n  md-tab-group,\r\n  md-toolbar,\r\n  md-vertical-stepper`;\n/**\n * Directive that enforces that the `mat-` prefix cannot be used.\n */\nexport class MatPrefixRejector {\n/**\n * @param {?} isCompatibilityMode\n * @param {?} elementRef\n */\nconstructor(\r\n      isCompatibilityMode: boolean,\r\n    elementRef: ElementRef) {\r\n\r\n    if (!isCompatibilityMode) {\r\n      throw getMdCompatibilityInvalidPrefixError('mat', elementRef.nativeElement.nodeName);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: MAT_ELEMENTS_SELECTOR}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n{type: ElementRef, },\n];\n}\n\nfunction MatPrefixRejector_tsickle_Closure_declarations() {\n/** @type {?} */\nMatPrefixRejector.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatPrefixRejector.ctorParameters;\n}\n\n/**\n * Directive that enforces that the `md-` prefix cannot be used.\n */\nexport class MdPrefixRejector {\n/**\n * @param {?} isCompatibilityMode\n * @param {?} elementRef\n */\nconstructor(\r\n      isCompatibilityMode: boolean,\r\n    elementRef: ElementRef) {\r\n\r\n    if (isCompatibilityMode) {\r\n      throw getMdCompatibilityInvalidPrefixError('md', elementRef.nativeElement.nodeName);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: MD_ELEMENTS_SELECTOR}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n{type: ElementRef, },\n];\n}\n\nfunction MdPrefixRejector_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPrefixRejector.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPrefixRejector.ctorParameters;\n}\n\n/**\n * Module that enforces the default compatibility mode settings. When this module is loaded\rwithout NoConflictStyleCompatibilityMode also being imported, it will throw an error if\rthere are any uses of the `mat-` prefix.\n */\nexport class CompatibilityModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  declarations: [MatPrefixRejector, MdPrefixRejector],\r\n  exports: [MatPrefixRejector, MdPrefixRejector],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CompatibilityModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCompatibilityModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompatibilityModule.ctorParameters;\n}\n\n/**\n * Module that enforces \"no-conflict\" compatibility mode settings. When this module is loaded,\rit will throw an error if there are any uses of the `md-` prefix.\n */\nexport class NoConflictStyleCompatibilityMode {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  providers: [{\r\n    provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,\r\n  }],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NoConflictStyleCompatibilityMode_tsickle_Closure_declarations() {\n/** @type {?} */\nNoConflictStyleCompatibilityMode.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNoConflictStyleCompatibilityMode.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * \\@docs-private\n */\nexport class AnimationCurves {\r\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\r\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\r\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\r\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\r\n}\n\nfunction AnimationCurves_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationCurves.STANDARD_CURVE;\n/** @type {?} */\nAnimationCurves.DECELERATION_CURVE;\n/** @type {?} */\nAnimationCurves.ACCELERATION_CURVE;\n/** @type {?} */\nAnimationCurves.SHARP_CURVE;\n}\n\n/**\n * \\@docs-private\n */\nexport class AnimationDurations {\r\n  static COMPLEX = '375ms';\r\n  static ENTERING = '225ms';\r\n  static EXITING = '195ms';\r\n}\n\nfunction AnimationDurations_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationDurations.COMPLEX;\n/** @type {?} */\nAnimationDurations.ENTERING;\n/** @type {?} */\nAnimationDurations.EXITING;\n}\n\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}"],"names":["Output","Input","Optional","Self","Inject","ViewContainerRef","ElementRef","Overlay","Directive","LEFT_ARROW","isFakeMousedownFromScreenReader","merge","of","OverlayConfig","TemplatePortal","Subscription","InjectionToken","ViewEncapsulation","ESCAPE","switchMap","startWith","RxChain","FocusKeyManager","ChangeDetectionStrategy","Subject","animate","style","transition","state","trigger","CommonModule","NgModule","ChangeDetectorRef","Component","ENTER","SPACE","EventEmitter","VIEWPORT_RULER_PROVIDER","PlatformModule","ScrollDispatchModule","Platform","ViewportRuler","NgZone","isDevMode","Injectable","coerceBooleanProperty"],"mappings":"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"}